--------------------------- MODULE conntrackFixedATIP ---------------------------

EXTENDS Naturals, TLC, Sequences, FiniteSets
\* Modification History
\* Last modified Sat Feb 10 17:06:35 MST 2024 by Tarun Ayyagari
\* Last modified Sat Jan 06 22:57:09 GMT-07:00 2024 by tarun
\* Last modified Tue Feb 07 18:01:31 MST 2023 by conntrack
\* Last modified Mon Feb 06 23:33:18 UTC 2023 by ben
\* Created Tue Oct 11 10:53:30 MDT 2022 by conntrack
(* --algorithm conntrackFixedATIP {

variables
A = "A",
B = "B",
C = "C",
D = "D",
N = "N",
E = "E",
F = "F",
X = "X",
Y = "Y",
Z = "Z",
NN = "NN",
Aa="a", 
Bb="b",
Cc="c",
Dd="d",
Ee="e",
Ff="f",
Gg="g",
Hh="h",
Ii="i",
Jj="j",
Kk="k",
Ll="l",
Mm="m",
Nn="n", 
Oo="o",
Pp="p",
Qq="q", 
Rr="r", 
Ss="s", 
Tt="t",
Uu="u",
Vv="v",
Ww="w", 
Xx="x",
Yy="y",
Zz="z",
H1 = "1",
H2 = "2",

MaxPorts=1,
EP1 = "N1",
PortMap1 = <<>>,
EP2 = "N2",
PortMap2 = <<>>,
TableFull=FALSE,
EvictionReroute=FALSE,
PortScanInv=FALSE,
ATIPInv=FALSE,
MaxTableSize=2,
hosts = <<H1, H2, C>>;
FreeHosts = <<H1, H2>>,

UsedHosts = <<>>,
Ports = <<A, B, C, NN>>,
ExtraPorts = <<D>>;
ExtraExtraPorts = <<Aa, Bb, Cc, Dd,Ee, Ff, Gg, Hh, Ii, Jj, Kk, Ll, Mm, Nn, Oo, Pp, Qq, Rr, Ss, Tt, Uu, Vv, Ww, Xx, Yy, Zz>>;
T = <<>>,
FreeIPs = <<A, B>>,
PrivIPs = <<A, B>>,
PubIPs = <<X,Y,Z>>,
PortSpace = <<D,E,F>>,
UsedIPs = <<>>,
Connections = <<>>,
SendQueue = <<>>,
RcvQueue = <<>>,
MAX = 3,
Marker1 = H1,
Marker2 = H2;
CmdConnect = "Connect";
CmdDisconnect = "Disconnect";
PortSpaceFull = FALSE; 

(* BEGIN: vulnerable versions *)

procedure ConnectVuln(depth)
  variables host, hidx, host_idx, pidx, port_idx
{
  connectVEvtSeqV: call EventSequenceVuln(depth);
  connectVStart:
  if ( Len(FreeHosts) > 0 ) {
      print <<"ConnectVuln:", FreeHosts, FreeHosts>>;
      host_idx := DOMAIN FreeHosts;
      hidx := CHOOSE h \in host_idx : TRUE;
      host := FreeHosts[hidx];
      (*
      FreeIPs := SelectSeq(FreeIPs, LAMBDA e: ~(e=ip));
      UsedIPs := Append(UsedIPs, ip);
      *)
      FreeHosts := SelectSeq(FreeHosts, LAMBDA a: a /= host);
      UsedHosts := Append(UsedHosts, host);
      ip_idx := DOMAIN FreeIPs;
      ipidx := CHOOSE ipp \in ip_idx : TRUE;
      ip := FreeIPs[ipidx];
      FreeIPs := SelectSeq(FreeIPs, LAMBDA d: d /= ip);
      UsedIPs := Append(UsedIPs, ip);
      Connections := Append(Connections, <<ip, host>>);
      (* SendQueue := Append(SendQueue, pkt); *)
  };
  connectVRet: return;
}

procedure DisconnectVuln(depth)
variables ip, host, connDomain, cidx, conn
{
  disconnectVEvtSV: call EventSequenceATIP(depth);
  disconnectVStart: 
  if ( Len(Connections) > 0) {
    connDomain := DOMAIN Connections;
    cidx := CHOOSE c \in connDomain : TRUE;
    conn := Connections[cidx];
    ip := conn[1];
    host := conn[2];

    print << "Disconnect- Before:", host, ip, Connections>>;
    Connections := SelectSeq(Connections, LAMBDA cc: Head(cc)/=ip);
    UsedIPs := SelectSeq(UsedIPs, LAMBDA ccc: ccc/=ip);
    FreeIPs := Append(FreeIPs, ip);
    
    FreeHosts := Append(FreeHosts, host);
    UsedHosts := SelectSeq(UsedHosts, LAMBDA m: m /= host);
    
    print << "Disconnect- After: ", host, ip, Connections>>;
  };
  disconnectRet: return ;
}

(*Manually connect instead of randomly selecting one of the IPs.*)
procedure ConnectMan(host, ip)
  variables hidx, host_idx, pidx, port_idx
{
  connectManStart:
  if ( Len(FreeHosts) > 0 ) {
      print << "ConnectMan - BEFORE ", FreeHosts, FreeIPs, Connections>>;

      (* *)FreeIPs := SelectSeq(FreeIPs, LAMBDA e: ~(e=ip));
      UsedIPs := Append(UsedIPs, ip); 
      FreeHosts := SelectSeq(FreeHosts, LAMBDA a: a /= host);
      UsedHosts := Append(UsedHosts, host);
      (*  *)  Connections := Append(Connections,  <<ip, host>>);
      print << "ConnectMan - AFTER ", FreeHosts, FreeIPs, Connections>>;
      port_idx := DOMAIN Ports;
      pidx := CHOOSE p \in port_idx : TRUE;
  };
  connectManRet: return;
}

procedure DisconnectMan(host, ip)
variables connDomain, cidx, conn
{
  disconnectManStart: 

  if ( Len(Connections) > 0) {
    print << "DisconnectMan - Before:", host, ip, Connections>>;
    Connections := SelectSeq(Connections, LAMBDA cc: Head(cc)/=ip);
    UsedIPs := SelectSeq(UsedIPs, LAMBDA ccc: ccc/=ip);
    FreeIPs := Append(FreeIPs, ip);
    FreeHosts := Append(FreeHosts, host);
    UsedHosts := SelectSeq(UsedHosts, LAMBDA m: m /= host);
    print << "DisconnectMan - After: ", host, ip, Connections>>;
    (* Remove translations for host that disconnected. *)
    disconnectVulnPurgeOrphans1: T := SelectSeq(T, LAMBDA e: e.orig.saddr /= ip);
    disconnectVulnPurgeOrphans2: T := SelectSeq(T, LAMBDA e: e.orig.saddr /= host);    
    if (host=H1) {
        PortMap1 := <<>>;
    } else {
        PortMap2 := <<>>;
    };

    
  };
  disconnectManRet: return ;
}

procedure DisconnectVulnMan(host, ip)
variables connDomain, cidx, conn
{
  disconnectVulnManStart: 

  if ( Len(Connections) > 0) {

    print << "DisconnectVulnMan- Before:", host, ip, Connections>>;     
    Connections := SelectSeq(Connections, LAMBDA cc: Head(cc)/=ip);
    UsedIPs := SelectSeq(UsedIPs, LAMBDA ccc: ccc/=ip);
    FreeIPs := Append(FreeIPs, ip);
    FreeHosts := Append(FreeHosts, host);
    UsedHosts := SelectSeq(UsedHosts, LAMBDA m: m /= host);
    print << "DisconnectVulnMan - After: ", host, ip, Connections>>;
    (* Remove translations for host that disconnected. *)    
  };
  disconnectVulnManRet: return ;
}

procedure PubToPrivVuln(depth)
variables pkt, ipkt, entry, conn, hostMarker, ip_idx, ipidx, ip, host
{
  pubtoprivVEvt3: call EventSequenceATIP(depth);
  pubtoprivVStart:
  if (Len(SendQueue) > 0) {
    pkt := Head(SendQueue);
    print <<"PubToPrivMan - Len(SendQueue) > 0:", pkt, Connections, T>>;
    SendQueue := Tail(SendQueue);
    if (Len(T) > 0) {
      print <<"PubToPrivMan - Len(T) > 0:">>;
      entry := SelectSeq(T, LAMBDA e: e.reply.saddr=pkt.saddr /\ 
                                      e.reply.sport=pkt.sport /\
                                      e.reply.daddr=pkt.daddr /\
                                      e.reply.dport=pkt.dport);
      if (entry=defaultInitValue) {
        pubtirprivVDE: return ;
      };
      pubtoprivEEmpty:
      if (Len(entry) <= 0) {
         print <<"PubToPrivVuln - Empty Entry">>;
         if (pkt.dport = N ) {
            if (pkt.daddr = N) 
            {
                (*Connect to a listening port. *)
                if (Len(FreeIPs) > 0) {
                ip_idx := DOMAIN FreeIPs;
                ipidx := CHOOSE ipp \in ip_idx : TRUE;
                ip := FreeIPs[ipidx];
                FreeIPs := SelectSeq(FreeIPs, LAMBDA d: d /= ip);
                UsedIPs := Append(UsedIPs, ip);
                host := pkt.saddr;
                Connections := Append(Connections, <<ip, host>>);
                print<<"Added Connection",Connections>>;
                } (*else {
                assert(TRUE);
                }*);
            }
      }
         (* assert(FALSE); We can just let this slide since it's OK in real networks.*)
      } else {
        print <<"PubToPrivMan - Len(entry) > -0:", entry, pkt>>;
        (* There is a matching translation/routing rule. *)
        pubtoPrivElse: entry := Head(entry);
        if (entry.reply.dport=N) {
            if (entry.reply.daddr=N)
            {
                print  <<"PubToPrivMan - PortShadow: ", entry, pkt>>;
                ATIPInv:=TRUE;
            }
        };
        if ( entry.host_marker/=pkt.host_marker ) {
          print <<"PubToPrivMan - entry.host_marker/=pkt.host_marker:", entry, pkt>>;
          (* 
          EvictionReroute and Request Diversion:
 
          The case when the host creates a private host creates an entry and a different host sends a packet
          to the intermediary is not always error in at least two cases, when the host expects 
          a response and its entry is evicted and replaced by anothe private host and when the port
          is a listening port. Otherwise, this looks like NAT traverseral or P2P traffic.
          
          Error because of a bad eviction. The host who generated the packet
          is different from the host receiving the packet. *)
          if (pkt.host_marker = H1) {
            Marker1 := entry.host_marker;
          } else {
            Marker2 := entry.host_marker;
          };
          print <<"PubToPrivMan-Eviction Error: pkt", pkt, " entry", entry, "Connections:", Connections, "T: ", T>>;              
          (* assert(entry.host_marker= pkt.host_marker); *)
        };
        conn := SelectSeq(Connections, LAMBDA e: entry.orig.saddr = Head(e));
        if (Len(conn) > 0) {
          pubtoprivVConngt1: conn := Head(conn);
          pubtoprivVConngt2: hostMarker := conn[2];
          (* PortScanning: Error because of a switched private host host.
          print <<"PubToPriv - Address Management Error: hostMarker", hostMarker, " entry: ", entry, "conn", conn, "pkt", pkt>>;
          print <<"Marker1", Marker1, "Marker2", Marker2>>;*)
          if ( hostMarker = H1 ) {
            if (entry.host_marker = H2) {
              PortScanInv := TRUE;
            };
            Marker1 := entry.host_marker;
          } else {
            if (entry.host_marker = H1) {
              PortScanInv := TRUE;
            };       
            Marker2 := entry.host_marker;
          };
          (* print <<"PubToPriv - Address Management Error: hostMarker", hostMarker, " entry: ", entry, "conn", conn, "pkt", pkt>>;
          print <<"Marker1", Marker1, "Marker2", Marker2>>;
          HostMarkers[hostMarker] := entry.host_marker;              
          assert( hostMarker = entry.host_marker);*)
        };        
      };
    }else {
        print <<"PubToPrivMan - Empty Entry">>;
         if (pkt.dport = N ) {
            if (pkt.daddr = N)
            {
                (*Connect to a listening port. *)
                if (Len(FreeIPs) > 0) {
                ip_idx := DOMAIN FreeIPs;
                ipidx := CHOOSE ipp \in ip_idx : TRUE;
                ip := FreeIPs[ipidx];
                FreeIPs := SelectSeq(FreeIPs, LAMBDA d: d /= ip);
                UsedIPs := Append(UsedIPs, ip);
                host := pkt.saddr;
                Connections := Append(Connections, <<ip, host>>);
                print<<"Added Connection",Connections>>;
                } (*else {
                assert(TRUE);
                }*);
            }
      }
    };
  };
  pubtopriVvRet: return ;
}

procedure PubToPrivMan()
variables pkt, ipkt, entry, conn, hostMarker, ip_idx, ipidx, ip, host,IP
{
  pubtoprivManStart:
  if (Len(SendQueue) > 0) {
    pkt := Head(SendQueue);
    print <<"PubToPrivMan - Len(SendQueue) > 0:", pkt, Connections, T>>;
    SendQueue := Tail(SendQueue);
    if (Len(T) > 0) {
      print <<"PubToPrivMan - Len(T) > 0:">>;
      entry := SelectSeq(T, LAMBDA e: e.reply.saddr=pkt.saddr /\ 
                                      e.reply.sport=pkt.sport /\
                                      e.reply.daddr=pkt.daddr /\
                                      e.reply.dport=pkt.dport);
      if (Len(entry) <= 0) {
        \* assert(FALSE); (*We can just let this slide since it's OK in real networks.*)
        print <<"PubToPrivVuln - Empty Entry">>;
         if (pkt.dport = N ) {
            if (pkt.daddr = N)
            {
        (*Connect to a listening port. *)
                if (Len(FreeIPs) > 0) {
                ip_idx := DOMAIN FreeIPs;
                ipidx := CHOOSE ipp \in ip_idx : TRUE;
                ip := FreeIPs[ipidx];
                FreeIPs := SelectSeq(FreeIPs, LAMBDA d: d /= ip);
                UsedIPs := Append(UsedIPs, ip);
                host := pkt.saddr;
                Connections := Append(Connections, <<ip, host>>);
                print<<"Added Connection",Connections>>;
                } (*else {
                assert(TRUE);
                }*);
            }
      }
      } else {
        print <<"PubToPrivMan - Len(entry) > -0:", entry, pkt>>;
        (* There is a matching translation/routing rule. *)
        pubtoPrivElse: entry := Head(entry);
        if (entry.reply.dport=N) {
            if (entry.reply.daddr=N)
            {
                IP := SelectSeq(PrivIPs, LAMBDA e: e=entry.orig.saddr);
                if(Len(IP)>0)
                {
                    print <<"PubToPrivMan - PortShadow: ", entry, pkt>>;
                    ATIPInv:=TRUE;
                }
              
            }
        };
        if ( entry.host_marker/=pkt.host_marker ) {
          print <<"PubToPrivMan - entry.host_marker/=pkt.host_marker:", entry, pkt>>;
          (* EvictionReroute:
          Error because of a bad eviction. The host who generated the packet
          is different from the host receiving the packet. *)
          if (pkt.host_marker = H1) {
             Marker1 := entry.host_marker;
             if (entry.host_marker = H2) {
               EvictionReroute := TRUE;
             };
          } else {
             Marker2 := entry.host_marker;
             if (entry.host_marker = H1) {
               EvictionReroute := TRUE;
             };
          };
          print <<"PubToPrivMan - Eviction Error: pkt", pkt, " entry", entry, "Connections:", Connections, "T: ", T>>;
          (* assert(entry.host_marker= pkt.host_marker); *)
        };
        conn := SelectSeq(Connections, LAMBDA e: entry.orig.saddr = Head(e));
        if (Len(conn) > 0) {
          pubtoprivConngt1: conn := Head(conn);
          pubtoprivConngt2: hostMarker := conn[2];
          (*Error because of a switched host.
          print <<"PubToPriv - Address Management Error: hostMarker", hostMarker, " entry: ", entry, "conn", conn, "pkt", pkt>>;
          print <<"Marker1", Marker1, "Marker2", Marker2>>;*)
          if ( hostMarker = H1 ) {
            if (entry.host_marker = H2) {
              PortScanInv := TRUE;
            };
            Marker1 := entry.host_marker;
          } else {
            if (entry.host_marker = H1) {
              PortScanInv := TRUE;
            };       
            Marker2 := entry.host_marker;
          };
          (* print <<"PubToPriv - Address Management Error: hostMarker", hostMarker, " entry: ", entry, "conn", conn, "pkt", pkt>>;
          print <<"Marker1", Marker1, "Marker2", Marker2>>;
          HostMarkers[hostMarker] := entry.host_marker;              
          assert( hostMarker = entry.host_marker);*)
        };        
      };
    } else {
        print <<"PubToPrivMan - Empty Entry">>;
         if (pkt.dport = N ) {
        (*Connect to a listening port. *)
        if (Len(FreeIPs) > 0) {
          ip_idx := DOMAIN FreeIPs;
          ipidx := CHOOSE ipp \in ip_idx : TRUE;
          ip := FreeIPs[ipidx];
          FreeIPs := SelectSeq(FreeIPs, LAMBDA d: d /= ip);
          UsedIPs := Append(UsedIPs, ip);
          host := pkt.saddr;
          Connections := Append(Connections, <<ip, host>>);
          print<<"Added Connection",Connections>>;
        } (*else {
          assert(TRUE);
        }*);
      }
    };
  } else {
    print <<"PubToPrivMan - Else Len(SendQueue) <= 0">>;
  };
  pubtoprivRet: return ;
}

procedure PrivToPubMan2(conn, sport, dstAddr, dport) 
 variables pkt, hostMarker, daddr, hostidx, hidx,
 otherEntry, i, indicies, portDomain, sourcePort, destPort, new_sport
{
  privtopubManStart:
  if (Len (Connections) > 0) {
    sourcePort := sport; (* Ports[sourcePort]; *)
    privtopubMan2Dport: destPort := dport; (* Ports[destPort]; *)
    daddr := dstAddr; (*hosts[hidx]; *)
    (* *)print <<"PrivToPub - Conn: ", conn>>; 
    hostMarker := Head(Tail(conn));
    pkt := [saddr |-> Head(conn), sport |-> sourcePort, (*XXX: Might need to change this to make sure the old attacks work*)
            daddr |-> daddr, dport |-> destPort,
            host_marker |-> hostMarker
           ];
    print <<"PrivToPubMan - pkt: ", conn, pkt>>;
           
    entry := [host_marker |-> hostMarker,
              orig |-> [saddr |-> pkt.saddr, sport |-> pkt.sport,
                        daddr |-> pkt.daddr, dport |-> pkt.dport],
              reply |-> [saddr |-> pkt.daddr, sport |-> pkt.dport, 
                         daddr |-> N,  dport |-> pkt.sport ]]; (*Doesn't account for selecting a new packet*)

    otherEntry := SelectSeq(T, LAMBDA k: k.reply.saddr=pkt.daddr /\ k.reply.sport=pkt.dport /\
                                         k.reply.daddr=N /\ k.reply.dport=pkt.sport);
    (* *)print <<"PrivToPub - T", T, otherEntry, pkt>>; 
    if ( Len(otherEntry) > 0) {
          T := SelectSeq(T, LAMBDA e: ~(e.reply.saddr=pkt.daddr /\ e.reply.sport=pkt.dport /\
                                        e.reply.daddr=N /\ e.reply.dport=pkt.sport) );
    };
    privtoPubMan2AddT: T := Append(T, entry);
    privtopubPkt: pkt := [saddr |->pkt.daddr, sport |-> pkt.dport,
                          daddr |-> N, dport |-> pkt.sport,
                          host_marker |-> hostMarker];
    SendQueue := Append(SendQueue, pkt);
  };
  privtopubMan2Ret: return;
}
procedure PrivToPubManExit(conn, sport, dstAddr, dport) 
 variables pkt, hostMarker, daddr, hostidx, hidx,
 otherEntry, i, indicies, portDomain, sourcePort, destPort, new_sport
{
  privtopubManStart:
  if (Len (Connections) > 0) {
    sourcePort := sport; (* Ports[sourcePort]; *)
    privtopubMan2Dport: destPort := dport; (* Ports[destPort]; *)
    daddr := dstAddr; (*hosts[hidx]; *)
    (* *)print <<"PrivToPub - Conn: ", conn>>; 
    hostMarker := Head(Tail(conn));
    pkt := [saddr |-> Head(conn), sport |-> sourcePort, (*XXX: Might need to change this to make sure the old attacks work*)
            daddr |-> daddr, dport |-> destPort,
            host_marker |-> hostMarker
           ];
    print <<"PrivToPubMan - pkt: ", conn, pkt>>;
           
    entry := [host_marker |-> hostMarker,
              orig |-> [saddr |-> pkt.saddr, sport |-> pkt.sport,
                        daddr |-> pkt.daddr, dport |-> pkt.dport],
              reply |-> [saddr |-> pkt.daddr, sport |-> pkt.dport, 
                         daddr |-> E,  dport |-> pkt.sport ]]; (*Doesn't account for selecting a new packet*)

    otherEntry := SelectSeq(T, LAMBDA k: k.reply.saddr=pkt.daddr /\ k.reply.sport=pkt.dport /\
                                         k.reply.daddr=E /\ k.reply.dport=pkt.sport);
    (* *)print <<"PrivToPub - T", T, otherEntry, pkt>>; 
    if ( Len(otherEntry) > 0) {
          T := SelectSeq(T, LAMBDA e: ~(e.reply.saddr=pkt.daddr /\ e.reply.sport=pkt.dport /\
                                        e.reply.daddr=E /\ e.reply.dport=pkt.sport) );
    };
    privtoPubMan2AddT: T := Append(T, entry);
    privtopubPkt: pkt := [saddr |->pkt.daddr, sport |-> pkt.dport,
                          daddr |-> E, dport |-> pkt.sport,
                          host_marker |-> hostMarker];
    SendQueue := Append(SendQueue, pkt);
  };
  privtopubMan2Ret: return;
}
procedure PrivToPubVuln(depth)
 variables pkt, conn, hostMarker, daddr, hostidx, hidx,
 otherEntry, i, indicies, portDomain, sourcePort, destPort, new_sport
{
  privtopubV3: call EventSequenceATIP(depth);
  privtopubManStart:
  if (Len (Connections) > 0) {
    indicies := DOMAIN Connections;
    portDomain := DOMAIN Ports;
    sourcePort := CHOOSE pr \in portDomain : TRUE;
    i := CHOOSE f \in indicies : TRUE;
    (* *)print <<"PrivToPub - conn", indecies, conn, Connections>>; 
    privtopubConn: conn := Connections[i];
    sourcePort := Ports[sourcePort];
    portDomain := DOMAIN Ports;
    destPort := CHOOSE h \in portDomain : TRUE;
    privtopubDport: destPort := Ports[destPort];
    hostidx := DOMAIN hosts;
    hidx := CHOOSE hid \in hostidx : TRUE;
    daddr := hosts[hidx];
    (* *) print <<"PrivToPubVuln - Conn: ", conn>>; 
    hostMarker := Head(Tail(conn));

    pkt := [saddr |-> Head(conn), sport |-> sourcePort, (*XXX: Might need to change this to make sure the old attacks work*)
            daddr |-> daddr, dport |-> destPort,
            host_marker |-> hostMarker
           ];
    print <<"PrivToPubMan - pkt: ", conn, pkt>>;
           
    entry := [host_marker |-> hostMarker,
              orig |-> [saddr |-> pkt.saddr, sport |-> pkt.sport,
                        daddr |-> pkt.daddr, dport |-> pkt.dport],
              reply |-> [saddr |-> pkt.daddr, sport |-> pkt.dport, 
                         daddr |-> N,  dport |-> pkt.sport ]]; (*Doesn't account for selecting a new packet*)

    otherEntry := SelectSeq(T, LAMBDA k: k.reply.saddr=pkt.daddr /\ k.reply.sport=pkt.dport /\
                                         k.reply.daddr=N /\ k.reply.dport=pkt.sport /\ k.host_marker /= hostMarker);
    (* *)print <<"PrivToPub - T", T, otherEntry, pkt>>; 
    if ( Len(otherEntry) > 0) {
          T := SelectSeq(T, LAMBDA e: ~(e.reply.saddr=pkt.daddr /\ e.reply.sport=pkt.dport /\
                                        e.reply.daddr=N /\ e.reply.dport=pkt.sport) );
    };
    privtoPubManAddT: T := Append(T, entry);
      if ( Len(T) > MaxTableSize ) {
          TableFull := TRUE;
      };
    
    privtopubPkt: pkt := [saddr |->pkt.daddr, sport |-> pkt.dport,
                          daddr |-> N, dport |-> pkt.sport,
                          host_marker |-> hostMarker];
    SendQueue := Append(SendQueue, pkt);
  };
  privtopubRet: return;
}


procedure PrivToPubMan() 
 variables pkt, conn, hostMarker, daddr, hostidx, hidx,
 otherEntry, i, indicies, portDomain, sourcePort, destPort, new_sport
{
  privtopubManStart:
  if (Len (Connections) > 0) {
    indicies := DOMAIN Connections;
    portDomain := DOMAIN Ports;
    sourcePort := CHOOSE pr \in portDomain : TRUE;
    i := CHOOSE f \in indicies : TRUE;
    privtopubManConn: conn := Connections[i];
    sourcePort := B; (* Ports[sourcePort]; *)
    portDomain := DOMAIN Ports;
    (* *) destPort := CHOOSE h \in portDomain : TRUE; 
    privtopubManDport: destPort := C; (* Ports[destPort]; *)
    hostidx := DOMAIN hosts;
    hidx := CHOOSE hid \in hostidx : TRUE;
    daddr := C; (*hosts[hidx]; *)
    (* *)print <<"PrivToPubMan - Len(connections) > 0: ", indicies, conn, Connections>>; 
    hostMarker := Head(Tail(conn));
    pkt := [saddr |-> Head(conn), sport |-> sourcePort, (*XXX: Might need to change this to make sure the old attacks work*)
            daddr |-> daddr, dport |-> destPort,
            host_marker |-> hostMarker
           ];
    print <<"PrivToPubMan - conn, pkt: ", conn, pkt>>;
           
    entry := [host_marker |-> hostMarker,
              orig |-> [saddr |-> pkt.saddr, sport |-> pkt.sport,
                        daddr |-> pkt.daddr, dport |-> pkt.dport],
              reply |-> [saddr |-> pkt.daddr, sport |-> pkt.dport, 
                         daddr |-> N,  dport |-> pkt.sport ]]; (*Doesn't account for selecting a new packet*)

    otherEntry := SelectSeq(T, LAMBDA k: k.reply.saddr=pkt.daddr /\ k.reply.sport=pkt.dport /\
                                         k.reply.daddr=N /\ k.reply.dport=pkt.sport);
    (* *)print <<"PrivToPubMan - T", T, otherEntry, pkt>>; 
    if ( Len(otherEntry) > 0) {
          T := SelectSeq(T, LAMBDA e: ~(e.reply.saddr=pkt.daddr /\ e.reply.sport=pkt.dport /\
                                        e.reply.daddr=N /\ e.reply.dport=pkt.sport) );
    };
    privtoPubManAddT: T := Append(T, entry);
    privtopubPkt: pkt := [saddr |->pkt.daddr, sport |-> pkt.dport,
                          daddr |-> N, dport |-> pkt.sport,
                          host_marker |-> hostMarker];
    SendQueue := Append(SendQueue, pkt);
  };
  privtopubRet: return;
}
(*END: vulnerable versions *)

(*BEGIN: fixed version*)
procedure Connect(depth)
  variables host, hidx, host_idx, pidx, port_idx
{
  connectStart: call EventSequenceATIP(depth);
  connectIf: if ( Len(FreeHosts) > 0 ) {
      host_idx := DOMAIN FreeHosts;
      hidx := CHOOSE h \in host_idx : TRUE;
      host := FreeHosts[hidx];
      (* print << "Connect - BEFORE ", host, FreeHosts, UsedHosts, Connections>>;
      FreeIPs := SelectSeq(FreeIPs, LAMBDA e: ~(e=ip));
      UsedIPs := Append(UsedIPs, ip); *)
      FreeHosts := SelectSeq(FreeHosts, LAMBDA a: a /= host);
      UsedHosts := Append(UsedHosts, host);
      (* print << "Connect - BEFORE ", host, FreeHosts, UsedHosts, Connections>>;
      Connections := Append(Connections,  <<ip, host>>); *)
      port_idx := DOMAIN Ports;
      pidx := CHOOSE p \in port_idx : TRUE;
      (* The vulnerable version selects an I Pfrom the FreeIPs list, the fixed version does not. Why? Because we are statically assigning an IP to each host and this is this is equivalent to doing that.  *)
      pkt := [ saddr |-> host, sport |-> Ports[pidx],
               daddr |-> N,    dport |-> N,
               cmd |-> CmdConnect,
               host_marker |-> host];

      SendQueue := Append(SendQueue, pkt); 
  };
  connectRet: return;
}
procedure ConnectMan3(connhost,port)
  variables host, hidx, host_idx, pidx, port_idx
{
  connectIf: if ( Len(FreeHosts) > 0 ) {
\*      host_idx := DOMAIN FreeHosts;
\*      hidx := CHOOSE h \in host_idx : TRUE;
\*      host := FreeHosts[hidx];
      (* print << "Connect - BEFORE ", host, FreeHosts, UsedHosts, Connections>>;
      FreeIPs := SelectSeq(FreeIPs, LAMBDA e: ~(e=ip));
      UsedIPs := Append(UsedIPs, ip); *)
      FreeHosts := SelectSeq(FreeHosts, LAMBDA a: a /= host);
      UsedHosts := Append(UsedHosts, host);
      (* print << "Connect - BEFORE ", host, FreeHosts, UsedHosts, Connections>>;
      Connections := Append(Connections,  <<ip, host>>); *)
      port_idx := DOMAIN Ports;
      pidx := CHOOSE p \in port_idx : TRUE;
      (* The vulnerable version selects an I Pfrom the FreeIPs list, the fixed version does not. Why? Because we are statically assigning an IP to each host and this is this is equivalent to doing that.  *)
      pkt := [ saddr |-> connhost, sport |-> port,
               daddr |-> N,    dport |-> N,
               cmd |-> CmdConnect,
               host_marker |-> host];

      SendQueue := Append(SendQueue, pkt); 
  };
  connectRet: return;
}
procedure Disconnect(depth)
variables ip, host, connDomain, cidx, conn
{
  disconnectStart: call EventSequence(depth);
  disconnectIf: 
  if ( Len(Connections) > 0) {
    connDomain := DOMAIN Connections;
    cidx := CHOOSE c \in connDomain : TRUE;
    conn := Connections[cidx];
    ip := conn[1];
    host := conn[2];

    print << "Disconnect- Before:", host, ip, Connections>>;
    Connections := SelectSeq(Connections, LAMBDA cc: Head(cc)/=ip);
    UsedIPs := SelectSeq(UsedIPs, LAMBDA ccc: ccc/=ip);
    FreeIPs := Append(FreeIPs, ip);
     
    (* Remove translations for host that disconnected. *)
    disconnectPurgeOrphans1: T := SelectSeq(T, LAMBDA e: e.orig.saddr /= ip);
    disconnectPurgeOrphans2: T := SelectSeq(T, LAMBDA e: e.orig.saddr /= host);    
    if (host=H1) {
        PortMap1 := <<>>;
    } else {
        PortMap2 := <<>>;
    };
    FreeHosts := Append(FreeHosts, host);
    UsedHosts := SelectSeq(UsedHosts, LAMBDA m: m /= host);
    print << "Disconnect- After: ", host, ip, Connections>>;
  };
  disconnectRet: return ;
}

procedure PubToPriv(depth)
variables pkt, ipkt, entry, conn, hostMarker, ip_idx, ipidx, ip, host
{
  pubtoprivStart: call EventSequence(depth);

  pubtoprivIf: if (Len(SendQueue) > 0) {
    (*
    1. Select a packet from the send queue
    2. Find the entries mapping, if it exists.
    3. Check that the packets host marker and the table entry's host marker are the same.
    4.  If they are, route it else this is an error
    *)
    pkt := Head(SendQueue);
    print <<"PubToPriv", pkt, Connections>>;
    (* print <<"PubToPriv", pkt, SendQueue>>; *)
    SendQueue := Tail(SendQueue);
    entry := SelectSeq(T, LAMBDA e: e.reply.saddr=pkt.saddr /\ 
                                    e.reply.sport=pkt.sport /\
                                    e.reply.daddr=pkt.daddr /\
                                    e.reply.dport=pkt.dport);
    (* print <<"PubToPriv", pkt, entry>>; *)
    (* If there isn't a translation, it's meant for us. *)
    if (Len(entry) <= 0) {
      if (pkt.dport = N ) {
        (*Connect to a listening port. *)
        if (Len(FreeIPs) > 0) {
          ip_idx := DOMAIN FreeIPs;
          ipidx := CHOOSE ipp \in ip_idx : TRUE;
          ip := FreeIPs[ipidx];
          FreeIPs := SelectSeq(FreeIPs, LAMBDA d: d /= ip);
          UsedIPs := Append(UsedIPs, ip);
          host := pkt.saddr;
          Connections := Append(Connections, <<ip, host>>);
        } (*else {
          assert(TRUE);
        }*);
      } else if ( pkt.dport = NN ) {
        (* XXX: Get the packet back to the private realm hosts
        or DO a check *)
        assert(TRUE);
      } else {
        (*XXX: This is when the destination port is not anything.
          In theory, this would lead to an ICMP or something.
        *)
        assert(TRUE);
      };
    } else {
      (* There is a matching translation/routing rule. *)
      pubtoPrivElse: entry := Head(entry);
      
      if (entry.reply.dport=N) {
        print <<"PubToPriv - PortShadow: ", entry, pkt>>;
        ATIPInv:=TRUE;
      };
      if ( entry.host_marker/=pkt.host_marker ) {
        (* EvictionReroute:
              
        Error because of a bad eviction. The host who generated the packet
        is different from the host receiving the packet. *)
        if (pkt.host_marker = H1) {
           Marker1 := entry.host_marker;
           if (entry.host_marker = H2) {
             EvictionReroute := TRUE;
           };
        } else {
           Marker2 := entry.host_marker;        
           if (entry.host_marker = H1) {
             EvictionReroute := TRUE;
           };
        };
        print <<"PubToPriv-Eviction Error: pkt", pkt, " entry", entry, "Connections:", Connections, "T: ", T>>;              
          (* assert(entry.host_marker= pkt.host_marker); *)
      };
      (* PortScan:
          
      Insecure because the incoming packets host_marker doesn't match 
      the host associated with the incoming packet*)
          
      conn := SelectSeq(Connections, LAMBDA e: entry.orig.saddr = Head(e));
      if (Len(conn) > 0) {
        pubtoprivConngt1: conn := Head(conn);
        pubtoprivConngt2: hostMarker := conn[2];
        (*Error because of a switched host.
        print <<"PubToPriv - Address Management Error: hostMarker", hostMarker, " entry: ", entry, "conn", conn, "pkt", pkt>>;
        print <<"Marker1", Marker1, "Marker2", Marker2>>;*)
        if ( hostMarker = H1 ) {
          if (entry.host_marker = H2) {
            PortScanInv := TRUE;
          };
          Marker1 := entry.host_marker;
        } else {
          if (entry.host_marker = H1) {
            PortScanInv := TRUE;
          };       
          Marker2 := entry.host_marker;
        };
        (* print <<"PubToPriv - Address Management Error: hostMarker", hostMarker, " entry: ", entry, "conn", conn, "pkt", pkt>>;
        print <<"Marker1", Marker1, "Marker2", Marker2>>;
        HostMarkers[hostMarker] := entry.host_marker;              
        assert( hostMarker = entry.host_marker);*)
      };
    };
  };
  pubtoprivRet: return ;
}

procedure PrivToPub(depth) 
 variables pkt, conn, hostMarker, daddr, hostidx, hidx, otherEntry, i, indicies, portDomain, sourcePort, destPort, new_sport, good
{
  privtopubStart: call EventSequence(depth);
  privtopubIf: 
  good:=TRUE;
  if (Len (Connections) > 0) {
    indicies := DOMAIN Connections;
    portDomain := DOMAIN Ports;
    sourcePort := CHOOSE pr \in portDomain : TRUE;
    i := CHOOSE f \in indicies : TRUE;
    (* print <<"PrivToPub - conn", indecies, conn, Connections>>; *)
    privtopubConn: conn := Connections[i];
    sourcePort := Ports[sourcePort];
    portDomain := DOMAIN Ports;
    destPort := CHOOSE h \in portDomain : TRUE;
    privtopubDport: destPort := Ports[destPort];
    hostidx := DOMAIN hosts;
    hidx := CHOOSE hid \in hostidx : TRUE;
    daddr := hosts[hidx];
    (* print <<"PrivToPub - Conn: ", conn>>; *)
    hostMarker := Head(Tail(conn));

    if (hostMarker=H1) {
      if (Len(PortMap1) >= MaxPorts) {
          good := FALSE;
          privtopubMaxPorts1: return;
      } else {
        PortMap1 := Append(PortMap1, sourcePort);
      }
    } else {
      if (Len(PortMap2) >= MaxPorts) {
          good := FALSE;
          privtopubMaxPorts2: return;
      } else {
         PortMap2 := Append(PortMap2, sourcePort);
      }
    };
    privtopubGood: if ( good ) {
      privToPubPkt1:
      if (sourcePort = N) {
          if ( hostMarker=H1 ) {
            sourcePort := EP1;
          } else {
            sourcePort := EP2;            
          };
      };
      pkt := [saddr |-> Head(conn), sport |-> sourcePort, (*XXX: Might need to change this to make sure the old attacks work*)
              daddr |-> daddr, dport |-> destPort,
              host_marker |-> hostMarker
             ];
      print <<"PrivToPub - pkt: ", conn, pkt>>;

      entry := [host_marker |-> hostMarker,
                orig |-> [saddr |-> pkt.saddr, sport |-> pkt.sport,
                          daddr |-> pkt.daddr, dport |-> pkt.dport],
                reply |-> [saddr |-> pkt.daddr, sport |-> pkt.dport,
                           daddr |-> N,  dport |-> pkt.sport ]]; (*Doesn't account for selecting a new packet*)

      otherEntry := SelectSeq(T, LAMBDA k: k.reply.saddr=pkt.daddr /\ k.reply.sport=pkt.dport /\
                                           k.reply.daddr=N /\ k.reply.dport=pkt.sport /\
                                           k.host_marker /= hostMarker);
      (* print <<"PrivToPub - T", T, otherEntry, pkt>>; *)
      if ( Len(otherEntry) > 0) {
          (* Should we force the eviction? Do it for now.*)
          print "Evict";
          if (Len(ExtraPorts) > 0) {
            new_sport := Head(ExtraPorts);
            ExtraPorts := Tail(ExtraPorts);
            privToPubNewPort: entry := [host_marker |-> hostMarker,
                      orig |-> [saddr |-> pkt.saddr, sport |-> pkt.sport,
                                daddr |-> pkt.daddr, dport |-> pkt.dport],
                      reply |-> [saddr |-> pkt.daddr, sport |-> pkt.dport, 
                                 daddr |-> N,  dport |-> new_sport ]]; (*Doesn't account for selecting a new packet*)
          
            (* T := SelectSeq(T, LAMBDA e: ~(e.reply.saddr=pkt.daddr /\ e.reply.sport=pkt.dport /\
                                        e.reply.daddr=N /\ e.reply.dport=pkt.sport) );*)
            pkt.sport := new_sport;
          } else {
            PortSpaceFull := TRUE;
            (*
            new_sport := Head(ExtraExtraPorts);
            ExtraExtraPorts := Tail(ExtraExtraPorts);          
            privToPubNewPort2: entry := [host_marker |-> hostMarker,
                      orig |-> [saddr |-> pkt.saddr, sport |-> pkt.sport,
                                daddr |-> pkt.daddr, dport |-> pkt.dport],
                      reply |-> [saddr |-> pkt.daddr, sport |-> pkt.dport, 
                                 daddr |-> N,  dport |-> new_sport ]]; (*Doesn't account for selecting a new packet*)
            *)
          };
          (* print <<"PrivToPub - Evicting from T", T, otherEntry>>; *)        
      };
      (* print <<"PrivToPub - T", T, otherEntry>>; *)
      privToPubAppendT: T:= Append(T, entry);
      if ( Len(T) >= MaxTableSize ) {
          TableFull := TRUE;
      };
      (* print <<"PrivToPub - T", T>>; *)
      privtopubPkt: pkt := [saddr |->pkt.daddr, sport |-> pkt.dport,
                            daddr |-> N, dport |-> pkt.sport,
                            host_marker |-> hostMarker];
      SendQueue := Append(SendQueue, pkt);
    };
  };
  privtopubRet: return;
}
(*END: fixed version*)

procedure EventSequenceVuln(depth)
variables i, j, ip, host, indecies
{
        (* print <<"EventSequence - depth=", i>>; *)
      evtSeqVStart:
      if (depth <= 0) {
        return ;
      } else {
        either {
          if ( Len(FreeIPs) > 0) {
            (* eventSeqConnIf1: indecies := DOMAIN FreeIPs;
            eventSeqConnIf2 :j := CHOOSE a \in indecies : TRUE;
            print <<"EventSequence - j = ", j>>; *)
            \* print <<"EventSequenceVuln - depth = ", depth>>;
            call ConnectVuln(depth - 1);
          };
        } or {
            if (Len (Connections) > 0) {
                (* eventSeqDiscIf1: indecies := DOMAIN Connections;
                eventSeqDiscIf2: j := CHOOSE a \in indecies : TRUE;
                conn := Connections[j]; *)
                print <<"EventSequenceVuln - Disconnect", Connections>>;
                call DisconnectVuln(depth - 1);
            };
        } or {
          if (Len(Connections) > 0) {
              print <<"EventSequenceVuln - PrivToPubVuln:", Connections>>;
              call PrivToPubVuln(depth - 1);
          };
        } or {
           if (Len(SendQueue) > 0) {
            \*    print <<"EventSequenceVuln - PubToPrivVuln: depth - ", depth, SendQueue>>;           
               call PubToPrivVuln(depth - 1);
           };
        };
    };
  evtSeqVRet: return ;
};

procedure EventSequence(depth)
variables i, j, ip, host, indecies
{
     evtSeqStart:
     if (depth <= 0) { 
       evtSeqD0: return ;
     } else {
        (* print <<"EventSequence - depth=", i>>; *)
        either {
          if ( Len(FreeIPs) > 0) {
            (* eventSeqConnIf1: indecies := DOMAIN FreeIPs;
            eventSeqConnIf2 :j := CHOOSE a \in indecies : TRUE;
            print <<"EventSequence - j = ", j>>; *)
            call Connect(depth - 1);
          };
        } or {
            if (Len (Connections) > 0) {
                (* eventSeqDiscIf1: indecies := DOMAIN Connections;
                print <<"EventSequence - FreeIPs", Connections>>;
                eventSeqDiscIf2: j := CHOOSE a \in indecies : TRUE;
                conn := Connections[j]; *)
                call Disconnect(depth - 1);
            };
        } or {
          if (Len(Connections) > 0) {
              call PrivToPub(depth - 1);
          };
        } or {
           if (Len(SendQueue) > 0) {
               call PubToPriv(depth - 1);
           };
        };
    };

  evtSeqRet: return ;
};

procedure CheckModel() 
variables i
{
   
   checkModelStart: 
   i := 0;   
   checkModelWhile: while ( i < MAX) {
     call EventSequence(MAX);
     checkModelInc: i := i + 1; 
   };
   checkModelRet: return;
}


procedure CheckModelVuln() 
variables i
{
   
   checkModelVulnStart: 
   i := 0;   
   checkModelVulnWhile: while ( i < MAX) {
     call EventSequenceVuln(MAX);
     checkModelVulnInc: i := i + 1; 
   };
   checkModelVulnRet: return;
}


procedure PubToPrivExitVuln(depth)
variables pkt, ipkt, entry, conn, hostMarker, ip_idx, ipidx, ip, host
{
  pubtoprivVEvt3: call EventSequenceVuln(depth);
  pubtoprivVStart:
  if (Len(SendQueue) > 0) {
    pkt := Head(SendQueue);
    print <<"PubToPrivMan - Len(SendQueue) > 0:", pkt, Connections, T>>;
    SendQueue := Tail(SendQueue);
    if (Len(T) > 0) {
      print <<"PubToPrivMan - Len(T) > 0:">>;
      entry := SelectSeq(T, LAMBDA e: e.reply.saddr=pkt.saddr /\ 
                                      e.reply.sport=pkt.sport /\
                                      e.reply.daddr=pkt.daddr /\
                                      e.reply.dport=pkt.dport);
      if (entry=defaultInitValue) {
        pubtirprivVDE: return ;
      };
      pubtoprivEEmpty:
      if (Len(entry) <= 0) {
         print <<"PubToPrivVuln - Empty Entry">>
         (* assert(FALSE); We can just let this slide since it's OK in real networks.*)
      } else {
        print <<"PubToPrivMan - Len(entry) > -0:", entry, pkt>>;
        (* There is a matching translation/routing rule. *)
        pubtoPrivElse: entry := Head(entry);
        if (entry.reply.dport=E) {
          print <<"PubToPrivMan - PortShadow: ", entry, pkt>>;
        };
        if ( entry.host_marker/=pkt.host_marker ) {
          print <<"PubToPrivMan - entry.host_marker/=pkt.host_marker:", entry, pkt>>;
          (* 
          EvictionReroute and Request Diversion:
 
          The case when the host creates a private host creates an entry and a different host sends a packet
          to the intermediary is not always error in at least two cases, when the host expects 
          a response and its entry is evicted and replaced by anothe private host and when the port
          is a listening port. Otherwise, this looks like NAT traverseral or P2P traffic.
          
          Error because of a bad eviction. The host who generated the packet
          is different from the host receiving the packet. *)
          if (pkt.host_marker = H1) {
            Marker1 := entry.host_marker;
          } else {
            Marker2 := entry.host_marker;
          };
          print <<"PubToPrivMan-Eviction Error: pkt", pkt, " entry", entry, "Connections:", Connections, "T: ", T>>;              
          (* assert(entry.host_marker= pkt.host_marker); *)
        }; 
        conn := SelectSeq(Connections, LAMBDA e: entry.orig.saddr = Head(e));
        if (Len(conn) > 0) {
          pubtoprivVConngt1: conn := Head(conn);
          pubtoprivVConngt2: hostMarker := conn[2];
          (* PortScanning: Error because of a switched private host host.
          print <<"PubToPriv - Address Management Error: hostMarker", hostMarker, " entry: ", entry, "conn", conn, "pkt", pkt>>;
          print <<"Marker1", Marker1, "Marker2", Marker2>>;*)
          if ( hostMarker = H1 ) {
            if (entry.host_marker = H2) {
              PortScanInv := TRUE;
            };
            Marker1 := entry.host_marker;
          } else {
            if (entry.host_marker = H1) {
              PortScanInv := TRUE;
            };       
            Marker2 := entry.host_marker;
          };
          (* print <<"PubToPriv - Address Management Error: hostMarker", hostMarker, " entry: ", entry, "conn", conn, "pkt", pkt>>;
          print <<"Marker1", Marker1, "Marker2", Marker2>>;
          HostMarkers[hostMarker] := entry.host_marker;              
          assert( hostMarker = entry.host_marker);*)
        };        
      };
    };
  };
  pubtopriVvRet: return ;
}
procedure PrivToPubExit(depth)
 variables pkt, conn, hostMarker, daddr, hostidx, hidx,
 otherEntry, i, indicies, portDomain, sourcePort, destPort, new_sport
{
  privtopubV3: call EventSequenceATIP(depth);
  privtopubManStart:
  if (Len (Connections) > 0) {
    indicies := DOMAIN Connections;
    portDomain := DOMAIN Ports;
    sourcePort := CHOOSE pr \in portDomain : TRUE;
    i := CHOOSE f \in indicies : TRUE;
    (* *)print <<"PrivToPub - conn", indecies, conn, Connections>>; 
    privtopubConn: conn := Connections[i];
    sourcePort := Ports[sourcePort];
    portDomain := DOMAIN Ports;
    destPort := CHOOSE h \in portDomain : TRUE;
    privtopubDport: destPort := Ports[destPort];
    hostidx := DOMAIN hosts;
    hidx := CHOOSE hid \in hostidx : TRUE;
    daddr := hosts[hidx];
    (* *) print <<"PrivToPubVuln - Conn: ", conn>>; 
    hostMarker := Head(Tail(conn));

    pkt := [saddr |-> Head(conn), sport |-> sourcePort, (*XXX: Might need to change this to make sure the old attacks work*)
            daddr |-> daddr, dport |-> destPort,
            host_marker |-> hostMarker
           ];
    print <<"PrivToPubMan - pkt: ", conn, pkt>>;
           
    entry := [host_marker |-> hostMarker,
              orig |-> [saddr |-> pkt.saddr, sport |-> pkt.sport,
                        daddr |-> pkt.daddr, dport |-> pkt.dport],
              reply |-> [saddr |-> pkt.daddr, sport |-> pkt.dport, 
                         daddr |-> E,  dport |-> pkt.sport ]]; (*Doesn't account for selecting a new packet*)

    otherEntry := SelectSeq(T, LAMBDA k: k.reply.saddr=pkt.daddr /\ k.reply.sport=pkt.dport /\
                                         k.reply.daddr=E /\ k.reply.dport=pkt.sport /\ k.host_marker /= hostMarker);
    (* *)print <<"PrivToPub - T", T, otherEntry, pkt>>; 
    if ( Len(otherEntry) > 0) {
          T := SelectSeq(T, LAMBDA e: ~(e.reply.saddr=pkt.daddr /\ e.reply.sport=pkt.dport /\
                                        e.reply.daddr=E /\ e.reply.dport=pkt.sport) );
    };
    privtoPubManAddT: T := Append(T, entry);
      if ( Len(T) > MaxTableSize ) {
          TableFull := TRUE;
      };
    
    privtopubPkt: pkt := [saddr |->pkt.daddr, sport |-> pkt.dport,
                          daddr |-> E, dport |-> pkt.sport,
                          host_marker |-> hostMarker];
    SendQueue := Append(SendQueue, pkt);
  };
  privtopubRet: return;
}

procedure PubToPrivExit(depth)
variables pkt, ipkt, entry, conn, hostMarker, ip_idx, ipidx, ip, host
{
  pubtoprivStart: call EventSequence(depth);

  pubtoprivIf: if (Len(SendQueue) > 0) {
    (*
    1. Select a packet from the send queue
    2. Find the entries mapping, if it exists.
    3. Check that the packets host marker and the table entry's host marker are the same.
    4.  If they are, route it else this is an error
    *)
    pkt := Head(SendQueue);
    print <<"PubToPriv", pkt, Connections>>;
    (* print <<"PubToPriv", pkt, SendQueue>>; *)
    SendQueue := Tail(SendQueue);
    entry := SelectSeq(T, LAMBDA e: e.reply.saddr=pkt.saddr /\ 
                                    e.reply.sport=pkt.sport /\
                                    e.reply.daddr=pkt.daddr /\
                                    e.reply.dport=pkt.dport);
    (* print <<"PubToPriv", pkt, entry>>; *)
    (* If there isn't a translation, it's meant for us. *)
    if (Len(entry) <= 0) {
      if (pkt.dport = N ) {
        (*Connect to a listening port. *)
        if (Len(FreeIPs) > 0) {
          ip_idx := DOMAIN FreeIPs;
          ipidx := CHOOSE ipp \in ip_idx : TRUE;
          ip := FreeIPs[ipidx];
          FreeIPs := SelectSeq(FreeIPs, LAMBDA d: d /= ip);
          UsedIPs := Append(UsedIPs, ip);
          host := pkt.saddr;
          Connections := Append(Connections, <<ip, host>>);
        } (*else {
          assert(TRUE);
        }*);
      } else if ( pkt.dport = NN ) {
        (* XXX: Get the packet back to the private realm hosts
        or DO a check *)
        assert(TRUE);
      } else {
        (*XXX: This is when the destination port is not anything.
          In theory, this would lead to an ICMP or something.
        *)
        assert(TRUE);
      };
    } else {
      (* There is a matching translation/routing rule. *)
      pubtoPrivElse: entry := Head(entry);
      
      if (entry.reply.dport=N) {
        print <<"PubToPriv - PortShadow: ", entry, pkt>>;
      };
      if ( entry.host_marker/=pkt.host_marker ) {
        (* EvictionReroute:
              
        Error because of a bad eviction. The host who generated the packet
        is different from the host receiving the packet. *)
        if (pkt.host_marker = H1) {
           Marker1 := entry.host_marker;
           if (entry.host_marker = H2) {
             EvictionReroute := TRUE;
           };
        } else {
           Marker2 := entry.host_marker;        
           if (entry.host_marker = H1) {
             EvictionReroute := TRUE;
           };
        };
        print <<"PubToPriv-Eviction Error: pkt", pkt, " entry", entry, "Connections:", Connections, "T: ", T>>;              
          (* assert(entry.host_marker= pkt.host_marker); *)
      };
      (* PortScan:
          
      Insecure because the incoming packets host_marker doesn't match 
      the host associated with the incoming packet*)
          
      conn := SelectSeq(Connections, LAMBDA e: entry.orig.saddr = Head(e));
      if (Len(conn) > 0) {
        pubtoprivConngt1: conn := Head(conn);
        pubtoprivConngt2: hostMarker := conn[2];
        (*Error because of a switched host.
        print <<"PubToPriv - Address Management Error: hostMarker", hostMarker, " entry: ", entry, "conn", conn, "pkt", pkt>>;
        print <<"Marker1", Marker1, "Marker2", Marker2>>;*)
        if ( hostMarker = H1 ) {
          if (entry.host_marker = H2) {
            PortScanInv := TRUE;
          };
          Marker1 := entry.host_marker;
        } else {
          if (entry.host_marker = H1) {
            PortScanInv := TRUE;
          };       
          Marker2 := entry.host_marker;
        };
        (* print <<"PubToPriv - Address Management Error: hostMarker", hostMarker, " entry: ", entry, "conn", conn, "pkt", pkt>>;
        print <<"Marker1", Marker1, "Marker2", Marker2>>;
        HostMarkers[hostMarker] := entry.host_marker;              
        assert( hostMarker = entry.host_marker);*)
      };
    };
  };
  pubtoprivRet: return ;
}

procedure EventSequenceATIP(depth)
variables i, j, ip, host, indecies
{
     evtSeqStart:
     if (depth <= 0) { 
       evtSeqD0: return ;
     } else {
        (* print <<"EventSequence - depth=", i>>; *)
        either {
          if ( Len(FreeIPs) > 0) {
            (* eventSeqConnIf1: indecies := DOMAIN FreeIPs;
            eventSeqConnIf2 :j := CHOOSE a \in indecies : TRUE;
            print <<"EventSequence - j = ", j>>; *)
            call Connect(depth - 1);
          };
        } or {
            if (Len (Connections) > 0) {
                (* eventSeqDiscIf1: indecies := DOMAIN Connections;
                print <<"EventSequence - FreeIPs", Connections>>;
                eventSeqDiscIf2: j := CHOOSE a \in indecies : TRUE;
                conn := Connections[j]; *)
                call DisconnectVuln(depth - 1);
            };
        } or {
          if (Len(Connections) > 0) {
              call PrivToPubExit(depth - 1);
          };
        } or {
           if (Len(SendQueue) > 0) {
               call PubToPrivVuln(depth - 1);
           };
        };
    };

  evtSeqRet: return ;
};
procedure CheckModelATIP() 
variables i
{
   
   checkModelStart: 
   i := 0;   
   checkModelWhile: while ( i < MAX) {
   print i;
     call EventSequenceATIP(MAX);
     checkModelInc: i := i + 1; 
   };
   checkModelRet: return;
}

procedure ForceATIP()
{
    ATIP1: call ConnectMan3(H1, D); \* Connect()
    ATIP2:print <<"SendQueue after Connect:", SendQueue>>;
    ATIP3:call PubToPrivMan(); \* PubToPrivVuln()
    ATIP4:print <<"SendQueue after pubtopriv:", SendQueue>>;
    ATIP5:print <<"T after pubtopriv: ",Connections>>;
    ATIP6: call PrivToPubMan2(<<A, H1>>,N, Y,F); \*conn, sport, dstAddr, dport PrivToPubVuln()
    ATIP7:print <<"SendQueue after privtopub:", SendQueue>>;
    ATIP8:print <<"T after privtopub: ",T>>;
    ATIP9: call ConnectMan3(H2, F); \* Connect()
    ATIP10:print <<"SendQueue after Connect:", SendQueue>>;
    ATIP11:call PubToPrivMan(); \* PubToPrivVuln
    ATIP12:print <<"SendQueue after pubtopriv:", SendQueue>>;
    ATIP13:print <<"T after pubtopriv: ",T>>;
}
procedure ForceATIPExit()
{
    ATIP1: call ConnectMan3(H1, D); \* Connect()
    ATIP2:print <<"SendQueue after Connect:", SendQueue>>;
    ATIP3:call PubToPrivMan();  \* PubToPrivVuln()
    ATIP4:print <<"SendQueue after pubtopriv:", SendQueue>>;
    ATIP5:print <<"T after pubtopriv: ",T>>;
    ATIP6: call PrivToPubManExit(<<A, H1>>,N, Y,F); \*conn, sport, dstAddr, dport PrivToPubExit()
    ATIP7:print <<"SendQueue after privtopub:", SendQueue>>;
    ATIP8:print <<"T after privtopub: ",T>>;
    ATIP13:call PubToPrivMan(); \* PubToPrivVuln()
    ATIP14:print <<"SendQueue2 after pubtopriv:", SendQueue>>;
    ATIP15:print <<"T2 after pubtopriv: ",T>>;
    ATIP9: call ConnectMan3(H2, F);  \* Connect()
    ATIP10:print <<"SendQueue3 after Connect:", SendQueue>>;
    ATIP11:call PubToPrivMan(); \* PubToPrivVuln()
    ATIP12:print <<"Connections after pubtopriv: ",Connections>>;
}
process (Foo="A") 
variables aa
{
  foo1:
  (* aa := [saddr : {1}, sport : {1, 2},
         daddr : {3, 4}, dport : {5, 6}]; *)
  print "Test";
  
  (* Works again *)
  (* print aa; call OldPortScan(); *) 
  (* Works again *)
  (* call EvictReroute(); *)
  (*   *)
  call CheckModelATIP();

}

} *)
\* BEGIN TRANSLATION (chksum(pcal) = "28f92c4b" /\ chksum(tla) = "1f98f806")
\* Label disconnectRet of procedure DisconnectVuln at line 137 col 18 changed to disconnectRet_
\* Label pubtoprivVEvt3 of procedure PubToPrivVuln at line 209 col 19 changed to pubtoprivVEvt3_
\* Label pubtoprivVStart of procedure PubToPrivVuln at line 211 col 3 changed to pubtoprivVStart_
\* Label pubtirprivVDE of procedure PubToPrivVuln at line 222 col 24 changed to pubtirprivVDE_
\* Label pubtoprivEEmpty of procedure PubToPrivVuln at line 225 col 7 changed to pubtoprivEEmpty_
\* Label pubtoPrivElse of procedure PubToPrivVuln at line 249 col 24 changed to pubtoPrivElse_
\* Label pubtoprivVConngt1 of procedure PubToPrivVuln at line 279 col 30 changed to pubtoprivVConngt1_
\* Label pubtoprivVConngt2 of procedure PubToPrivVuln at line 280 col 30 changed to pubtoprivVConngt2_
\* Label pubtopriVvRet of procedure PubToPrivVuln at line 323 col 18 changed to pubtopriVvRet_
\* Label pubtoPrivElse of procedure PubToPrivMan at line 364 col 24 changed to pubtoPrivElse_P
\* Label pubtoprivConngt1 of procedure PubToPrivMan at line 398 col 29 changed to pubtoprivConngt1_
\* Label pubtoprivConngt2 of procedure PubToPrivMan at line 399 col 29 changed to pubtoprivConngt2_
\* Label pubtoprivRet of procedure PubToPrivMan at line 441 col 17 changed to pubtoprivRet_
\* Label privtopubManStart of procedure PrivToPubMan2 at line 449 col 3 changed to privtopubManStart_
\* Label privtopubMan2Dport of procedure PrivToPubMan2 at line 451 col 25 changed to privtopubMan2Dport_
\* Label privtoPubMan2AddT of procedure PrivToPubMan2 at line 474 col 24 changed to privtoPubMan2AddT_
\* Label privtopubPkt of procedure PrivToPubMan2 at line 475 col 19 changed to privtopubPkt_
\* Label privtopubMan2Ret of procedure PrivToPubMan2 at line 480 col 21 changed to privtopubMan2Ret_
\* Label privtopubManStart of procedure PrivToPubManExit at line 487 col 3 changed to privtopubManStart_P
\* Label privtopubPkt of procedure PrivToPubManExit at line 513 col 19 changed to privtopubPkt_P
\* Label privtopubV3 of procedure PrivToPubVuln at line 524 col 16 changed to privtopubV3_
\* Label privtopubManStart of procedure PrivToPubVuln at line 526 col 3 changed to privtopubManStart_Pr
\* Label privtopubConn of procedure PrivToPubVuln at line 532 col 20 changed to privtopubConn_
\* Label privtopubDport of procedure PrivToPubVuln at line 536 col 21 changed to privtopubDport_
\* Label privtoPubManAddT of procedure PrivToPubVuln at line 562 col 23 changed to privtoPubManAddT_
\* Label privtopubPkt of procedure PrivToPubVuln at line 567 col 19 changed to privtopubPkt_Pr
\* Label privtopubRet of procedure PrivToPubVuln at line 572 col 17 changed to privtopubRet_
\* Label privtopubManStart of procedure PrivToPubMan at line 581 col 3 changed to privtopubManStart_Pri
\* Label privtoPubManAddT of procedure PrivToPubMan at line 615 col 23 changed to privtoPubManAddT_P
\* Label privtopubPkt of procedure PrivToPubMan at line 616 col 19 changed to privtopubPkt_Pri
\* Label privtopubRet of procedure PrivToPubMan at line 621 col 17 changed to privtopubRet_P
\* Label connectIf of procedure Connect at line 630 col 14 changed to connectIf_
\* Label connectRet of procedure Connect at line 651 col 15 changed to connectRet_
\* Label pubtoprivStart of procedure PubToPriv at line 714 col 19 changed to pubtoprivStart_
\* Label pubtoprivIf of procedure PubToPriv at line 716 col 16 changed to pubtoprivIf_
\* Label pubtoPrivElse of procedure PubToPriv at line 759 col 22 changed to pubtoPrivElse_Pu
\* Label pubtoprivConngt1 of procedure PubToPriv at line 791 col 27 changed to pubtoprivConngt1_P
\* Label pubtoprivConngt2 of procedure PubToPriv at line 792 col 27 changed to pubtoprivConngt2_P
\* Label pubtoprivRet of procedure PubToPriv at line 814 col 17 changed to pubtoprivRet_P
\* Label privtopubConn of procedure PrivToPub at line 829 col 20 changed to privtopubConn_P
\* Label privtopubDport of procedure PrivToPub at line 833 col 21 changed to privtopubDport_P
\* Label privtopubPkt of procedure PrivToPub at line 915 col 21 changed to privtopubPkt_Priv
\* Label privtopubRet of procedure PrivToPub at line 921 col 17 changed to privtopubRet_Pr
\* Label evtSeqStart of procedure EventSequence at line 968 col 6 changed to evtSeqStart_
\* Label evtSeqD0 of procedure EventSequence at line 969 col 18 changed to evtSeqD0_
\* Label evtSeqRet of procedure EventSequence at line 998 col 14 changed to evtSeqRet_
\* Label checkModelStart of procedure CheckModel at line 1006 col 4 changed to checkModelStart_
\* Label checkModelWhile of procedure CheckModel at line 1007 col 21 changed to checkModelWhile_
\* Label checkModelInc of procedure CheckModel at line 1009 col 21 changed to checkModelInc_
\* Label checkModelRet of procedure CheckModel at line 1011 col 19 changed to checkModelRet_
\* Label pubtoPrivElse of procedure PubToPrivExitVuln at line 1054 col 24 changed to pubtoPrivElse_Pub
\* Label ATIP1 of procedure ForceATIP at line 1318 col 12 changed to ATIP1_
\* Label ATIP2 of procedure ForceATIP at line 1319 col 11 changed to ATIP2_
\* Label ATIP3 of procedure ForceATIP at line 1320 col 11 changed to ATIP3_
\* Label ATIP4 of procedure ForceATIP at line 1321 col 11 changed to ATIP4_
\* Label ATIP5 of procedure ForceATIP at line 1322 col 11 changed to ATIP5_
\* Label ATIP6 of procedure ForceATIP at line 1323 col 12 changed to ATIP6_
\* Label ATIP7 of procedure ForceATIP at line 1324 col 11 changed to ATIP7_
\* Label ATIP8 of procedure ForceATIP at line 1325 col 11 changed to ATIP8_
\* Label ATIP9 of procedure ForceATIP at line 1326 col 12 changed to ATIP9_
\* Label ATIP10 of procedure ForceATIP at line 1327 col 12 changed to ATIP10_
\* Label ATIP11 of procedure ForceATIP at line 1328 col 12 changed to ATIP11_
\* Label ATIP12 of procedure ForceATIP at line 1329 col 12 changed to ATIP12_
\* Label ATIP13 of procedure ForceATIP at line 1330 col 12 changed to ATIP13_
\* Procedure variable host of procedure ConnectVuln at line 89 col 13 changed to host_
\* Procedure variable hidx of procedure ConnectVuln at line 89 col 19 changed to hidx_
\* Procedure variable host_idx of procedure ConnectVuln at line 89 col 25 changed to host_idx_
\* Procedure variable pidx of procedure ConnectVuln at line 89 col 35 changed to pidx_
\* Procedure variable port_idx of procedure ConnectVuln at line 89 col 41 changed to port_idx_
\* Procedure variable ip of procedure DisconnectVuln at line 116 col 11 changed to ip_
\* Procedure variable host of procedure DisconnectVuln at line 116 col 15 changed to host_D
\* Procedure variable connDomain of procedure DisconnectVuln at line 116 col 21 changed to connDomain_
\* Procedure variable cidx of procedure DisconnectVuln at line 116 col 33 changed to cidx_
\* Procedure variable conn of procedure DisconnectVuln at line 116 col 39 changed to conn_
\* Procedure variable hidx of procedure ConnectMan at line 142 col 13 changed to hidx_C
\* Procedure variable host_idx of procedure ConnectMan at line 142 col 19 changed to host_idx_C
\* Procedure variable pidx of procedure ConnectMan at line 142 col 29 changed to pidx_C
\* Procedure variable port_idx of procedure ConnectMan at line 142 col 35 changed to port_idx_C
\* Procedure variable connDomain of procedure DisconnectMan at line 161 col 11 changed to connDomain_D
\* Procedure variable cidx of procedure DisconnectMan at line 161 col 23 changed to cidx_D
\* Procedure variable conn of procedure DisconnectMan at line 161 col 29 changed to conn_D
\* Procedure variable connDomain of procedure DisconnectVulnMan at line 188 col 11 changed to connDomain_Di
\* Procedure variable cidx of procedure DisconnectVulnMan at line 188 col 23 changed to cidx_Di
\* Procedure variable conn of procedure DisconnectVulnMan at line 188 col 29 changed to conn_Di
\* Procedure variable pkt of procedure PubToPrivVuln at line 207 col 11 changed to pkt_
\* Procedure variable ipkt of procedure PubToPrivVuln at line 207 col 16 changed to ipkt_
\* Procedure variable entry of procedure PubToPrivVuln at line 207 col 22 changed to entry_
\* Procedure variable conn of procedure PubToPrivVuln at line 207 col 29 changed to conn_P
\* Procedure variable hostMarker of procedure PubToPrivVuln at line 207 col 35 changed to hostMarker_
\* Procedure variable ip_idx of procedure PubToPrivVuln at line 207 col 47 changed to ip_idx_
\* Procedure variable ipidx of procedure PubToPrivVuln at line 207 col 55 changed to ipidx_
\* Procedure variable ip of procedure PubToPrivVuln at line 207 col 62 changed to ip_P
\* Procedure variable host of procedure PubToPrivVuln at line 207 col 66 changed to host_P
\* Procedure variable pkt of procedure PubToPrivMan at line 327 col 11 changed to pkt_P
\* Procedure variable ipkt of procedure PubToPrivMan at line 327 col 16 changed to ipkt_P
\* Procedure variable entry of procedure PubToPrivMan at line 327 col 22 changed to entry_P
\* Procedure variable conn of procedure PubToPrivMan at line 327 col 29 changed to conn_Pu
\* Procedure variable hostMarker of procedure PubToPrivMan at line 327 col 35 changed to hostMarker_P
\* Procedure variable ip_idx of procedure PubToPrivMan at line 327 col 47 changed to ip_idx_P
\* Procedure variable ipidx of procedure PubToPrivMan at line 327 col 55 changed to ipidx_P
\* Procedure variable ip of procedure PubToPrivMan at line 327 col 62 changed to ip_Pu
\* Procedure variable host of procedure PubToPrivMan at line 327 col 66 changed to host_Pu
\* Procedure variable pkt of procedure PrivToPubMan2 at line 445 col 12 changed to pkt_Pr
\* Procedure variable hostMarker of procedure PrivToPubMan2 at line 445 col 17 changed to hostMarker_Pr
\* Procedure variable daddr of procedure PrivToPubMan2 at line 445 col 29 changed to daddr_
\* Procedure variable hostidx of procedure PrivToPubMan2 at line 445 col 36 changed to hostidx_
\* Procedure variable hidx of procedure PrivToPubMan2 at line 445 col 45 changed to hidx_P
\* Procedure variable otherEntry of procedure PrivToPubMan2 at line 446 col 2 changed to otherEntry_
\* Procedure variable i of procedure PrivToPubMan2 at line 446 col 14 changed to i_
\* Procedure variable indicies of procedure PrivToPubMan2 at line 446 col 17 changed to indicies_
\* Procedure variable portDomain of procedure PrivToPubMan2 at line 446 col 27 changed to portDomain_
\* Procedure variable sourcePort of procedure PrivToPubMan2 at line 446 col 39 changed to sourcePort_
\* Procedure variable destPort of procedure PrivToPubMan2 at line 446 col 51 changed to destPort_
\* Procedure variable new_sport of procedure PrivToPubMan2 at line 446 col 61 changed to new_sport_
\* Procedure variable pkt of procedure PrivToPubManExit at line 483 col 12 changed to pkt_Pri
\* Procedure variable hostMarker of procedure PrivToPubManExit at line 483 col 17 changed to hostMarker_Pri
\* Procedure variable daddr of procedure PrivToPubManExit at line 483 col 29 changed to daddr_P
\* Procedure variable hostidx of procedure PrivToPubManExit at line 483 col 36 changed to hostidx_P
\* Procedure variable hidx of procedure PrivToPubManExit at line 483 col 45 changed to hidx_Pr
\* Procedure variable otherEntry of procedure PrivToPubManExit at line 484 col 2 changed to otherEntry_P
\* Procedure variable i of procedure PrivToPubManExit at line 484 col 14 changed to i_P
\* Procedure variable indicies of procedure PrivToPubManExit at line 484 col 17 changed to indicies_P
\* Procedure variable portDomain of procedure PrivToPubManExit at line 484 col 27 changed to portDomain_P
\* Procedure variable sourcePort of procedure PrivToPubManExit at line 484 col 39 changed to sourcePort_P
\* Procedure variable destPort of procedure PrivToPubManExit at line 484 col 51 changed to destPort_P
\* Procedure variable new_sport of procedure PrivToPubManExit at line 484 col 61 changed to new_sport_P
\* Procedure variable pkt of procedure PrivToPubVuln at line 521 col 12 changed to pkt_Priv
\* Procedure variable conn of procedure PrivToPubVuln at line 521 col 17 changed to conn_Pr
\* Procedure variable hostMarker of procedure PrivToPubVuln at line 521 col 23 changed to hostMarker_Priv
\* Procedure variable daddr of procedure PrivToPubVuln at line 521 col 35 changed to daddr_Pr
\* Procedure variable hostidx of procedure PrivToPubVuln at line 521 col 42 changed to hostidx_Pr
\* Procedure variable hidx of procedure PrivToPubVuln at line 521 col 51 changed to hidx_Pri
\* Procedure variable otherEntry of procedure PrivToPubVuln at line 522 col 2 changed to otherEntry_Pr
\* Procedure variable i of procedure PrivToPubVuln at line 522 col 14 changed to i_Pr
\* Procedure variable indicies of procedure PrivToPubVuln at line 522 col 17 changed to indicies_Pr
\* Procedure variable portDomain of procedure PrivToPubVuln at line 522 col 27 changed to portDomain_Pr
\* Procedure variable sourcePort of procedure PrivToPubVuln at line 522 col 39 changed to sourcePort_Pr
\* Procedure variable destPort of procedure PrivToPubVuln at line 522 col 51 changed to destPort_Pr
\* Procedure variable new_sport of procedure PrivToPubVuln at line 522 col 61 changed to new_sport_Pr
\* Procedure variable pkt of procedure PrivToPubMan at line 577 col 12 changed to pkt_PrivT
\* Procedure variable conn of procedure PrivToPubMan at line 577 col 17 changed to conn_Pri
\* Procedure variable hostMarker of procedure PrivToPubMan at line 577 col 23 changed to hostMarker_PrivT
\* Procedure variable daddr of procedure PrivToPubMan at line 577 col 35 changed to daddr_Pri
\* Procedure variable hostidx of procedure PrivToPubMan at line 577 col 42 changed to hostidx_Pri
\* Procedure variable hidx of procedure PrivToPubMan at line 577 col 51 changed to hidx_Priv
\* Procedure variable otherEntry of procedure PrivToPubMan at line 578 col 2 changed to otherEntry_Pri
\* Procedure variable i of procedure PrivToPubMan at line 578 col 14 changed to i_Pri
\* Procedure variable indicies of procedure PrivToPubMan at line 578 col 17 changed to indicies_Pri
\* Procedure variable portDomain of procedure PrivToPubMan at line 578 col 27 changed to portDomain_Pri
\* Procedure variable sourcePort of procedure PrivToPubMan at line 578 col 39 changed to sourcePort_Pri
\* Procedure variable destPort of procedure PrivToPubMan at line 578 col 51 changed to destPort_Pri
\* Procedure variable new_sport of procedure PrivToPubMan at line 578 col 61 changed to new_sport_Pri
\* Procedure variable host of procedure Connect at line 627 col 13 changed to host_C
\* Procedure variable hidx of procedure Connect at line 627 col 19 changed to hidx_Co
\* Procedure variable host_idx of procedure Connect at line 627 col 25 changed to host_idx_Co
\* Procedure variable pidx of procedure Connect at line 627 col 35 changed to pidx_Co
\* Procedure variable port_idx of procedure Connect at line 627 col 41 changed to port_idx_Co
\* Procedure variable host of procedure ConnectMan3 at line 654 col 13 changed to host_Co
\* Procedure variable hidx of procedure ConnectMan3 at line 654 col 19 changed to hidx_Con
\* Procedure variable ip of procedure Disconnect at line 680 col 11 changed to ip_D
\* Procedure variable host of procedure Disconnect at line 680 col 15 changed to host_Di
\* Procedure variable conn of procedure Disconnect at line 680 col 39 changed to conn_Dis
\* Procedure variable pkt of procedure PubToPriv at line 712 col 11 changed to pkt_Pu
\* Procedure variable ipkt of procedure PubToPriv at line 712 col 16 changed to ipkt_Pu
\* Procedure variable entry of procedure PubToPriv at line 712 col 22 changed to entry_Pu
\* Procedure variable conn of procedure PubToPriv at line 712 col 29 changed to conn_Pub
\* Procedure variable hostMarker of procedure PubToPriv at line 712 col 35 changed to hostMarker_Pu
\* Procedure variable ip_idx of procedure PubToPriv at line 712 col 47 changed to ip_idx_Pu
\* Procedure variable ipidx of procedure PubToPriv at line 712 col 55 changed to ipidx_Pu
\* Procedure variable ip of procedure PubToPriv at line 712 col 62 changed to ip_Pub
\* Procedure variable host of procedure PubToPriv at line 712 col 66 changed to host_Pub
\* Procedure variable pkt of procedure PrivToPub at line 818 col 12 changed to pkt_PrivTo
\* Procedure variable conn of procedure PrivToPub at line 818 col 17 changed to conn_Priv
\* Procedure variable hostMarker of procedure PrivToPub at line 818 col 23 changed to hostMarker_PrivTo
\* Procedure variable daddr of procedure PrivToPub at line 818 col 35 changed to daddr_Priv
\* Procedure variable hostidx of procedure PrivToPub at line 818 col 42 changed to hostidx_Priv
\* Procedure variable hidx of procedure PrivToPub at line 818 col 51 changed to hidx_PrivT
\* Procedure variable otherEntry of procedure PrivToPub at line 818 col 57 changed to otherEntry_Priv
\* Procedure variable i of procedure PrivToPub at line 818 col 69 changed to i_Priv
\* Procedure variable indicies of procedure PrivToPub at line 818 col 72 changed to indicies_Priv
\* Procedure variable portDomain of procedure PrivToPub at line 818 col 82 changed to portDomain_Priv
\* Procedure variable sourcePort of procedure PrivToPub at line 818 col 94 changed to sourcePort_Priv
\* Procedure variable destPort of procedure PrivToPub at line 818 col 106 changed to destPort_Priv
\* Procedure variable new_sport of procedure PrivToPub at line 818 col 116 changed to new_sport_Priv
\* Procedure variable i of procedure EventSequenceVuln at line 926 col 11 changed to i_E
\* Procedure variable j of procedure EventSequenceVuln at line 926 col 14 changed to j_
\* Procedure variable ip of procedure EventSequenceVuln at line 926 col 17 changed to ip_E
\* Procedure variable host of procedure EventSequenceVuln at line 926 col 21 changed to host_E
\* Procedure variable indecies of procedure EventSequenceVuln at line 926 col 27 changed to indecies_
\* Procedure variable i of procedure EventSequence at line 965 col 11 changed to i_Ev
\* Procedure variable j of procedure EventSequence at line 965 col 14 changed to j_E
\* Procedure variable ip of procedure EventSequence at line 965 col 17 changed to ip_Ev
\* Procedure variable host of procedure EventSequence at line 965 col 21 changed to host_Ev
\* Procedure variable indecies of procedure EventSequence at line 965 col 27 changed to indecies_E
\* Procedure variable i of procedure CheckModel at line 1002 col 11 changed to i_C
\* Procedure variable i of procedure CheckModelVuln at line 1016 col 11 changed to i_Ch
\* Procedure variable pkt of procedure PubToPrivExitVuln at line 1030 col 11 changed to pkt_Pub
\* Procedure variable ipkt of procedure PubToPrivExitVuln at line 1030 col 16 changed to ipkt_Pub
\* Procedure variable entry of procedure PubToPrivExitVuln at line 1030 col 22 changed to entry_Pub
\* Procedure variable conn of procedure PubToPrivExitVuln at line 1030 col 29 changed to conn_PubT
\* Procedure variable hostMarker of procedure PubToPrivExitVuln at line 1030 col 35 changed to hostMarker_Pub
\* Procedure variable ip_idx of procedure PubToPrivExitVuln at line 1030 col 47 changed to ip_idx_Pub
\* Procedure variable ipidx of procedure PubToPrivExitVuln at line 1030 col 55 changed to ipidx_Pub
\* Procedure variable ip of procedure PubToPrivExitVuln at line 1030 col 62 changed to ip_PubT
\* Procedure variable host of procedure PubToPrivExitVuln at line 1030 col 66 changed to host_PubT
\* Procedure variable pkt of procedure PrivToPubExit at line 1107 col 12 changed to pkt_PrivToP
\* Procedure variable conn of procedure PrivToPubExit at line 1107 col 17 changed to conn_PrivT
\* Procedure variable hostMarker of procedure PrivToPubExit at line 1107 col 23 changed to hostMarker_PrivToP
\* Procedure variable i of procedure PrivToPubExit at line 1108 col 14 changed to i_PrivT
\* Procedure variable conn of procedure PubToPrivExit at line 1162 col 29 changed to conn_PubTo
\* Procedure variable ip of procedure PubToPrivExit at line 1162 col 62 changed to ip_PubTo
\* Procedure variable host of procedure PubToPrivExit at line 1162 col 66 changed to host_PubTo
\* Procedure variable i of procedure EventSequenceATIP at line 1267 col 11 changed to i_Eve
\* Procedure variable ip of procedure EventSequenceATIP at line 1267 col 17 changed to ip_Eve
\* Procedure variable host of procedure EventSequenceATIP at line 1267 col 21 changed to host_Eve
\* Parameter depth of procedure ConnectVuln at line 88 col 23 changed to depth_
\* Parameter depth of procedure DisconnectVuln at line 115 col 26 changed to depth_D
\* Parameter host of procedure ConnectMan at line 141 col 22 changed to host_Con
\* Parameter ip of procedure ConnectMan at line 141 col 28 changed to ip_C
\* Parameter host of procedure DisconnectMan at line 160 col 25 changed to host_Dis
\* Parameter ip of procedure DisconnectMan at line 160 col 31 changed to ip_Di
\* Parameter depth of procedure PubToPrivVuln at line 206 col 25 changed to depth_P
\* Parameter conn of procedure PrivToPubMan2 at line 444 col 25 changed to conn_PrivTo
\* Parameter sport of procedure PrivToPubMan2 at line 444 col 31 changed to sport_
\* Parameter dstAddr of procedure PrivToPubMan2 at line 444 col 38 changed to dstAddr_
\* Parameter dport of procedure PrivToPubMan2 at line 444 col 47 changed to dport_
\* Parameter depth of procedure PrivToPubVuln at line 520 col 25 changed to depth_Pr
\* Parameter depth of procedure Connect at line 626 col 19 changed to depth_C
\* Parameter depth of procedure Disconnect at line 679 col 22 changed to depth_Di
\* Parameter depth of procedure PubToPriv at line 711 col 21 changed to depth_Pu
\* Parameter depth of procedure PrivToPub at line 817 col 21 changed to depth_Pri
\* Parameter depth of procedure EventSequenceVuln at line 925 col 29 changed to depth_E
\* Parameter depth of procedure EventSequence at line 964 col 25 changed to depth_Ev
\* Parameter depth of procedure PubToPrivExitVuln at line 1029 col 29 changed to depth_Pub
\* Parameter depth of procedure PrivToPubExit at line 1106 col 25 changed to depth_Priv
\* Parameter depth of procedure PubToPrivExit at line 1161 col 25 changed to depth_PubT
CONSTANT defaultInitValue
VARIABLES A, B, C, D, N, E, F, X, Y, Z, NN, Aa, Bb, Cc, Dd, Ee, Ff, Gg, Hh, 
          Ii, Jj, Kk, Ll, Mm, Nn, Oo, Pp, Qq, Rr, Ss, Tt, Uu, Vv, Ww, Xx, Yy, 
          Zz, H1, H2, MaxPorts, EP1, PortMap1, EP2, PortMap2, TableFull, 
          EvictionReroute, PortScanInv, ATIPInv, MaxTableSize, hosts, 
          FreeHosts, UsedHosts, Ports, ExtraPorts, ExtraExtraPorts, T, 
          FreeIPs, PrivIPs, PubIPs, PortSpace, UsedIPs, Connections, 
          SendQueue, RcvQueue, MAX, Marker1, Marker2, CmdConnect, 
          CmdDisconnect, PortSpaceFull, pc, stack, depth_, host_, hidx_, 
          host_idx_, pidx_, port_idx_, depth_D, ip_, host_D, connDomain_, 
          cidx_, conn_, host_Con, ip_C, hidx_C, host_idx_C, pidx_C, 
          port_idx_C, host_Dis, ip_Di, connDomain_D, cidx_D, conn_D, host, ip, 
          connDomain_Di, cidx_Di, conn_Di, depth_P, pkt_, ipkt_, entry_, 
          conn_P, hostMarker_, ip_idx_, ipidx_, ip_P, host_P, pkt_P, ipkt_P, 
          entry_P, conn_Pu, hostMarker_P, ip_idx_P, ipidx_P, ip_Pu, host_Pu, 
          IP, conn_PrivTo, sport_, dstAddr_, dport_, pkt_Pr, hostMarker_Pr, 
          daddr_, hostidx_, hidx_P, otherEntry_, i_, indicies_, portDomain_, 
          sourcePort_, destPort_, new_sport_, conn, sport, dstAddr, dport, 
          pkt_Pri, hostMarker_Pri, daddr_P, hostidx_P, hidx_Pr, otherEntry_P, 
          i_P, indicies_P, portDomain_P, sourcePort_P, destPort_P, 
          new_sport_P, depth_Pr, pkt_Priv, conn_Pr, hostMarker_Priv, daddr_Pr, 
          hostidx_Pr, hidx_Pri, otherEntry_Pr, i_Pr, indicies_Pr, 
          portDomain_Pr, sourcePort_Pr, destPort_Pr, new_sport_Pr, pkt_PrivT, 
          conn_Pri, hostMarker_PrivT, daddr_Pri, hostidx_Pri, hidx_Priv, 
          otherEntry_Pri, i_Pri, indicies_Pri, portDomain_Pri, sourcePort_Pri, 
          destPort_Pri, new_sport_Pri, depth_C, host_C, hidx_Co, host_idx_Co, 
          pidx_Co, port_idx_Co, connhost, port, host_Co, hidx_Con, host_idx, 
          pidx, port_idx, depth_Di, ip_D, host_Di, connDomain, cidx, conn_Dis, 
          depth_Pu, pkt_Pu, ipkt_Pu, entry_Pu, conn_Pub, hostMarker_Pu, 
          ip_idx_Pu, ipidx_Pu, ip_Pub, host_Pub, depth_Pri, pkt_PrivTo, 
          conn_Priv, hostMarker_PrivTo, daddr_Priv, hostidx_Priv, hidx_PrivT, 
          otherEntry_Priv, i_Priv, indicies_Priv, portDomain_Priv, 
          sourcePort_Priv, destPort_Priv, new_sport_Priv, good, depth_E, i_E, 
          j_, ip_E, host_E, indecies_, depth_Ev, i_Ev, j_E, ip_Ev, host_Ev, 
          indecies_E, i_C, i_Ch, depth_Pub, pkt_Pub, ipkt_Pub, entry_Pub, 
          conn_PubT, hostMarker_Pub, ip_idx_Pub, ipidx_Pub, ip_PubT, 
          host_PubT, depth_Priv, pkt_PrivToP, conn_PrivT, hostMarker_PrivToP, 
          daddr, hostidx, hidx, otherEntry, i_PrivT, indicies, portDomain, 
          sourcePort, destPort, new_sport, depth_PubT, pkt, ipkt, entry, 
          conn_PubTo, hostMarker, ip_idx, ipidx, ip_PubTo, host_PubTo, depth, 
          i_Eve, j, ip_Eve, host_Eve, indecies, i, aa

vars == << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, Bb, Cc, Dd, Ee, Ff, Gg, Hh, 
           Ii, Jj, Kk, Ll, Mm, Nn, Oo, Pp, Qq, Rr, Ss, Tt, Uu, Vv, Ww, Xx, Yy, 
           Zz, H1, H2, MaxPorts, EP1, PortMap1, EP2, PortMap2, TableFull, 
           EvictionReroute, PortScanInv, ATIPInv, MaxTableSize, hosts, 
           FreeHosts, UsedHosts, Ports, ExtraPorts, ExtraExtraPorts, T, 
           FreeIPs, PrivIPs, PubIPs, PortSpace, UsedIPs, Connections, 
           SendQueue, RcvQueue, MAX, Marker1, Marker2, CmdConnect, 
           CmdDisconnect, PortSpaceFull, pc, stack, depth_, host_, hidx_, 
           host_idx_, pidx_, port_idx_, depth_D, ip_, host_D, connDomain_, 
           cidx_, conn_, host_Con, ip_C, hidx_C, host_idx_C, pidx_C, 
           port_idx_C, host_Dis, ip_Di, connDomain_D, cidx_D, conn_D, host, 
           ip, connDomain_Di, cidx_Di, conn_Di, depth_P, pkt_, ipkt_, entry_, 
           conn_P, hostMarker_, ip_idx_, ipidx_, ip_P, host_P, pkt_P, ipkt_P, 
           entry_P, conn_Pu, hostMarker_P, ip_idx_P, ipidx_P, ip_Pu, host_Pu, 
           IP, conn_PrivTo, sport_, dstAddr_, dport_, pkt_Pr, hostMarker_Pr, 
           daddr_, hostidx_, hidx_P, otherEntry_, i_, indicies_, portDomain_, 
           sourcePort_, destPort_, new_sport_, conn, sport, dstAddr, dport, 
           pkt_Pri, hostMarker_Pri, daddr_P, hostidx_P, hidx_Pr, otherEntry_P, 
           i_P, indicies_P, portDomain_P, sourcePort_P, destPort_P, 
           new_sport_P, depth_Pr, pkt_Priv, conn_Pr, hostMarker_Priv, 
           daddr_Pr, hostidx_Pr, hidx_Pri, otherEntry_Pr, i_Pr, indicies_Pr, 
           portDomain_Pr, sourcePort_Pr, destPort_Pr, new_sport_Pr, pkt_PrivT, 
           conn_Pri, hostMarker_PrivT, daddr_Pri, hostidx_Pri, hidx_Priv, 
           otherEntry_Pri, i_Pri, indicies_Pri, portDomain_Pri, 
           sourcePort_Pri, destPort_Pri, new_sport_Pri, depth_C, host_C, 
           hidx_Co, host_idx_Co, pidx_Co, port_idx_Co, connhost, port, 
           host_Co, hidx_Con, host_idx, pidx, port_idx, depth_Di, ip_D, 
           host_Di, connDomain, cidx, conn_Dis, depth_Pu, pkt_Pu, ipkt_Pu, 
           entry_Pu, conn_Pub, hostMarker_Pu, ip_idx_Pu, ipidx_Pu, ip_Pub, 
           host_Pub, depth_Pri, pkt_PrivTo, conn_Priv, hostMarker_PrivTo, 
           daddr_Priv, hostidx_Priv, hidx_PrivT, otherEntry_Priv, i_Priv, 
           indicies_Priv, portDomain_Priv, sourcePort_Priv, destPort_Priv, 
           new_sport_Priv, good, depth_E, i_E, j_, ip_E, host_E, indecies_, 
           depth_Ev, i_Ev, j_E, ip_Ev, host_Ev, indecies_E, i_C, i_Ch, 
           depth_Pub, pkt_Pub, ipkt_Pub, entry_Pub, conn_PubT, hostMarker_Pub, 
           ip_idx_Pub, ipidx_Pub, ip_PubT, host_PubT, depth_Priv, pkt_PrivToP, 
           conn_PrivT, hostMarker_PrivToP, daddr, hostidx, hidx, otherEntry, 
           i_PrivT, indicies, portDomain, sourcePort, destPort, new_sport, 
           depth_PubT, pkt, ipkt, entry, conn_PubTo, hostMarker, ip_idx, 
           ipidx, ip_PubTo, host_PubTo, depth, i_Eve, j, ip_Eve, host_Eve, 
           indecies, i, aa >>

ProcSet == {"A"}

Init == (* Global variables *)
        /\ A = "A"
        /\ B = "B"
        /\ C = "C"
        /\ D = "D"
        /\ N = "N"
        /\ E = "E"
        /\ F = "F"
        /\ X = "X"
        /\ Y = "Y"
        /\ Z = "Z"
        /\ NN = "NN"
        /\ Aa = "a"
        /\ Bb = "b"
        /\ Cc = "c"
        /\ Dd = "d"
        /\ Ee = "e"
        /\ Ff = "f"
        /\ Gg = "g"
        /\ Hh = "h"
        /\ Ii = "i"
        /\ Jj = "j"
        /\ Kk = "k"
        /\ Ll = "l"
        /\ Mm = "m"
        /\ Nn = "n"
        /\ Oo = "o"
        /\ Pp = "p"
        /\ Qq = "q"
        /\ Rr = "r"
        /\ Ss = "s"
        /\ Tt = "t"
        /\ Uu = "u"
        /\ Vv = "v"
        /\ Ww = "w"
        /\ Xx = "x"
        /\ Yy = "y"
        /\ Zz = "z"
        /\ H1 = "1"
        /\ H2 = "2"
        /\ MaxPorts = 1
        /\ EP1 = "N1"
        /\ PortMap1 = <<>>
        /\ EP2 = "N2"
        /\ PortMap2 = <<>>
        /\ TableFull = FALSE
        /\ EvictionReroute = FALSE
        /\ PortScanInv = FALSE
        /\ ATIPInv = FALSE
        /\ MaxTableSize = 2
        /\ hosts = <<H1, H2, C>>
        /\ FreeHosts = <<H1, H2>>
        /\ UsedHosts = <<>>
        /\ Ports = <<A, B, C, NN>>
        /\ ExtraPorts = <<D>>
        /\ ExtraExtraPorts = <<Aa, Bb, Cc, Dd,Ee, Ff, Gg, Hh, Ii, Jj, Kk, Ll, Mm, Nn, Oo, Pp, Qq, Rr, Ss, Tt, Uu, Vv, Ww, Xx, Yy, Zz>>
        /\ T = <<>>
        /\ FreeIPs = <<A, B>>
        /\ PrivIPs = <<A, B>>
        /\ PubIPs = <<X,Y,Z>>
        /\ PortSpace = <<D,E,F>>
        /\ UsedIPs = <<>>
        /\ Connections = <<>>
        /\ SendQueue = <<>>
        /\ RcvQueue = <<>>
        /\ MAX = 3
        /\ Marker1 = H1
        /\ Marker2 = H2
        /\ CmdConnect = "Connect"
        /\ CmdDisconnect = "Disconnect"
        /\ PortSpaceFull = FALSE
        (* Procedure ConnectVuln *)
        /\ depth_ = [ self \in ProcSet |-> defaultInitValue]
        /\ host_ = [ self \in ProcSet |-> defaultInitValue]
        /\ hidx_ = [ self \in ProcSet |-> defaultInitValue]
        /\ host_idx_ = [ self \in ProcSet |-> defaultInitValue]
        /\ pidx_ = [ self \in ProcSet |-> defaultInitValue]
        /\ port_idx_ = [ self \in ProcSet |-> defaultInitValue]
        (* Procedure DisconnectVuln *)
        /\ depth_D = [ self \in ProcSet |-> defaultInitValue]
        /\ ip_ = [ self \in ProcSet |-> defaultInitValue]
        /\ host_D = [ self \in ProcSet |-> defaultInitValue]
        /\ connDomain_ = [ self \in ProcSet |-> defaultInitValue]
        /\ cidx_ = [ self \in ProcSet |-> defaultInitValue]
        /\ conn_ = [ self \in ProcSet |-> defaultInitValue]
        (* Procedure ConnectMan *)
        /\ host_Con = [ self \in ProcSet |-> defaultInitValue]
        /\ ip_C = [ self \in ProcSet |-> defaultInitValue]
        /\ hidx_C = [ self \in ProcSet |-> defaultInitValue]
        /\ host_idx_C = [ self \in ProcSet |-> defaultInitValue]
        /\ pidx_C = [ self \in ProcSet |-> defaultInitValue]
        /\ port_idx_C = [ self \in ProcSet |-> defaultInitValue]
        (* Procedure DisconnectMan *)
        /\ host_Dis = [ self \in ProcSet |-> defaultInitValue]
        /\ ip_Di = [ self \in ProcSet |-> defaultInitValue]
        /\ connDomain_D = [ self \in ProcSet |-> defaultInitValue]
        /\ cidx_D = [ self \in ProcSet |-> defaultInitValue]
        /\ conn_D = [ self \in ProcSet |-> defaultInitValue]
        (* Procedure DisconnectVulnMan *)
        /\ host = [ self \in ProcSet |-> defaultInitValue]
        /\ ip = [ self \in ProcSet |-> defaultInitValue]
        /\ connDomain_Di = [ self \in ProcSet |-> defaultInitValue]
        /\ cidx_Di = [ self \in ProcSet |-> defaultInitValue]
        /\ conn_Di = [ self \in ProcSet |-> defaultInitValue]
        (* Procedure PubToPrivVuln *)
        /\ depth_P = [ self \in ProcSet |-> defaultInitValue]
        /\ pkt_ = [ self \in ProcSet |-> defaultInitValue]
        /\ ipkt_ = [ self \in ProcSet |-> defaultInitValue]
        /\ entry_ = [ self \in ProcSet |-> defaultInitValue]
        /\ conn_P = [ self \in ProcSet |-> defaultInitValue]
        /\ hostMarker_ = [ self \in ProcSet |-> defaultInitValue]
        /\ ip_idx_ = [ self \in ProcSet |-> defaultInitValue]
        /\ ipidx_ = [ self \in ProcSet |-> defaultInitValue]
        /\ ip_P = [ self \in ProcSet |-> defaultInitValue]
        /\ host_P = [ self \in ProcSet |-> defaultInitValue]
        (* Procedure PubToPrivMan *)
        /\ pkt_P = [ self \in ProcSet |-> defaultInitValue]
        /\ ipkt_P = [ self \in ProcSet |-> defaultInitValue]
        /\ entry_P = [ self \in ProcSet |-> defaultInitValue]
        /\ conn_Pu = [ self \in ProcSet |-> defaultInitValue]
        /\ hostMarker_P = [ self \in ProcSet |-> defaultInitValue]
        /\ ip_idx_P = [ self \in ProcSet |-> defaultInitValue]
        /\ ipidx_P = [ self \in ProcSet |-> defaultInitValue]
        /\ ip_Pu = [ self \in ProcSet |-> defaultInitValue]
        /\ host_Pu = [ self \in ProcSet |-> defaultInitValue]
        /\ IP = [ self \in ProcSet |-> defaultInitValue]
        (* Procedure PrivToPubMan2 *)
        /\ conn_PrivTo = [ self \in ProcSet |-> defaultInitValue]
        /\ sport_ = [ self \in ProcSet |-> defaultInitValue]
        /\ dstAddr_ = [ self \in ProcSet |-> defaultInitValue]
        /\ dport_ = [ self \in ProcSet |-> defaultInitValue]
        /\ pkt_Pr = [ self \in ProcSet |-> defaultInitValue]
        /\ hostMarker_Pr = [ self \in ProcSet |-> defaultInitValue]
        /\ daddr_ = [ self \in ProcSet |-> defaultInitValue]
        /\ hostidx_ = [ self \in ProcSet |-> defaultInitValue]
        /\ hidx_P = [ self \in ProcSet |-> defaultInitValue]
        /\ otherEntry_ = [ self \in ProcSet |-> defaultInitValue]
        /\ i_ = [ self \in ProcSet |-> defaultInitValue]
        /\ indicies_ = [ self \in ProcSet |-> defaultInitValue]
        /\ portDomain_ = [ self \in ProcSet |-> defaultInitValue]
        /\ sourcePort_ = [ self \in ProcSet |-> defaultInitValue]
        /\ destPort_ = [ self \in ProcSet |-> defaultInitValue]
        /\ new_sport_ = [ self \in ProcSet |-> defaultInitValue]
        (* Procedure PrivToPubManExit *)
        /\ conn = [ self \in ProcSet |-> defaultInitValue]
        /\ sport = [ self \in ProcSet |-> defaultInitValue]
        /\ dstAddr = [ self \in ProcSet |-> defaultInitValue]
        /\ dport = [ self \in ProcSet |-> defaultInitValue]
        /\ pkt_Pri = [ self \in ProcSet |-> defaultInitValue]
        /\ hostMarker_Pri = [ self \in ProcSet |-> defaultInitValue]
        /\ daddr_P = [ self \in ProcSet |-> defaultInitValue]
        /\ hostidx_P = [ self \in ProcSet |-> defaultInitValue]
        /\ hidx_Pr = [ self \in ProcSet |-> defaultInitValue]
        /\ otherEntry_P = [ self \in ProcSet |-> defaultInitValue]
        /\ i_P = [ self \in ProcSet |-> defaultInitValue]
        /\ indicies_P = [ self \in ProcSet |-> defaultInitValue]
        /\ portDomain_P = [ self \in ProcSet |-> defaultInitValue]
        /\ sourcePort_P = [ self \in ProcSet |-> defaultInitValue]
        /\ destPort_P = [ self \in ProcSet |-> defaultInitValue]
        /\ new_sport_P = [ self \in ProcSet |-> defaultInitValue]
        (* Procedure PrivToPubVuln *)
        /\ depth_Pr = [ self \in ProcSet |-> defaultInitValue]
        /\ pkt_Priv = [ self \in ProcSet |-> defaultInitValue]
        /\ conn_Pr = [ self \in ProcSet |-> defaultInitValue]
        /\ hostMarker_Priv = [ self \in ProcSet |-> defaultInitValue]
        /\ daddr_Pr = [ self \in ProcSet |-> defaultInitValue]
        /\ hostidx_Pr = [ self \in ProcSet |-> defaultInitValue]
        /\ hidx_Pri = [ self \in ProcSet |-> defaultInitValue]
        /\ otherEntry_Pr = [ self \in ProcSet |-> defaultInitValue]
        /\ i_Pr = [ self \in ProcSet |-> defaultInitValue]
        /\ indicies_Pr = [ self \in ProcSet |-> defaultInitValue]
        /\ portDomain_Pr = [ self \in ProcSet |-> defaultInitValue]
        /\ sourcePort_Pr = [ self \in ProcSet |-> defaultInitValue]
        /\ destPort_Pr = [ self \in ProcSet |-> defaultInitValue]
        /\ new_sport_Pr = [ self \in ProcSet |-> defaultInitValue]
        (* Procedure PrivToPubMan *)
        /\ pkt_PrivT = [ self \in ProcSet |-> defaultInitValue]
        /\ conn_Pri = [ self \in ProcSet |-> defaultInitValue]
        /\ hostMarker_PrivT = [ self \in ProcSet |-> defaultInitValue]
        /\ daddr_Pri = [ self \in ProcSet |-> defaultInitValue]
        /\ hostidx_Pri = [ self \in ProcSet |-> defaultInitValue]
        /\ hidx_Priv = [ self \in ProcSet |-> defaultInitValue]
        /\ otherEntry_Pri = [ self \in ProcSet |-> defaultInitValue]
        /\ i_Pri = [ self \in ProcSet |-> defaultInitValue]
        /\ indicies_Pri = [ self \in ProcSet |-> defaultInitValue]
        /\ portDomain_Pri = [ self \in ProcSet |-> defaultInitValue]
        /\ sourcePort_Pri = [ self \in ProcSet |-> defaultInitValue]
        /\ destPort_Pri = [ self \in ProcSet |-> defaultInitValue]
        /\ new_sport_Pri = [ self \in ProcSet |-> defaultInitValue]
        (* Procedure Connect *)
        /\ depth_C = [ self \in ProcSet |-> defaultInitValue]
        /\ host_C = [ self \in ProcSet |-> defaultInitValue]
        /\ hidx_Co = [ self \in ProcSet |-> defaultInitValue]
        /\ host_idx_Co = [ self \in ProcSet |-> defaultInitValue]
        /\ pidx_Co = [ self \in ProcSet |-> defaultInitValue]
        /\ port_idx_Co = [ self \in ProcSet |-> defaultInitValue]
        (* Procedure ConnectMan3 *)
        /\ connhost = [ self \in ProcSet |-> defaultInitValue]
        /\ port = [ self \in ProcSet |-> defaultInitValue]
        /\ host_Co = [ self \in ProcSet |-> defaultInitValue]
        /\ hidx_Con = [ self \in ProcSet |-> defaultInitValue]
        /\ host_idx = [ self \in ProcSet |-> defaultInitValue]
        /\ pidx = [ self \in ProcSet |-> defaultInitValue]
        /\ port_idx = [ self \in ProcSet |-> defaultInitValue]
        (* Procedure Disconnect *)
        /\ depth_Di = [ self \in ProcSet |-> defaultInitValue]
        /\ ip_D = [ self \in ProcSet |-> defaultInitValue]
        /\ host_Di = [ self \in ProcSet |-> defaultInitValue]
        /\ connDomain = [ self \in ProcSet |-> defaultInitValue]
        /\ cidx = [ self \in ProcSet |-> defaultInitValue]
        /\ conn_Dis = [ self \in ProcSet |-> defaultInitValue]
        (* Procedure PubToPriv *)
        /\ depth_Pu = [ self \in ProcSet |-> defaultInitValue]
        /\ pkt_Pu = [ self \in ProcSet |-> defaultInitValue]
        /\ ipkt_Pu = [ self \in ProcSet |-> defaultInitValue]
        /\ entry_Pu = [ self \in ProcSet |-> defaultInitValue]
        /\ conn_Pub = [ self \in ProcSet |-> defaultInitValue]
        /\ hostMarker_Pu = [ self \in ProcSet |-> defaultInitValue]
        /\ ip_idx_Pu = [ self \in ProcSet |-> defaultInitValue]
        /\ ipidx_Pu = [ self \in ProcSet |-> defaultInitValue]
        /\ ip_Pub = [ self \in ProcSet |-> defaultInitValue]
        /\ host_Pub = [ self \in ProcSet |-> defaultInitValue]
        (* Procedure PrivToPub *)
        /\ depth_Pri = [ self \in ProcSet |-> defaultInitValue]
        /\ pkt_PrivTo = [ self \in ProcSet |-> defaultInitValue]
        /\ conn_Priv = [ self \in ProcSet |-> defaultInitValue]
        /\ hostMarker_PrivTo = [ self \in ProcSet |-> defaultInitValue]
        /\ daddr_Priv = [ self \in ProcSet |-> defaultInitValue]
        /\ hostidx_Priv = [ self \in ProcSet |-> defaultInitValue]
        /\ hidx_PrivT = [ self \in ProcSet |-> defaultInitValue]
        /\ otherEntry_Priv = [ self \in ProcSet |-> defaultInitValue]
        /\ i_Priv = [ self \in ProcSet |-> defaultInitValue]
        /\ indicies_Priv = [ self \in ProcSet |-> defaultInitValue]
        /\ portDomain_Priv = [ self \in ProcSet |-> defaultInitValue]
        /\ sourcePort_Priv = [ self \in ProcSet |-> defaultInitValue]
        /\ destPort_Priv = [ self \in ProcSet |-> defaultInitValue]
        /\ new_sport_Priv = [ self \in ProcSet |-> defaultInitValue]
        /\ good = [ self \in ProcSet |-> defaultInitValue]
        (* Procedure EventSequenceVuln *)
        /\ depth_E = [ self \in ProcSet |-> defaultInitValue]
        /\ i_E = [ self \in ProcSet |-> defaultInitValue]
        /\ j_ = [ self \in ProcSet |-> defaultInitValue]
        /\ ip_E = [ self \in ProcSet |-> defaultInitValue]
        /\ host_E = [ self \in ProcSet |-> defaultInitValue]
        /\ indecies_ = [ self \in ProcSet |-> defaultInitValue]
        (* Procedure EventSequence *)
        /\ depth_Ev = [ self \in ProcSet |-> defaultInitValue]
        /\ i_Ev = [ self \in ProcSet |-> defaultInitValue]
        /\ j_E = [ self \in ProcSet |-> defaultInitValue]
        /\ ip_Ev = [ self \in ProcSet |-> defaultInitValue]
        /\ host_Ev = [ self \in ProcSet |-> defaultInitValue]
        /\ indecies_E = [ self \in ProcSet |-> defaultInitValue]
        (* Procedure CheckModel *)
        /\ i_C = [ self \in ProcSet |-> defaultInitValue]
        (* Procedure CheckModelVuln *)
        /\ i_Ch = [ self \in ProcSet |-> defaultInitValue]
        (* Procedure PubToPrivExitVuln *)
        /\ depth_Pub = [ self \in ProcSet |-> defaultInitValue]
        /\ pkt_Pub = [ self \in ProcSet |-> defaultInitValue]
        /\ ipkt_Pub = [ self \in ProcSet |-> defaultInitValue]
        /\ entry_Pub = [ self \in ProcSet |-> defaultInitValue]
        /\ conn_PubT = [ self \in ProcSet |-> defaultInitValue]
        /\ hostMarker_Pub = [ self \in ProcSet |-> defaultInitValue]
        /\ ip_idx_Pub = [ self \in ProcSet |-> defaultInitValue]
        /\ ipidx_Pub = [ self \in ProcSet |-> defaultInitValue]
        /\ ip_PubT = [ self \in ProcSet |-> defaultInitValue]
        /\ host_PubT = [ self \in ProcSet |-> defaultInitValue]
        (* Procedure PrivToPubExit *)
        /\ depth_Priv = [ self \in ProcSet |-> defaultInitValue]
        /\ pkt_PrivToP = [ self \in ProcSet |-> defaultInitValue]
        /\ conn_PrivT = [ self \in ProcSet |-> defaultInitValue]
        /\ hostMarker_PrivToP = [ self \in ProcSet |-> defaultInitValue]
        /\ daddr = [ self \in ProcSet |-> defaultInitValue]
        /\ hostidx = [ self \in ProcSet |-> defaultInitValue]
        /\ hidx = [ self \in ProcSet |-> defaultInitValue]
        /\ otherEntry = [ self \in ProcSet |-> defaultInitValue]
        /\ i_PrivT = [ self \in ProcSet |-> defaultInitValue]
        /\ indicies = [ self \in ProcSet |-> defaultInitValue]
        /\ portDomain = [ self \in ProcSet |-> defaultInitValue]
        /\ sourcePort = [ self \in ProcSet |-> defaultInitValue]
        /\ destPort = [ self \in ProcSet |-> defaultInitValue]
        /\ new_sport = [ self \in ProcSet |-> defaultInitValue]
        (* Procedure PubToPrivExit *)
        /\ depth_PubT = [ self \in ProcSet |-> defaultInitValue]
        /\ pkt = [ self \in ProcSet |-> defaultInitValue]
        /\ ipkt = [ self \in ProcSet |-> defaultInitValue]
        /\ entry = [ self \in ProcSet |-> defaultInitValue]
        /\ conn_PubTo = [ self \in ProcSet |-> defaultInitValue]
        /\ hostMarker = [ self \in ProcSet |-> defaultInitValue]
        /\ ip_idx = [ self \in ProcSet |-> defaultInitValue]
        /\ ipidx = [ self \in ProcSet |-> defaultInitValue]
        /\ ip_PubTo = [ self \in ProcSet |-> defaultInitValue]
        /\ host_PubTo = [ self \in ProcSet |-> defaultInitValue]
        (* Procedure EventSequenceATIP *)
        /\ depth = [ self \in ProcSet |-> defaultInitValue]
        /\ i_Eve = [ self \in ProcSet |-> defaultInitValue]
        /\ j = [ self \in ProcSet |-> defaultInitValue]
        /\ ip_Eve = [ self \in ProcSet |-> defaultInitValue]
        /\ host_Eve = [ self \in ProcSet |-> defaultInitValue]
        /\ indecies = [ self \in ProcSet |-> defaultInitValue]
        (* Procedure CheckModelATIP *)
        /\ i = [ self \in ProcSet |-> defaultInitValue]
        (* Process Foo *)
        /\ aa = defaultInitValue
        /\ stack = [self \in ProcSet |-> << >>]
        /\ pc = [self \in ProcSet |-> "foo1"]

connectVEvtSeqV(self) == /\ pc[self] = "connectVEvtSeqV"
                         /\ /\ depth_E' = [depth_E EXCEPT ![self] = depth_[self]]
                            /\ stack' = [stack EXCEPT ![self] = << [ procedure |->  "EventSequenceVuln",
                                                                     pc        |->  "connectVStart",
                                                                     i_E       |->  i_E[self],
                                                                     j_        |->  j_[self],
                                                                     ip_E      |->  ip_E[self],
                                                                     host_E    |->  host_E[self],
                                                                     indecies_ |->  indecies_[self],
                                                                     depth_E   |->  depth_E[self] ] >>
                                                                 \o stack[self]]
                         /\ i_E' = [i_E EXCEPT ![self] = defaultInitValue]
                         /\ j_' = [j_ EXCEPT ![self] = defaultInitValue]
                         /\ ip_E' = [ip_E EXCEPT ![self] = defaultInitValue]
                         /\ host_E' = [host_E EXCEPT ![self] = defaultInitValue]
                         /\ indecies_' = [indecies_ EXCEPT ![self] = defaultInitValue]
                         /\ pc' = [pc EXCEPT ![self] = "evtSeqVStart"]
                         /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, 
                                         Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, 
                                         Kk, Ll, Mm, Nn, Oo, Pp, Qq, Rr, Ss, 
                                         Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, H2, 
                                         MaxPorts, EP1, PortMap1, EP2, 
                                         PortMap2, TableFull, EvictionReroute, 
                                         PortScanInv, ATIPInv, MaxTableSize, 
                                         hosts, FreeHosts, UsedHosts, Ports, 
                                         ExtraPorts, ExtraExtraPorts, T, 
                                         FreeIPs, PrivIPs, PubIPs, PortSpace, 
                                         UsedIPs, Connections, SendQueue, 
                                         RcvQueue, MAX, Marker1, Marker2, 
                                         CmdConnect, CmdDisconnect, 
                                         PortSpaceFull, depth_, host_, hidx_, 
                                         host_idx_, pidx_, port_idx_, depth_D, 
                                         ip_, host_D, connDomain_, cidx_, 
                                         conn_, host_Con, ip_C, hidx_C, 
                                         host_idx_C, pidx_C, port_idx_C, 
                                         host_Dis, ip_Di, connDomain_D, cidx_D, 
                                         conn_D, host, ip, connDomain_Di, 
                                         cidx_Di, conn_Di, depth_P, pkt_, 
                                         ipkt_, entry_, conn_P, hostMarker_, 
                                         ip_idx_, ipidx_, ip_P, host_P, pkt_P, 
                                         ipkt_P, entry_P, conn_Pu, 
                                         hostMarker_P, ip_idx_P, ipidx_P, 
                                         ip_Pu, host_Pu, IP, conn_PrivTo, 
                                         sport_, dstAddr_, dport_, pkt_Pr, 
                                         hostMarker_Pr, daddr_, hostidx_, 
                                         hidx_P, otherEntry_, i_, indicies_, 
                                         portDomain_, sourcePort_, destPort_, 
                                         new_sport_, conn, sport, dstAddr, 
                                         dport, pkt_Pri, hostMarker_Pri, 
                                         daddr_P, hostidx_P, hidx_Pr, 
                                         otherEntry_P, i_P, indicies_P, 
                                         portDomain_P, sourcePort_P, 
                                         destPort_P, new_sport_P, depth_Pr, 
                                         pkt_Priv, conn_Pr, hostMarker_Priv, 
                                         daddr_Pr, hostidx_Pr, hidx_Pri, 
                                         otherEntry_Pr, i_Pr, indicies_Pr, 
                                         portDomain_Pr, sourcePort_Pr, 
                                         destPort_Pr, new_sport_Pr, pkt_PrivT, 
                                         conn_Pri, hostMarker_PrivT, daddr_Pri, 
                                         hostidx_Pri, hidx_Priv, 
                                         otherEntry_Pri, i_Pri, indicies_Pri, 
                                         portDomain_Pri, sourcePort_Pri, 
                                         destPort_Pri, new_sport_Pri, depth_C, 
                                         host_C, hidx_Co, host_idx_Co, pidx_Co, 
                                         port_idx_Co, connhost, port, host_Co, 
                                         hidx_Con, host_idx, pidx, port_idx, 
                                         depth_Di, ip_D, host_Di, connDomain, 
                                         cidx, conn_Dis, depth_Pu, pkt_Pu, 
                                         ipkt_Pu, entry_Pu, conn_Pub, 
                                         hostMarker_Pu, ip_idx_Pu, ipidx_Pu, 
                                         ip_Pub, host_Pub, depth_Pri, 
                                         pkt_PrivTo, conn_Priv, 
                                         hostMarker_PrivTo, daddr_Priv, 
                                         hostidx_Priv, hidx_PrivT, 
                                         otherEntry_Priv, i_Priv, 
                                         indicies_Priv, portDomain_Priv, 
                                         sourcePort_Priv, destPort_Priv, 
                                         new_sport_Priv, good, depth_Ev, i_Ev, 
                                         j_E, ip_Ev, host_Ev, indecies_E, i_C, 
                                         i_Ch, depth_Pub, pkt_Pub, ipkt_Pub, 
                                         entry_Pub, conn_PubT, hostMarker_Pub, 
                                         ip_idx_Pub, ipidx_Pub, ip_PubT, 
                                         host_PubT, depth_Priv, pkt_PrivToP, 
                                         conn_PrivT, hostMarker_PrivToP, daddr, 
                                         hostidx, hidx, otherEntry, i_PrivT, 
                                         indicies, portDomain, sourcePort, 
                                         destPort, new_sport, depth_PubT, pkt, 
                                         ipkt, entry, conn_PubTo, hostMarker, 
                                         ip_idx, ipidx, ip_PubTo, host_PubTo, 
                                         depth, i_Eve, j, ip_Eve, host_Eve, 
                                         indecies, i, aa >>

connectVStart(self) == /\ pc[self] = "connectVStart"
                       /\ IF Len(FreeHosts) > 0
                             THEN /\ PrintT(<<"ConnectVuln:", FreeHosts, FreeHosts>>)
                                  /\ host_idx_' = [host_idx_ EXCEPT ![self] = DOMAIN FreeHosts]
                                  /\ hidx_' = [hidx_ EXCEPT ![self] = CHOOSE h \in host_idx_'[self] : TRUE]
                                  /\ host_' = [host_ EXCEPT ![self] = FreeHosts[hidx_'[self]]]
                                  /\ FreeHosts' = SelectSeq(FreeHosts, LAMBDA a: a /= host_'[self])
                                  /\ UsedHosts' = Append(UsedHosts, host_'[self])
                                  /\ ip_idx' = [ip_idx EXCEPT ![self] = DOMAIN FreeIPs]
                                  /\ ipidx' = [ipidx EXCEPT ![self] = CHOOSE ipp \in ip_idx'[self] : TRUE]
                                  /\ ip' = [ip EXCEPT ![self] = FreeIPs[ipidx'[self]]]
                                  /\ FreeIPs' = SelectSeq(FreeIPs, LAMBDA d: d /= ip'[self])
                                  /\ UsedIPs' = Append(UsedIPs, ip'[self])
                                  /\ Connections' = Append(Connections, <<ip'[self], host_'[self]>>)
                             ELSE /\ TRUE
                                  /\ UNCHANGED << FreeHosts, UsedHosts, 
                                                  FreeIPs, UsedIPs, 
                                                  Connections, host_, hidx_, 
                                                  host_idx_, ip, ip_idx, ipidx >>
                       /\ pc' = [pc EXCEPT ![self] = "connectVRet"]
                       /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, 
                                       Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, 
                                       Ll, Mm, Nn, Oo, Pp, Qq, Rr, Ss, Tt, Uu, 
                                       Vv, Ww, Xx, Yy, Zz, H1, H2, MaxPorts, 
                                       EP1, PortMap1, EP2, PortMap2, TableFull, 
                                       EvictionReroute, PortScanInv, ATIPInv, 
                                       MaxTableSize, hosts, Ports, ExtraPorts, 
                                       ExtraExtraPorts, T, PrivIPs, PubIPs, 
                                       PortSpace, SendQueue, RcvQueue, MAX, 
                                       Marker1, Marker2, CmdConnect, 
                                       CmdDisconnect, PortSpaceFull, stack, 
                                       depth_, pidx_, port_idx_, depth_D, ip_, 
                                       host_D, connDomain_, cidx_, conn_, 
                                       host_Con, ip_C, hidx_C, host_idx_C, 
                                       pidx_C, port_idx_C, host_Dis, ip_Di, 
                                       connDomain_D, cidx_D, conn_D, host, 
                                       connDomain_Di, cidx_Di, conn_Di, 
                                       depth_P, pkt_, ipkt_, entry_, conn_P, 
                                       hostMarker_, ip_idx_, ipidx_, ip_P, 
                                       host_P, pkt_P, ipkt_P, entry_P, conn_Pu, 
                                       hostMarker_P, ip_idx_P, ipidx_P, ip_Pu, 
                                       host_Pu, IP, conn_PrivTo, sport_, 
                                       dstAddr_, dport_, pkt_Pr, hostMarker_Pr, 
                                       daddr_, hostidx_, hidx_P, otherEntry_, 
                                       i_, indicies_, portDomain_, sourcePort_, 
                                       destPort_, new_sport_, conn, sport, 
                                       dstAddr, dport, pkt_Pri, hostMarker_Pri, 
                                       daddr_P, hostidx_P, hidx_Pr, 
                                       otherEntry_P, i_P, indicies_P, 
                                       portDomain_P, sourcePort_P, destPort_P, 
                                       new_sport_P, depth_Pr, pkt_Priv, 
                                       conn_Pr, hostMarker_Priv, daddr_Pr, 
                                       hostidx_Pr, hidx_Pri, otherEntry_Pr, 
                                       i_Pr, indicies_Pr, portDomain_Pr, 
                                       sourcePort_Pr, destPort_Pr, 
                                       new_sport_Pr, pkt_PrivT, conn_Pri, 
                                       hostMarker_PrivT, daddr_Pri, 
                                       hostidx_Pri, hidx_Priv, otherEntry_Pri, 
                                       i_Pri, indicies_Pri, portDomain_Pri, 
                                       sourcePort_Pri, destPort_Pri, 
                                       new_sport_Pri, depth_C, host_C, hidx_Co, 
                                       host_idx_Co, pidx_Co, port_idx_Co, 
                                       connhost, port, host_Co, hidx_Con, 
                                       host_idx, pidx, port_idx, depth_Di, 
                                       ip_D, host_Di, connDomain, cidx, 
                                       conn_Dis, depth_Pu, pkt_Pu, ipkt_Pu, 
                                       entry_Pu, conn_Pub, hostMarker_Pu, 
                                       ip_idx_Pu, ipidx_Pu, ip_Pub, host_Pub, 
                                       depth_Pri, pkt_PrivTo, conn_Priv, 
                                       hostMarker_PrivTo, daddr_Priv, 
                                       hostidx_Priv, hidx_PrivT, 
                                       otherEntry_Priv, i_Priv, indicies_Priv, 
                                       portDomain_Priv, sourcePort_Priv, 
                                       destPort_Priv, new_sport_Priv, good, 
                                       depth_E, i_E, j_, ip_E, host_E, 
                                       indecies_, depth_Ev, i_Ev, j_E, ip_Ev, 
                                       host_Ev, indecies_E, i_C, i_Ch, 
                                       depth_Pub, pkt_Pub, ipkt_Pub, entry_Pub, 
                                       conn_PubT, hostMarker_Pub, ip_idx_Pub, 
                                       ipidx_Pub, ip_PubT, host_PubT, 
                                       depth_Priv, pkt_PrivToP, conn_PrivT, 
                                       hostMarker_PrivToP, daddr, hostidx, 
                                       hidx, otherEntry, i_PrivT, indicies, 
                                       portDomain, sourcePort, destPort, 
                                       new_sport, depth_PubT, pkt, ipkt, entry, 
                                       conn_PubTo, hostMarker, ip_PubTo, 
                                       host_PubTo, depth, i_Eve, j, ip_Eve, 
                                       host_Eve, indecies, i, aa >>

connectVRet(self) == /\ pc[self] = "connectVRet"
                     /\ pc' = [pc EXCEPT ![self] = Head(stack[self]).pc]
                     /\ host_' = [host_ EXCEPT ![self] = Head(stack[self]).host_]
                     /\ hidx_' = [hidx_ EXCEPT ![self] = Head(stack[self]).hidx_]
                     /\ host_idx_' = [host_idx_ EXCEPT ![self] = Head(stack[self]).host_idx_]
                     /\ pidx_' = [pidx_ EXCEPT ![self] = Head(stack[self]).pidx_]
                     /\ port_idx_' = [port_idx_ EXCEPT ![self] = Head(stack[self]).port_idx_]
                     /\ depth_' = [depth_ EXCEPT ![self] = Head(stack[self]).depth_]
                     /\ stack' = [stack EXCEPT ![self] = Tail(stack[self])]
                     /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, Bb, 
                                     Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, Ll, 
                                     Mm, Nn, Oo, Pp, Qq, Rr, Ss, Tt, Uu, Vv, 
                                     Ww, Xx, Yy, Zz, H1, H2, MaxPorts, EP1, 
                                     PortMap1, EP2, PortMap2, TableFull, 
                                     EvictionReroute, PortScanInv, ATIPInv, 
                                     MaxTableSize, hosts, FreeHosts, UsedHosts, 
                                     Ports, ExtraPorts, ExtraExtraPorts, T, 
                                     FreeIPs, PrivIPs, PubIPs, PortSpace, 
                                     UsedIPs, Connections, SendQueue, RcvQueue, 
                                     MAX, Marker1, Marker2, CmdConnect, 
                                     CmdDisconnect, PortSpaceFull, depth_D, 
                                     ip_, host_D, connDomain_, cidx_, conn_, 
                                     host_Con, ip_C, hidx_C, host_idx_C, 
                                     pidx_C, port_idx_C, host_Dis, ip_Di, 
                                     connDomain_D, cidx_D, conn_D, host, ip, 
                                     connDomain_Di, cidx_Di, conn_Di, depth_P, 
                                     pkt_, ipkt_, entry_, conn_P, hostMarker_, 
                                     ip_idx_, ipidx_, ip_P, host_P, pkt_P, 
                                     ipkt_P, entry_P, conn_Pu, hostMarker_P, 
                                     ip_idx_P, ipidx_P, ip_Pu, host_Pu, IP, 
                                     conn_PrivTo, sport_, dstAddr_, dport_, 
                                     pkt_Pr, hostMarker_Pr, daddr_, hostidx_, 
                                     hidx_P, otherEntry_, i_, indicies_, 
                                     portDomain_, sourcePort_, destPort_, 
                                     new_sport_, conn, sport, dstAddr, dport, 
                                     pkt_Pri, hostMarker_Pri, daddr_P, 
                                     hostidx_P, hidx_Pr, otherEntry_P, i_P, 
                                     indicies_P, portDomain_P, sourcePort_P, 
                                     destPort_P, new_sport_P, depth_Pr, 
                                     pkt_Priv, conn_Pr, hostMarker_Priv, 
                                     daddr_Pr, hostidx_Pr, hidx_Pri, 
                                     otherEntry_Pr, i_Pr, indicies_Pr, 
                                     portDomain_Pr, sourcePort_Pr, destPort_Pr, 
                                     new_sport_Pr, pkt_PrivT, conn_Pri, 
                                     hostMarker_PrivT, daddr_Pri, hostidx_Pri, 
                                     hidx_Priv, otherEntry_Pri, i_Pri, 
                                     indicies_Pri, portDomain_Pri, 
                                     sourcePort_Pri, destPort_Pri, 
                                     new_sport_Pri, depth_C, host_C, hidx_Co, 
                                     host_idx_Co, pidx_Co, port_idx_Co, 
                                     connhost, port, host_Co, hidx_Con, 
                                     host_idx, pidx, port_idx, depth_Di, ip_D, 
                                     host_Di, connDomain, cidx, conn_Dis, 
                                     depth_Pu, pkt_Pu, ipkt_Pu, entry_Pu, 
                                     conn_Pub, hostMarker_Pu, ip_idx_Pu, 
                                     ipidx_Pu, ip_Pub, host_Pub, depth_Pri, 
                                     pkt_PrivTo, conn_Priv, hostMarker_PrivTo, 
                                     daddr_Priv, hostidx_Priv, hidx_PrivT, 
                                     otherEntry_Priv, i_Priv, indicies_Priv, 
                                     portDomain_Priv, sourcePort_Priv, 
                                     destPort_Priv, new_sport_Priv, good, 
                                     depth_E, i_E, j_, ip_E, host_E, indecies_, 
                                     depth_Ev, i_Ev, j_E, ip_Ev, host_Ev, 
                                     indecies_E, i_C, i_Ch, depth_Pub, pkt_Pub, 
                                     ipkt_Pub, entry_Pub, conn_PubT, 
                                     hostMarker_Pub, ip_idx_Pub, ipidx_Pub, 
                                     ip_PubT, host_PubT, depth_Priv, 
                                     pkt_PrivToP, conn_PrivT, 
                                     hostMarker_PrivToP, daddr, hostidx, hidx, 
                                     otherEntry, i_PrivT, indicies, portDomain, 
                                     sourcePort, destPort, new_sport, 
                                     depth_PubT, pkt, ipkt, entry, conn_PubTo, 
                                     hostMarker, ip_idx, ipidx, ip_PubTo, 
                                     host_PubTo, depth, i_Eve, j, ip_Eve, 
                                     host_Eve, indecies, i, aa >>

ConnectVuln(self) == connectVEvtSeqV(self) \/ connectVStart(self)
                        \/ connectVRet(self)

disconnectVEvtSV(self) == /\ pc[self] = "disconnectVEvtSV"
                          /\ /\ depth' = [depth EXCEPT ![self] = depth_D[self]]
                             /\ stack' = [stack EXCEPT ![self] = << [ procedure |->  "EventSequenceATIP",
                                                                      pc        |->  "disconnectVStart",
                                                                      i_Eve     |->  i_Eve[self],
                                                                      j         |->  j[self],
                                                                      ip_Eve    |->  ip_Eve[self],
                                                                      host_Eve  |->  host_Eve[self],
                                                                      indecies  |->  indecies[self],
                                                                      depth     |->  depth[self] ] >>
                                                                  \o stack[self]]
                          /\ i_Eve' = [i_Eve EXCEPT ![self] = defaultInitValue]
                          /\ j' = [j EXCEPT ![self] = defaultInitValue]
                          /\ ip_Eve' = [ip_Eve EXCEPT ![self] = defaultInitValue]
                          /\ host_Eve' = [host_Eve EXCEPT ![self] = defaultInitValue]
                          /\ indecies' = [indecies EXCEPT ![self] = defaultInitValue]
                          /\ pc' = [pc EXCEPT ![self] = "evtSeqStart"]
                          /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, 
                                          Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, 
                                          Kk, Ll, Mm, Nn, Oo, Pp, Qq, Rr, Ss, 
                                          Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, H2, 
                                          MaxPorts, EP1, PortMap1, EP2, 
                                          PortMap2, TableFull, EvictionReroute, 
                                          PortScanInv, ATIPInv, MaxTableSize, 
                                          hosts, FreeHosts, UsedHosts, Ports, 
                                          ExtraPorts, ExtraExtraPorts, T, 
                                          FreeIPs, PrivIPs, PubIPs, PortSpace, 
                                          UsedIPs, Connections, SendQueue, 
                                          RcvQueue, MAX, Marker1, Marker2, 
                                          CmdConnect, CmdDisconnect, 
                                          PortSpaceFull, depth_, host_, hidx_, 
                                          host_idx_, pidx_, port_idx_, depth_D, 
                                          ip_, host_D, connDomain_, cidx_, 
                                          conn_, host_Con, ip_C, hidx_C, 
                                          host_idx_C, pidx_C, port_idx_C, 
                                          host_Dis, ip_Di, connDomain_D, 
                                          cidx_D, conn_D, host, ip, 
                                          connDomain_Di, cidx_Di, conn_Di, 
                                          depth_P, pkt_, ipkt_, entry_, conn_P, 
                                          hostMarker_, ip_idx_, ipidx_, ip_P, 
                                          host_P, pkt_P, ipkt_P, entry_P, 
                                          conn_Pu, hostMarker_P, ip_idx_P, 
                                          ipidx_P, ip_Pu, host_Pu, IP, 
                                          conn_PrivTo, sport_, dstAddr_, 
                                          dport_, pkt_Pr, hostMarker_Pr, 
                                          daddr_, hostidx_, hidx_P, 
                                          otherEntry_, i_, indicies_, 
                                          portDomain_, sourcePort_, destPort_, 
                                          new_sport_, conn, sport, dstAddr, 
                                          dport, pkt_Pri, hostMarker_Pri, 
                                          daddr_P, hostidx_P, hidx_Pr, 
                                          otherEntry_P, i_P, indicies_P, 
                                          portDomain_P, sourcePort_P, 
                                          destPort_P, new_sport_P, depth_Pr, 
                                          pkt_Priv, conn_Pr, hostMarker_Priv, 
                                          daddr_Pr, hostidx_Pr, hidx_Pri, 
                                          otherEntry_Pr, i_Pr, indicies_Pr, 
                                          portDomain_Pr, sourcePort_Pr, 
                                          destPort_Pr, new_sport_Pr, pkt_PrivT, 
                                          conn_Pri, hostMarker_PrivT, 
                                          daddr_Pri, hostidx_Pri, hidx_Priv, 
                                          otherEntry_Pri, i_Pri, indicies_Pri, 
                                          portDomain_Pri, sourcePort_Pri, 
                                          destPort_Pri, new_sport_Pri, depth_C, 
                                          host_C, hidx_Co, host_idx_Co, 
                                          pidx_Co, port_idx_Co, connhost, port, 
                                          host_Co, hidx_Con, host_idx, pidx, 
                                          port_idx, depth_Di, ip_D, host_Di, 
                                          connDomain, cidx, conn_Dis, depth_Pu, 
                                          pkt_Pu, ipkt_Pu, entry_Pu, conn_Pub, 
                                          hostMarker_Pu, ip_idx_Pu, ipidx_Pu, 
                                          ip_Pub, host_Pub, depth_Pri, 
                                          pkt_PrivTo, conn_Priv, 
                                          hostMarker_PrivTo, daddr_Priv, 
                                          hostidx_Priv, hidx_PrivT, 
                                          otherEntry_Priv, i_Priv, 
                                          indicies_Priv, portDomain_Priv, 
                                          sourcePort_Priv, destPort_Priv, 
                                          new_sport_Priv, good, depth_E, i_E, 
                                          j_, ip_E, host_E, indecies_, 
                                          depth_Ev, i_Ev, j_E, ip_Ev, host_Ev, 
                                          indecies_E, i_C, i_Ch, depth_Pub, 
                                          pkt_Pub, ipkt_Pub, entry_Pub, 
                                          conn_PubT, hostMarker_Pub, 
                                          ip_idx_Pub, ipidx_Pub, ip_PubT, 
                                          host_PubT, depth_Priv, pkt_PrivToP, 
                                          conn_PrivT, hostMarker_PrivToP, 
                                          daddr, hostidx, hidx, otherEntry, 
                                          i_PrivT, indicies, portDomain, 
                                          sourcePort, destPort, new_sport, 
                                          depth_PubT, pkt, ipkt, entry, 
                                          conn_PubTo, hostMarker, ip_idx, 
                                          ipidx, ip_PubTo, host_PubTo, i, aa >>

disconnectVStart(self) == /\ pc[self] = "disconnectVStart"
                          /\ IF Len(Connections) > 0
                                THEN /\ connDomain_' = [connDomain_ EXCEPT ![self] = DOMAIN Connections]
                                     /\ cidx_' = [cidx_ EXCEPT ![self] = CHOOSE c \in connDomain_'[self] : TRUE]
                                     /\ conn_' = [conn_ EXCEPT ![self] = Connections[cidx_'[self]]]
                                     /\ ip_' = [ip_ EXCEPT ![self] = conn_'[self][1]]
                                     /\ host_D' = [host_D EXCEPT ![self] = conn_'[self][2]]
                                     /\ PrintT(<< "Disconnect- Before:", host_D'[self], ip_'[self], Connections>>)
                                     /\ Connections' = SelectSeq(Connections, LAMBDA cc: Head(cc)/=ip_'[self])
                                     /\ UsedIPs' = SelectSeq(UsedIPs, LAMBDA ccc: ccc/=ip_'[self])
                                     /\ FreeIPs' = Append(FreeIPs, ip_'[self])
                                     /\ FreeHosts' = Append(FreeHosts, host_D'[self])
                                     /\ UsedHosts' = SelectSeq(UsedHosts, LAMBDA m: m /= host_D'[self])
                                     /\ PrintT(<< "Disconnect- After: ", host_D'[self], ip_'[self], Connections'>>)
                                ELSE /\ TRUE
                                     /\ UNCHANGED << FreeHosts, UsedHosts, 
                                                     FreeIPs, UsedIPs, 
                                                     Connections, ip_, host_D, 
                                                     connDomain_, cidx_, conn_ >>
                          /\ pc' = [pc EXCEPT ![self] = "disconnectRet_"]
                          /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, 
                                          Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, 
                                          Kk, Ll, Mm, Nn, Oo, Pp, Qq, Rr, Ss, 
                                          Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, H2, 
                                          MaxPorts, EP1, PortMap1, EP2, 
                                          PortMap2, TableFull, EvictionReroute, 
                                          PortScanInv, ATIPInv, MaxTableSize, 
                                          hosts, Ports, ExtraPorts, 
                                          ExtraExtraPorts, T, PrivIPs, PubIPs, 
                                          PortSpace, SendQueue, RcvQueue, MAX, 
                                          Marker1, Marker2, CmdConnect, 
                                          CmdDisconnect, PortSpaceFull, stack, 
                                          depth_, host_, hidx_, host_idx_, 
                                          pidx_, port_idx_, depth_D, host_Con, 
                                          ip_C, hidx_C, host_idx_C, pidx_C, 
                                          port_idx_C, host_Dis, ip_Di, 
                                          connDomain_D, cidx_D, conn_D, host, 
                                          ip, connDomain_Di, cidx_Di, conn_Di, 
                                          depth_P, pkt_, ipkt_, entry_, conn_P, 
                                          hostMarker_, ip_idx_, ipidx_, ip_P, 
                                          host_P, pkt_P, ipkt_P, entry_P, 
                                          conn_Pu, hostMarker_P, ip_idx_P, 
                                          ipidx_P, ip_Pu, host_Pu, IP, 
                                          conn_PrivTo, sport_, dstAddr_, 
                                          dport_, pkt_Pr, hostMarker_Pr, 
                                          daddr_, hostidx_, hidx_P, 
                                          otherEntry_, i_, indicies_, 
                                          portDomain_, sourcePort_, destPort_, 
                                          new_sport_, conn, sport, dstAddr, 
                                          dport, pkt_Pri, hostMarker_Pri, 
                                          daddr_P, hostidx_P, hidx_Pr, 
                                          otherEntry_P, i_P, indicies_P, 
                                          portDomain_P, sourcePort_P, 
                                          destPort_P, new_sport_P, depth_Pr, 
                                          pkt_Priv, conn_Pr, hostMarker_Priv, 
                                          daddr_Pr, hostidx_Pr, hidx_Pri, 
                                          otherEntry_Pr, i_Pr, indicies_Pr, 
                                          portDomain_Pr, sourcePort_Pr, 
                                          destPort_Pr, new_sport_Pr, pkt_PrivT, 
                                          conn_Pri, hostMarker_PrivT, 
                                          daddr_Pri, hostidx_Pri, hidx_Priv, 
                                          otherEntry_Pri, i_Pri, indicies_Pri, 
                                          portDomain_Pri, sourcePort_Pri, 
                                          destPort_Pri, new_sport_Pri, depth_C, 
                                          host_C, hidx_Co, host_idx_Co, 
                                          pidx_Co, port_idx_Co, connhost, port, 
                                          host_Co, hidx_Con, host_idx, pidx, 
                                          port_idx, depth_Di, ip_D, host_Di, 
                                          connDomain, cidx, conn_Dis, depth_Pu, 
                                          pkt_Pu, ipkt_Pu, entry_Pu, conn_Pub, 
                                          hostMarker_Pu, ip_idx_Pu, ipidx_Pu, 
                                          ip_Pub, host_Pub, depth_Pri, 
                                          pkt_PrivTo, conn_Priv, 
                                          hostMarker_PrivTo, daddr_Priv, 
                                          hostidx_Priv, hidx_PrivT, 
                                          otherEntry_Priv, i_Priv, 
                                          indicies_Priv, portDomain_Priv, 
                                          sourcePort_Priv, destPort_Priv, 
                                          new_sport_Priv, good, depth_E, i_E, 
                                          j_, ip_E, host_E, indecies_, 
                                          depth_Ev, i_Ev, j_E, ip_Ev, host_Ev, 
                                          indecies_E, i_C, i_Ch, depth_Pub, 
                                          pkt_Pub, ipkt_Pub, entry_Pub, 
                                          conn_PubT, hostMarker_Pub, 
                                          ip_idx_Pub, ipidx_Pub, ip_PubT, 
                                          host_PubT, depth_Priv, pkt_PrivToP, 
                                          conn_PrivT, hostMarker_PrivToP, 
                                          daddr, hostidx, hidx, otherEntry, 
                                          i_PrivT, indicies, portDomain, 
                                          sourcePort, destPort, new_sport, 
                                          depth_PubT, pkt, ipkt, entry, 
                                          conn_PubTo, hostMarker, ip_idx, 
                                          ipidx, ip_PubTo, host_PubTo, depth, 
                                          i_Eve, j, ip_Eve, host_Eve, indecies, 
                                          i, aa >>

disconnectRet_(self) == /\ pc[self] = "disconnectRet_"
                        /\ pc' = [pc EXCEPT ![self] = Head(stack[self]).pc]
                        /\ ip_' = [ip_ EXCEPT ![self] = Head(stack[self]).ip_]
                        /\ host_D' = [host_D EXCEPT ![self] = Head(stack[self]).host_D]
                        /\ connDomain_' = [connDomain_ EXCEPT ![self] = Head(stack[self]).connDomain_]
                        /\ cidx_' = [cidx_ EXCEPT ![self] = Head(stack[self]).cidx_]
                        /\ conn_' = [conn_ EXCEPT ![self] = Head(stack[self]).conn_]
                        /\ depth_D' = [depth_D EXCEPT ![self] = Head(stack[self]).depth_D]
                        /\ stack' = [stack EXCEPT ![self] = Tail(stack[self])]
                        /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, 
                                        Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, 
                                        Ll, Mm, Nn, Oo, Pp, Qq, Rr, Ss, Tt, Uu, 
                                        Vv, Ww, Xx, Yy, Zz, H1, H2, MaxPorts, 
                                        EP1, PortMap1, EP2, PortMap2, 
                                        TableFull, EvictionReroute, 
                                        PortScanInv, ATIPInv, MaxTableSize, 
                                        hosts, FreeHosts, UsedHosts, Ports, 
                                        ExtraPorts, ExtraExtraPorts, T, 
                                        FreeIPs, PrivIPs, PubIPs, PortSpace, 
                                        UsedIPs, Connections, SendQueue, 
                                        RcvQueue, MAX, Marker1, Marker2, 
                                        CmdConnect, CmdDisconnect, 
                                        PortSpaceFull, depth_, host_, hidx_, 
                                        host_idx_, pidx_, port_idx_, host_Con, 
                                        ip_C, hidx_C, host_idx_C, pidx_C, 
                                        port_idx_C, host_Dis, ip_Di, 
                                        connDomain_D, cidx_D, conn_D, host, ip, 
                                        connDomain_Di, cidx_Di, conn_Di, 
                                        depth_P, pkt_, ipkt_, entry_, conn_P, 
                                        hostMarker_, ip_idx_, ipidx_, ip_P, 
                                        host_P, pkt_P, ipkt_P, entry_P, 
                                        conn_Pu, hostMarker_P, ip_idx_P, 
                                        ipidx_P, ip_Pu, host_Pu, IP, 
                                        conn_PrivTo, sport_, dstAddr_, dport_, 
                                        pkt_Pr, hostMarker_Pr, daddr_, 
                                        hostidx_, hidx_P, otherEntry_, i_, 
                                        indicies_, portDomain_, sourcePort_, 
                                        destPort_, new_sport_, conn, sport, 
                                        dstAddr, dport, pkt_Pri, 
                                        hostMarker_Pri, daddr_P, hostidx_P, 
                                        hidx_Pr, otherEntry_P, i_P, indicies_P, 
                                        portDomain_P, sourcePort_P, destPort_P, 
                                        new_sport_P, depth_Pr, pkt_Priv, 
                                        conn_Pr, hostMarker_Priv, daddr_Pr, 
                                        hostidx_Pr, hidx_Pri, otherEntry_Pr, 
                                        i_Pr, indicies_Pr, portDomain_Pr, 
                                        sourcePort_Pr, destPort_Pr, 
                                        new_sport_Pr, pkt_PrivT, conn_Pri, 
                                        hostMarker_PrivT, daddr_Pri, 
                                        hostidx_Pri, hidx_Priv, otherEntry_Pri, 
                                        i_Pri, indicies_Pri, portDomain_Pri, 
                                        sourcePort_Pri, destPort_Pri, 
                                        new_sport_Pri, depth_C, host_C, 
                                        hidx_Co, host_idx_Co, pidx_Co, 
                                        port_idx_Co, connhost, port, host_Co, 
                                        hidx_Con, host_idx, pidx, port_idx, 
                                        depth_Di, ip_D, host_Di, connDomain, 
                                        cidx, conn_Dis, depth_Pu, pkt_Pu, 
                                        ipkt_Pu, entry_Pu, conn_Pub, 
                                        hostMarker_Pu, ip_idx_Pu, ipidx_Pu, 
                                        ip_Pub, host_Pub, depth_Pri, 
                                        pkt_PrivTo, conn_Priv, 
                                        hostMarker_PrivTo, daddr_Priv, 
                                        hostidx_Priv, hidx_PrivT, 
                                        otherEntry_Priv, i_Priv, indicies_Priv, 
                                        portDomain_Priv, sourcePort_Priv, 
                                        destPort_Priv, new_sport_Priv, good, 
                                        depth_E, i_E, j_, ip_E, host_E, 
                                        indecies_, depth_Ev, i_Ev, j_E, ip_Ev, 
                                        host_Ev, indecies_E, i_C, i_Ch, 
                                        depth_Pub, pkt_Pub, ipkt_Pub, 
                                        entry_Pub, conn_PubT, hostMarker_Pub, 
                                        ip_idx_Pub, ipidx_Pub, ip_PubT, 
                                        host_PubT, depth_Priv, pkt_PrivToP, 
                                        conn_PrivT, hostMarker_PrivToP, daddr, 
                                        hostidx, hidx, otherEntry, i_PrivT, 
                                        indicies, portDomain, sourcePort, 
                                        destPort, new_sport, depth_PubT, pkt, 
                                        ipkt, entry, conn_PubTo, hostMarker, 
                                        ip_idx, ipidx, ip_PubTo, host_PubTo, 
                                        depth, i_Eve, j, ip_Eve, host_Eve, 
                                        indecies, i, aa >>

DisconnectVuln(self) == disconnectVEvtSV(self) \/ disconnectVStart(self)
                           \/ disconnectRet_(self)

connectManStart(self) == /\ pc[self] = "connectManStart"
                         /\ IF Len(FreeHosts) > 0
                               THEN /\ PrintT(<< "ConnectMan - BEFORE ", FreeHosts, FreeIPs, Connections>>)
                                    /\ FreeIPs' = SelectSeq(FreeIPs, LAMBDA e: ~(e=ip_C[self]))
                                    /\ UsedIPs' = Append(UsedIPs, ip_C[self])
                                    /\ FreeHosts' = SelectSeq(FreeHosts, LAMBDA a: a /= host_Con[self])
                                    /\ UsedHosts' = Append(UsedHosts, host_Con[self])
                                    /\ Connections' = Append(Connections,  <<ip_C[self], host_Con[self]>>)
                                    /\ PrintT(<< "ConnectMan - AFTER ", FreeHosts', FreeIPs', Connections'>>)
                                    /\ port_idx_C' = [port_idx_C EXCEPT ![self] = DOMAIN Ports]
                                    /\ pidx_C' = [pidx_C EXCEPT ![self] = CHOOSE p \in port_idx_C'[self] : TRUE]
                               ELSE /\ TRUE
                                    /\ UNCHANGED << FreeHosts, UsedHosts, 
                                                    FreeIPs, UsedIPs, 
                                                    Connections, pidx_C, 
                                                    port_idx_C >>
                         /\ pc' = [pc EXCEPT ![self] = "connectManRet"]
                         /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, 
                                         Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, 
                                         Kk, Ll, Mm, Nn, Oo, Pp, Qq, Rr, Ss, 
                                         Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, H2, 
                                         MaxPorts, EP1, PortMap1, EP2, 
                                         PortMap2, TableFull, EvictionReroute, 
                                         PortScanInv, ATIPInv, MaxTableSize, 
                                         hosts, Ports, ExtraPorts, 
                                         ExtraExtraPorts, T, PrivIPs, PubIPs, 
                                         PortSpace, SendQueue, RcvQueue, MAX, 
                                         Marker1, Marker2, CmdConnect, 
                                         CmdDisconnect, PortSpaceFull, stack, 
                                         depth_, host_, hidx_, host_idx_, 
                                         pidx_, port_idx_, depth_D, ip_, 
                                         host_D, connDomain_, cidx_, conn_, 
                                         host_Con, ip_C, hidx_C, host_idx_C, 
                                         host_Dis, ip_Di, connDomain_D, cidx_D, 
                                         conn_D, host, ip, connDomain_Di, 
                                         cidx_Di, conn_Di, depth_P, pkt_, 
                                         ipkt_, entry_, conn_P, hostMarker_, 
                                         ip_idx_, ipidx_, ip_P, host_P, pkt_P, 
                                         ipkt_P, entry_P, conn_Pu, 
                                         hostMarker_P, ip_idx_P, ipidx_P, 
                                         ip_Pu, host_Pu, IP, conn_PrivTo, 
                                         sport_, dstAddr_, dport_, pkt_Pr, 
                                         hostMarker_Pr, daddr_, hostidx_, 
                                         hidx_P, otherEntry_, i_, indicies_, 
                                         portDomain_, sourcePort_, destPort_, 
                                         new_sport_, conn, sport, dstAddr, 
                                         dport, pkt_Pri, hostMarker_Pri, 
                                         daddr_P, hostidx_P, hidx_Pr, 
                                         otherEntry_P, i_P, indicies_P, 
                                         portDomain_P, sourcePort_P, 
                                         destPort_P, new_sport_P, depth_Pr, 
                                         pkt_Priv, conn_Pr, hostMarker_Priv, 
                                         daddr_Pr, hostidx_Pr, hidx_Pri, 
                                         otherEntry_Pr, i_Pr, indicies_Pr, 
                                         portDomain_Pr, sourcePort_Pr, 
                                         destPort_Pr, new_sport_Pr, pkt_PrivT, 
                                         conn_Pri, hostMarker_PrivT, daddr_Pri, 
                                         hostidx_Pri, hidx_Priv, 
                                         otherEntry_Pri, i_Pri, indicies_Pri, 
                                         portDomain_Pri, sourcePort_Pri, 
                                         destPort_Pri, new_sport_Pri, depth_C, 
                                         host_C, hidx_Co, host_idx_Co, pidx_Co, 
                                         port_idx_Co, connhost, port, host_Co, 
                                         hidx_Con, host_idx, pidx, port_idx, 
                                         depth_Di, ip_D, host_Di, connDomain, 
                                         cidx, conn_Dis, depth_Pu, pkt_Pu, 
                                         ipkt_Pu, entry_Pu, conn_Pub, 
                                         hostMarker_Pu, ip_idx_Pu, ipidx_Pu, 
                                         ip_Pub, host_Pub, depth_Pri, 
                                         pkt_PrivTo, conn_Priv, 
                                         hostMarker_PrivTo, daddr_Priv, 
                                         hostidx_Priv, hidx_PrivT, 
                                         otherEntry_Priv, i_Priv, 
                                         indicies_Priv, portDomain_Priv, 
                                         sourcePort_Priv, destPort_Priv, 
                                         new_sport_Priv, good, depth_E, i_E, 
                                         j_, ip_E, host_E, indecies_, depth_Ev, 
                                         i_Ev, j_E, ip_Ev, host_Ev, indecies_E, 
                                         i_C, i_Ch, depth_Pub, pkt_Pub, 
                                         ipkt_Pub, entry_Pub, conn_PubT, 
                                         hostMarker_Pub, ip_idx_Pub, ipidx_Pub, 
                                         ip_PubT, host_PubT, depth_Priv, 
                                         pkt_PrivToP, conn_PrivT, 
                                         hostMarker_PrivToP, daddr, hostidx, 
                                         hidx, otherEntry, i_PrivT, indicies, 
                                         portDomain, sourcePort, destPort, 
                                         new_sport, depth_PubT, pkt, ipkt, 
                                         entry, conn_PubTo, hostMarker, ip_idx, 
                                         ipidx, ip_PubTo, host_PubTo, depth, 
                                         i_Eve, j, ip_Eve, host_Eve, indecies, 
                                         i, aa >>

connectManRet(self) == /\ pc[self] = "connectManRet"
                       /\ pc' = [pc EXCEPT ![self] = Head(stack[self]).pc]
                       /\ hidx_C' = [hidx_C EXCEPT ![self] = Head(stack[self]).hidx_C]
                       /\ host_idx_C' = [host_idx_C EXCEPT ![self] = Head(stack[self]).host_idx_C]
                       /\ pidx_C' = [pidx_C EXCEPT ![self] = Head(stack[self]).pidx_C]
                       /\ port_idx_C' = [port_idx_C EXCEPT ![self] = Head(stack[self]).port_idx_C]
                       /\ host_Con' = [host_Con EXCEPT ![self] = Head(stack[self]).host_Con]
                       /\ ip_C' = [ip_C EXCEPT ![self] = Head(stack[self]).ip_C]
                       /\ stack' = [stack EXCEPT ![self] = Tail(stack[self])]
                       /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, 
                                       Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, 
                                       Ll, Mm, Nn, Oo, Pp, Qq, Rr, Ss, Tt, Uu, 
                                       Vv, Ww, Xx, Yy, Zz, H1, H2, MaxPorts, 
                                       EP1, PortMap1, EP2, PortMap2, TableFull, 
                                       EvictionReroute, PortScanInv, ATIPInv, 
                                       MaxTableSize, hosts, FreeHosts, 
                                       UsedHosts, Ports, ExtraPorts, 
                                       ExtraExtraPorts, T, FreeIPs, PrivIPs, 
                                       PubIPs, PortSpace, UsedIPs, Connections, 
                                       SendQueue, RcvQueue, MAX, Marker1, 
                                       Marker2, CmdConnect, CmdDisconnect, 
                                       PortSpaceFull, depth_, host_, hidx_, 
                                       host_idx_, pidx_, port_idx_, depth_D, 
                                       ip_, host_D, connDomain_, cidx_, conn_, 
                                       host_Dis, ip_Di, connDomain_D, cidx_D, 
                                       conn_D, host, ip, connDomain_Di, 
                                       cidx_Di, conn_Di, depth_P, pkt_, ipkt_, 
                                       entry_, conn_P, hostMarker_, ip_idx_, 
                                       ipidx_, ip_P, host_P, pkt_P, ipkt_P, 
                                       entry_P, conn_Pu, hostMarker_P, 
                                       ip_idx_P, ipidx_P, ip_Pu, host_Pu, IP, 
                                       conn_PrivTo, sport_, dstAddr_, dport_, 
                                       pkt_Pr, hostMarker_Pr, daddr_, hostidx_, 
                                       hidx_P, otherEntry_, i_, indicies_, 
                                       portDomain_, sourcePort_, destPort_, 
                                       new_sport_, conn, sport, dstAddr, dport, 
                                       pkt_Pri, hostMarker_Pri, daddr_P, 
                                       hostidx_P, hidx_Pr, otherEntry_P, i_P, 
                                       indicies_P, portDomain_P, sourcePort_P, 
                                       destPort_P, new_sport_P, depth_Pr, 
                                       pkt_Priv, conn_Pr, hostMarker_Priv, 
                                       daddr_Pr, hostidx_Pr, hidx_Pri, 
                                       otherEntry_Pr, i_Pr, indicies_Pr, 
                                       portDomain_Pr, sourcePort_Pr, 
                                       destPort_Pr, new_sport_Pr, pkt_PrivT, 
                                       conn_Pri, hostMarker_PrivT, daddr_Pri, 
                                       hostidx_Pri, hidx_Priv, otherEntry_Pri, 
                                       i_Pri, indicies_Pri, portDomain_Pri, 
                                       sourcePort_Pri, destPort_Pri, 
                                       new_sport_Pri, depth_C, host_C, hidx_Co, 
                                       host_idx_Co, pidx_Co, port_idx_Co, 
                                       connhost, port, host_Co, hidx_Con, 
                                       host_idx, pidx, port_idx, depth_Di, 
                                       ip_D, host_Di, connDomain, cidx, 
                                       conn_Dis, depth_Pu, pkt_Pu, ipkt_Pu, 
                                       entry_Pu, conn_Pub, hostMarker_Pu, 
                                       ip_idx_Pu, ipidx_Pu, ip_Pub, host_Pub, 
                                       depth_Pri, pkt_PrivTo, conn_Priv, 
                                       hostMarker_PrivTo, daddr_Priv, 
                                       hostidx_Priv, hidx_PrivT, 
                                       otherEntry_Priv, i_Priv, indicies_Priv, 
                                       portDomain_Priv, sourcePort_Priv, 
                                       destPort_Priv, new_sport_Priv, good, 
                                       depth_E, i_E, j_, ip_E, host_E, 
                                       indecies_, depth_Ev, i_Ev, j_E, ip_Ev, 
                                       host_Ev, indecies_E, i_C, i_Ch, 
                                       depth_Pub, pkt_Pub, ipkt_Pub, entry_Pub, 
                                       conn_PubT, hostMarker_Pub, ip_idx_Pub, 
                                       ipidx_Pub, ip_PubT, host_PubT, 
                                       depth_Priv, pkt_PrivToP, conn_PrivT, 
                                       hostMarker_PrivToP, daddr, hostidx, 
                                       hidx, otherEntry, i_PrivT, indicies, 
                                       portDomain, sourcePort, destPort, 
                                       new_sport, depth_PubT, pkt, ipkt, entry, 
                                       conn_PubTo, hostMarker, ip_idx, ipidx, 
                                       ip_PubTo, host_PubTo, depth, i_Eve, j, 
                                       ip_Eve, host_Eve, indecies, i, aa >>

ConnectMan(self) == connectManStart(self) \/ connectManRet(self)

disconnectManStart(self) == /\ pc[self] = "disconnectManStart"
                            /\ IF Len(Connections) > 0
                                  THEN /\ PrintT(<< "DisconnectMan - Before:", host_Dis[self], ip_Di[self], Connections>>)
                                       /\ Connections' = SelectSeq(Connections, LAMBDA cc: Head(cc)/=ip_Di[self])
                                       /\ UsedIPs' = SelectSeq(UsedIPs, LAMBDA ccc: ccc/=ip_Di[self])
                                       /\ FreeIPs' = Append(FreeIPs, ip_Di[self])
                                       /\ FreeHosts' = Append(FreeHosts, host_Dis[self])
                                       /\ UsedHosts' = SelectSeq(UsedHosts, LAMBDA m: m /= host_Dis[self])
                                       /\ PrintT(<< "DisconnectMan - After: ", host_Dis[self], ip_Di[self], Connections'>>)
                                       /\ pc' = [pc EXCEPT ![self] = "disconnectVulnPurgeOrphans1"]
                                  ELSE /\ pc' = [pc EXCEPT ![self] = "disconnectManRet"]
                                       /\ UNCHANGED << FreeHosts, UsedHosts, 
                                                       FreeIPs, UsedIPs, 
                                                       Connections >>
                            /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, 
                                            Aa, Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, 
                                            Jj, Kk, Ll, Mm, Nn, Oo, Pp, Qq, Rr, 
                                            Ss, Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, 
                                            H2, MaxPorts, EP1, PortMap1, EP2, 
                                            PortMap2, TableFull, 
                                            EvictionReroute, PortScanInv, 
                                            ATIPInv, MaxTableSize, hosts, 
                                            Ports, ExtraPorts, ExtraExtraPorts, 
                                            T, PrivIPs, PubIPs, PortSpace, 
                                            SendQueue, RcvQueue, MAX, Marker1, 
                                            Marker2, CmdConnect, CmdDisconnect, 
                                            PortSpaceFull, stack, depth_, 
                                            host_, hidx_, host_idx_, pidx_, 
                                            port_idx_, depth_D, ip_, host_D, 
                                            connDomain_, cidx_, conn_, 
                                            host_Con, ip_C, hidx_C, host_idx_C, 
                                            pidx_C, port_idx_C, host_Dis, 
                                            ip_Di, connDomain_D, cidx_D, 
                                            conn_D, host, ip, connDomain_Di, 
                                            cidx_Di, conn_Di, depth_P, pkt_, 
                                            ipkt_, entry_, conn_P, hostMarker_, 
                                            ip_idx_, ipidx_, ip_P, host_P, 
                                            pkt_P, ipkt_P, entry_P, conn_Pu, 
                                            hostMarker_P, ip_idx_P, ipidx_P, 
                                            ip_Pu, host_Pu, IP, conn_PrivTo, 
                                            sport_, dstAddr_, dport_, pkt_Pr, 
                                            hostMarker_Pr, daddr_, hostidx_, 
                                            hidx_P, otherEntry_, i_, indicies_, 
                                            portDomain_, sourcePort_, 
                                            destPort_, new_sport_, conn, sport, 
                                            dstAddr, dport, pkt_Pri, 
                                            hostMarker_Pri, daddr_P, hostidx_P, 
                                            hidx_Pr, otherEntry_P, i_P, 
                                            indicies_P, portDomain_P, 
                                            sourcePort_P, destPort_P, 
                                            new_sport_P, depth_Pr, pkt_Priv, 
                                            conn_Pr, hostMarker_Priv, daddr_Pr, 
                                            hostidx_Pr, hidx_Pri, 
                                            otherEntry_Pr, i_Pr, indicies_Pr, 
                                            portDomain_Pr, sourcePort_Pr, 
                                            destPort_Pr, new_sport_Pr, 
                                            pkt_PrivT, conn_Pri, 
                                            hostMarker_PrivT, daddr_Pri, 
                                            hostidx_Pri, hidx_Priv, 
                                            otherEntry_Pri, i_Pri, 
                                            indicies_Pri, portDomain_Pri, 
                                            sourcePort_Pri, destPort_Pri, 
                                            new_sport_Pri, depth_C, host_C, 
                                            hidx_Co, host_idx_Co, pidx_Co, 
                                            port_idx_Co, connhost, port, 
                                            host_Co, hidx_Con, host_idx, pidx, 
                                            port_idx, depth_Di, ip_D, host_Di, 
                                            connDomain, cidx, conn_Dis, 
                                            depth_Pu, pkt_Pu, ipkt_Pu, 
                                            entry_Pu, conn_Pub, hostMarker_Pu, 
                                            ip_idx_Pu, ipidx_Pu, ip_Pub, 
                                            host_Pub, depth_Pri, pkt_PrivTo, 
                                            conn_Priv, hostMarker_PrivTo, 
                                            daddr_Priv, hostidx_Priv, 
                                            hidx_PrivT, otherEntry_Priv, 
                                            i_Priv, indicies_Priv, 
                                            portDomain_Priv, sourcePort_Priv, 
                                            destPort_Priv, new_sport_Priv, 
                                            good, depth_E, i_E, j_, ip_E, 
                                            host_E, indecies_, depth_Ev, i_Ev, 
                                            j_E, ip_Ev, host_Ev, indecies_E, 
                                            i_C, i_Ch, depth_Pub, pkt_Pub, 
                                            ipkt_Pub, entry_Pub, conn_PubT, 
                                            hostMarker_Pub, ip_idx_Pub, 
                                            ipidx_Pub, ip_PubT, host_PubT, 
                                            depth_Priv, pkt_PrivToP, 
                                            conn_PrivT, hostMarker_PrivToP, 
                                            daddr, hostidx, hidx, otherEntry, 
                                            i_PrivT, indicies, portDomain, 
                                            sourcePort, destPort, new_sport, 
                                            depth_PubT, pkt, ipkt, entry, 
                                            conn_PubTo, hostMarker, ip_idx, 
                                            ipidx, ip_PubTo, host_PubTo, depth, 
                                            i_Eve, j, ip_Eve, host_Eve, 
                                            indecies, i, aa >>

disconnectVulnPurgeOrphans1(self) == /\ pc[self] = "disconnectVulnPurgeOrphans1"
                                     /\ T' = SelectSeq(T, LAMBDA e: e.orig.saddr /= ip_Di[self])
                                     /\ pc' = [pc EXCEPT ![self] = "disconnectVulnPurgeOrphans2"]
                                     /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, 
                                                     Z, NN, Aa, Bb, Cc, Dd, Ee, 
                                                     Ff, Gg, Hh, Ii, Jj, Kk, 
                                                     Ll, Mm, Nn, Oo, Pp, Qq, 
                                                     Rr, Ss, Tt, Uu, Vv, Ww, 
                                                     Xx, Yy, Zz, H1, H2, 
                                                     MaxPorts, EP1, PortMap1, 
                                                     EP2, PortMap2, TableFull, 
                                                     EvictionReroute, 
                                                     PortScanInv, ATIPInv, 
                                                     MaxTableSize, hosts, 
                                                     FreeHosts, UsedHosts, 
                                                     Ports, ExtraPorts, 
                                                     ExtraExtraPorts, FreeIPs, 
                                                     PrivIPs, PubIPs, 
                                                     PortSpace, UsedIPs, 
                                                     Connections, SendQueue, 
                                                     RcvQueue, MAX, Marker1, 
                                                     Marker2, CmdConnect, 
                                                     CmdDisconnect, 
                                                     PortSpaceFull, stack, 
                                                     depth_, host_, hidx_, 
                                                     host_idx_, pidx_, 
                                                     port_idx_, depth_D, ip_, 
                                                     host_D, connDomain_, 
                                                     cidx_, conn_, host_Con, 
                                                     ip_C, hidx_C, host_idx_C, 
                                                     pidx_C, port_idx_C, 
                                                     host_Dis, ip_Di, 
                                                     connDomain_D, cidx_D, 
                                                     conn_D, host, ip, 
                                                     connDomain_Di, cidx_Di, 
                                                     conn_Di, depth_P, pkt_, 
                                                     ipkt_, entry_, conn_P, 
                                                     hostMarker_, ip_idx_, 
                                                     ipidx_, ip_P, host_P, 
                                                     pkt_P, ipkt_P, entry_P, 
                                                     conn_Pu, hostMarker_P, 
                                                     ip_idx_P, ipidx_P, ip_Pu, 
                                                     host_Pu, IP, conn_PrivTo, 
                                                     sport_, dstAddr_, dport_, 
                                                     pkt_Pr, hostMarker_Pr, 
                                                     daddr_, hostidx_, hidx_P, 
                                                     otherEntry_, i_, 
                                                     indicies_, portDomain_, 
                                                     sourcePort_, destPort_, 
                                                     new_sport_, conn, sport, 
                                                     dstAddr, dport, pkt_Pri, 
                                                     hostMarker_Pri, daddr_P, 
                                                     hostidx_P, hidx_Pr, 
                                                     otherEntry_P, i_P, 
                                                     indicies_P, portDomain_P, 
                                                     sourcePort_P, destPort_P, 
                                                     new_sport_P, depth_Pr, 
                                                     pkt_Priv, conn_Pr, 
                                                     hostMarker_Priv, daddr_Pr, 
                                                     hostidx_Pr, hidx_Pri, 
                                                     otherEntry_Pr, i_Pr, 
                                                     indicies_Pr, 
                                                     portDomain_Pr, 
                                                     sourcePort_Pr, 
                                                     destPort_Pr, new_sport_Pr, 
                                                     pkt_PrivT, conn_Pri, 
                                                     hostMarker_PrivT, 
                                                     daddr_Pri, hostidx_Pri, 
                                                     hidx_Priv, otherEntry_Pri, 
                                                     i_Pri, indicies_Pri, 
                                                     portDomain_Pri, 
                                                     sourcePort_Pri, 
                                                     destPort_Pri, 
                                                     new_sport_Pri, depth_C, 
                                                     host_C, hidx_Co, 
                                                     host_idx_Co, pidx_Co, 
                                                     port_idx_Co, connhost, 
                                                     port, host_Co, hidx_Con, 
                                                     host_idx, pidx, port_idx, 
                                                     depth_Di, ip_D, host_Di, 
                                                     connDomain, cidx, 
                                                     conn_Dis, depth_Pu, 
                                                     pkt_Pu, ipkt_Pu, entry_Pu, 
                                                     conn_Pub, hostMarker_Pu, 
                                                     ip_idx_Pu, ipidx_Pu, 
                                                     ip_Pub, host_Pub, 
                                                     depth_Pri, pkt_PrivTo, 
                                                     conn_Priv, 
                                                     hostMarker_PrivTo, 
                                                     daddr_Priv, hostidx_Priv, 
                                                     hidx_PrivT, 
                                                     otherEntry_Priv, i_Priv, 
                                                     indicies_Priv, 
                                                     portDomain_Priv, 
                                                     sourcePort_Priv, 
                                                     destPort_Priv, 
                                                     new_sport_Priv, good, 
                                                     depth_E, i_E, j_, ip_E, 
                                                     host_E, indecies_, 
                                                     depth_Ev, i_Ev, j_E, 
                                                     ip_Ev, host_Ev, 
                                                     indecies_E, i_C, i_Ch, 
                                                     depth_Pub, pkt_Pub, 
                                                     ipkt_Pub, entry_Pub, 
                                                     conn_PubT, hostMarker_Pub, 
                                                     ip_idx_Pub, ipidx_Pub, 
                                                     ip_PubT, host_PubT, 
                                                     depth_Priv, pkt_PrivToP, 
                                                     conn_PrivT, 
                                                     hostMarker_PrivToP, daddr, 
                                                     hostidx, hidx, otherEntry, 
                                                     i_PrivT, indicies, 
                                                     portDomain, sourcePort, 
                                                     destPort, new_sport, 
                                                     depth_PubT, pkt, ipkt, 
                                                     entry, conn_PubTo, 
                                                     hostMarker, ip_idx, ipidx, 
                                                     ip_PubTo, host_PubTo, 
                                                     depth, i_Eve, j, ip_Eve, 
                                                     host_Eve, indecies, i, aa >>

disconnectVulnPurgeOrphans2(self) == /\ pc[self] = "disconnectVulnPurgeOrphans2"
                                     /\ T' = SelectSeq(T, LAMBDA e: e.orig.saddr /= host_Dis[self])
                                     /\ IF host_Dis[self]=H1
                                           THEN /\ PortMap1' = <<>>
                                                /\ UNCHANGED PortMap2
                                           ELSE /\ PortMap2' = <<>>
                                                /\ UNCHANGED PortMap1
                                     /\ pc' = [pc EXCEPT ![self] = "disconnectManRet"]
                                     /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, 
                                                     Z, NN, Aa, Bb, Cc, Dd, Ee, 
                                                     Ff, Gg, Hh, Ii, Jj, Kk, 
                                                     Ll, Mm, Nn, Oo, Pp, Qq, 
                                                     Rr, Ss, Tt, Uu, Vv, Ww, 
                                                     Xx, Yy, Zz, H1, H2, 
                                                     MaxPorts, EP1, EP2, 
                                                     TableFull, 
                                                     EvictionReroute, 
                                                     PortScanInv, ATIPInv, 
                                                     MaxTableSize, hosts, 
                                                     FreeHosts, UsedHosts, 
                                                     Ports, ExtraPorts, 
                                                     ExtraExtraPorts, FreeIPs, 
                                                     PrivIPs, PubIPs, 
                                                     PortSpace, UsedIPs, 
                                                     Connections, SendQueue, 
                                                     RcvQueue, MAX, Marker1, 
                                                     Marker2, CmdConnect, 
                                                     CmdDisconnect, 
                                                     PortSpaceFull, stack, 
                                                     depth_, host_, hidx_, 
                                                     host_idx_, pidx_, 
                                                     port_idx_, depth_D, ip_, 
                                                     host_D, connDomain_, 
                                                     cidx_, conn_, host_Con, 
                                                     ip_C, hidx_C, host_idx_C, 
                                                     pidx_C, port_idx_C, 
                                                     host_Dis, ip_Di, 
                                                     connDomain_D, cidx_D, 
                                                     conn_D, host, ip, 
                                                     connDomain_Di, cidx_Di, 
                                                     conn_Di, depth_P, pkt_, 
                                                     ipkt_, entry_, conn_P, 
                                                     hostMarker_, ip_idx_, 
                                                     ipidx_, ip_P, host_P, 
                                                     pkt_P, ipkt_P, entry_P, 
                                                     conn_Pu, hostMarker_P, 
                                                     ip_idx_P, ipidx_P, ip_Pu, 
                                                     host_Pu, IP, conn_PrivTo, 
                                                     sport_, dstAddr_, dport_, 
                                                     pkt_Pr, hostMarker_Pr, 
                                                     daddr_, hostidx_, hidx_P, 
                                                     otherEntry_, i_, 
                                                     indicies_, portDomain_, 
                                                     sourcePort_, destPort_, 
                                                     new_sport_, conn, sport, 
                                                     dstAddr, dport, pkt_Pri, 
                                                     hostMarker_Pri, daddr_P, 
                                                     hostidx_P, hidx_Pr, 
                                                     otherEntry_P, i_P, 
                                                     indicies_P, portDomain_P, 
                                                     sourcePort_P, destPort_P, 
                                                     new_sport_P, depth_Pr, 
                                                     pkt_Priv, conn_Pr, 
                                                     hostMarker_Priv, daddr_Pr, 
                                                     hostidx_Pr, hidx_Pri, 
                                                     otherEntry_Pr, i_Pr, 
                                                     indicies_Pr, 
                                                     portDomain_Pr, 
                                                     sourcePort_Pr, 
                                                     destPort_Pr, new_sport_Pr, 
                                                     pkt_PrivT, conn_Pri, 
                                                     hostMarker_PrivT, 
                                                     daddr_Pri, hostidx_Pri, 
                                                     hidx_Priv, otherEntry_Pri, 
                                                     i_Pri, indicies_Pri, 
                                                     portDomain_Pri, 
                                                     sourcePort_Pri, 
                                                     destPort_Pri, 
                                                     new_sport_Pri, depth_C, 
                                                     host_C, hidx_Co, 
                                                     host_idx_Co, pidx_Co, 
                                                     port_idx_Co, connhost, 
                                                     port, host_Co, hidx_Con, 
                                                     host_idx, pidx, port_idx, 
                                                     depth_Di, ip_D, host_Di, 
                                                     connDomain, cidx, 
                                                     conn_Dis, depth_Pu, 
                                                     pkt_Pu, ipkt_Pu, entry_Pu, 
                                                     conn_Pub, hostMarker_Pu, 
                                                     ip_idx_Pu, ipidx_Pu, 
                                                     ip_Pub, host_Pub, 
                                                     depth_Pri, pkt_PrivTo, 
                                                     conn_Priv, 
                                                     hostMarker_PrivTo, 
                                                     daddr_Priv, hostidx_Priv, 
                                                     hidx_PrivT, 
                                                     otherEntry_Priv, i_Priv, 
                                                     indicies_Priv, 
                                                     portDomain_Priv, 
                                                     sourcePort_Priv, 
                                                     destPort_Priv, 
                                                     new_sport_Priv, good, 
                                                     depth_E, i_E, j_, ip_E, 
                                                     host_E, indecies_, 
                                                     depth_Ev, i_Ev, j_E, 
                                                     ip_Ev, host_Ev, 
                                                     indecies_E, i_C, i_Ch, 
                                                     depth_Pub, pkt_Pub, 
                                                     ipkt_Pub, entry_Pub, 
                                                     conn_PubT, hostMarker_Pub, 
                                                     ip_idx_Pub, ipidx_Pub, 
                                                     ip_PubT, host_PubT, 
                                                     depth_Priv, pkt_PrivToP, 
                                                     conn_PrivT, 
                                                     hostMarker_PrivToP, daddr, 
                                                     hostidx, hidx, otherEntry, 
                                                     i_PrivT, indicies, 
                                                     portDomain, sourcePort, 
                                                     destPort, new_sport, 
                                                     depth_PubT, pkt, ipkt, 
                                                     entry, conn_PubTo, 
                                                     hostMarker, ip_idx, ipidx, 
                                                     ip_PubTo, host_PubTo, 
                                                     depth, i_Eve, j, ip_Eve, 
                                                     host_Eve, indecies, i, aa >>

disconnectManRet(self) == /\ pc[self] = "disconnectManRet"
                          /\ pc' = [pc EXCEPT ![self] = Head(stack[self]).pc]
                          /\ connDomain_D' = [connDomain_D EXCEPT ![self] = Head(stack[self]).connDomain_D]
                          /\ cidx_D' = [cidx_D EXCEPT ![self] = Head(stack[self]).cidx_D]
                          /\ conn_D' = [conn_D EXCEPT ![self] = Head(stack[self]).conn_D]
                          /\ host_Dis' = [host_Dis EXCEPT ![self] = Head(stack[self]).host_Dis]
                          /\ ip_Di' = [ip_Di EXCEPT ![self] = Head(stack[self]).ip_Di]
                          /\ stack' = [stack EXCEPT ![self] = Tail(stack[self])]
                          /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, 
                                          Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, 
                                          Kk, Ll, Mm, Nn, Oo, Pp, Qq, Rr, Ss, 
                                          Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, H2, 
                                          MaxPorts, EP1, PortMap1, EP2, 
                                          PortMap2, TableFull, EvictionReroute, 
                                          PortScanInv, ATIPInv, MaxTableSize, 
                                          hosts, FreeHosts, UsedHosts, Ports, 
                                          ExtraPorts, ExtraExtraPorts, T, 
                                          FreeIPs, PrivIPs, PubIPs, PortSpace, 
                                          UsedIPs, Connections, SendQueue, 
                                          RcvQueue, MAX, Marker1, Marker2, 
                                          CmdConnect, CmdDisconnect, 
                                          PortSpaceFull, depth_, host_, hidx_, 
                                          host_idx_, pidx_, port_idx_, depth_D, 
                                          ip_, host_D, connDomain_, cidx_, 
                                          conn_, host_Con, ip_C, hidx_C, 
                                          host_idx_C, pidx_C, port_idx_C, host, 
                                          ip, connDomain_Di, cidx_Di, conn_Di, 
                                          depth_P, pkt_, ipkt_, entry_, conn_P, 
                                          hostMarker_, ip_idx_, ipidx_, ip_P, 
                                          host_P, pkt_P, ipkt_P, entry_P, 
                                          conn_Pu, hostMarker_P, ip_idx_P, 
                                          ipidx_P, ip_Pu, host_Pu, IP, 
                                          conn_PrivTo, sport_, dstAddr_, 
                                          dport_, pkt_Pr, hostMarker_Pr, 
                                          daddr_, hostidx_, hidx_P, 
                                          otherEntry_, i_, indicies_, 
                                          portDomain_, sourcePort_, destPort_, 
                                          new_sport_, conn, sport, dstAddr, 
                                          dport, pkt_Pri, hostMarker_Pri, 
                                          daddr_P, hostidx_P, hidx_Pr, 
                                          otherEntry_P, i_P, indicies_P, 
                                          portDomain_P, sourcePort_P, 
                                          destPort_P, new_sport_P, depth_Pr, 
                                          pkt_Priv, conn_Pr, hostMarker_Priv, 
                                          daddr_Pr, hostidx_Pr, hidx_Pri, 
                                          otherEntry_Pr, i_Pr, indicies_Pr, 
                                          portDomain_Pr, sourcePort_Pr, 
                                          destPort_Pr, new_sport_Pr, pkt_PrivT, 
                                          conn_Pri, hostMarker_PrivT, 
                                          daddr_Pri, hostidx_Pri, hidx_Priv, 
                                          otherEntry_Pri, i_Pri, indicies_Pri, 
                                          portDomain_Pri, sourcePort_Pri, 
                                          destPort_Pri, new_sport_Pri, depth_C, 
                                          host_C, hidx_Co, host_idx_Co, 
                                          pidx_Co, port_idx_Co, connhost, port, 
                                          host_Co, hidx_Con, host_idx, pidx, 
                                          port_idx, depth_Di, ip_D, host_Di, 
                                          connDomain, cidx, conn_Dis, depth_Pu, 
                                          pkt_Pu, ipkt_Pu, entry_Pu, conn_Pub, 
                                          hostMarker_Pu, ip_idx_Pu, ipidx_Pu, 
                                          ip_Pub, host_Pub, depth_Pri, 
                                          pkt_PrivTo, conn_Priv, 
                                          hostMarker_PrivTo, daddr_Priv, 
                                          hostidx_Priv, hidx_PrivT, 
                                          otherEntry_Priv, i_Priv, 
                                          indicies_Priv, portDomain_Priv, 
                                          sourcePort_Priv, destPort_Priv, 
                                          new_sport_Priv, good, depth_E, i_E, 
                                          j_, ip_E, host_E, indecies_, 
                                          depth_Ev, i_Ev, j_E, ip_Ev, host_Ev, 
                                          indecies_E, i_C, i_Ch, depth_Pub, 
                                          pkt_Pub, ipkt_Pub, entry_Pub, 
                                          conn_PubT, hostMarker_Pub, 
                                          ip_idx_Pub, ipidx_Pub, ip_PubT, 
                                          host_PubT, depth_Priv, pkt_PrivToP, 
                                          conn_PrivT, hostMarker_PrivToP, 
                                          daddr, hostidx, hidx, otherEntry, 
                                          i_PrivT, indicies, portDomain, 
                                          sourcePort, destPort, new_sport, 
                                          depth_PubT, pkt, ipkt, entry, 
                                          conn_PubTo, hostMarker, ip_idx, 
                                          ipidx, ip_PubTo, host_PubTo, depth, 
                                          i_Eve, j, ip_Eve, host_Eve, indecies, 
                                          i, aa >>

DisconnectMan(self) == disconnectManStart(self)
                          \/ disconnectVulnPurgeOrphans1(self)
                          \/ disconnectVulnPurgeOrphans2(self)
                          \/ disconnectManRet(self)

disconnectVulnManStart(self) == /\ pc[self] = "disconnectVulnManStart"
                                /\ IF Len(Connections) > 0
                                      THEN /\ PrintT(<< "DisconnectVulnMan- Before:", host[self], ip[self], Connections>>)
                                           /\ Connections' = SelectSeq(Connections, LAMBDA cc: Head(cc)/=ip[self])
                                           /\ UsedIPs' = SelectSeq(UsedIPs, LAMBDA ccc: ccc/=ip[self])
                                           /\ FreeIPs' = Append(FreeIPs, ip[self])
                                           /\ FreeHosts' = Append(FreeHosts, host[self])
                                           /\ UsedHosts' = SelectSeq(UsedHosts, LAMBDA m: m /= host[self])
                                           /\ PrintT(<< "DisconnectVulnMan - After: ", host[self], ip[self], Connections'>>)
                                      ELSE /\ TRUE
                                           /\ UNCHANGED << FreeHosts, 
                                                           UsedHosts, FreeIPs, 
                                                           UsedIPs, 
                                                           Connections >>
                                /\ pc' = [pc EXCEPT ![self] = "disconnectVulnManRet"]
                                /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, 
                                                NN, Aa, Bb, Cc, Dd, Ee, Ff, Gg, 
                                                Hh, Ii, Jj, Kk, Ll, Mm, Nn, Oo, 
                                                Pp, Qq, Rr, Ss, Tt, Uu, Vv, Ww, 
                                                Xx, Yy, Zz, H1, H2, MaxPorts, 
                                                EP1, PortMap1, EP2, PortMap2, 
                                                TableFull, EvictionReroute, 
                                                PortScanInv, ATIPInv, 
                                                MaxTableSize, hosts, Ports, 
                                                ExtraPorts, ExtraExtraPorts, T, 
                                                PrivIPs, PubIPs, PortSpace, 
                                                SendQueue, RcvQueue, MAX, 
                                                Marker1, Marker2, CmdConnect, 
                                                CmdDisconnect, PortSpaceFull, 
                                                stack, depth_, host_, hidx_, 
                                                host_idx_, pidx_, port_idx_, 
                                                depth_D, ip_, host_D, 
                                                connDomain_, cidx_, conn_, 
                                                host_Con, ip_C, hidx_C, 
                                                host_idx_C, pidx_C, port_idx_C, 
                                                host_Dis, ip_Di, connDomain_D, 
                                                cidx_D, conn_D, host, ip, 
                                                connDomain_Di, cidx_Di, 
                                                conn_Di, depth_P, pkt_, ipkt_, 
                                                entry_, conn_P, hostMarker_, 
                                                ip_idx_, ipidx_, ip_P, host_P, 
                                                pkt_P, ipkt_P, entry_P, 
                                                conn_Pu, hostMarker_P, 
                                                ip_idx_P, ipidx_P, ip_Pu, 
                                                host_Pu, IP, conn_PrivTo, 
                                                sport_, dstAddr_, dport_, 
                                                pkt_Pr, hostMarker_Pr, daddr_, 
                                                hostidx_, hidx_P, otherEntry_, 
                                                i_, indicies_, portDomain_, 
                                                sourcePort_, destPort_, 
                                                new_sport_, conn, sport, 
                                                dstAddr, dport, pkt_Pri, 
                                                hostMarker_Pri, daddr_P, 
                                                hostidx_P, hidx_Pr, 
                                                otherEntry_P, i_P, indicies_P, 
                                                portDomain_P, sourcePort_P, 
                                                destPort_P, new_sport_P, 
                                                depth_Pr, pkt_Priv, conn_Pr, 
                                                hostMarker_Priv, daddr_Pr, 
                                                hostidx_Pr, hidx_Pri, 
                                                otherEntry_Pr, i_Pr, 
                                                indicies_Pr, portDomain_Pr, 
                                                sourcePort_Pr, destPort_Pr, 
                                                new_sport_Pr, pkt_PrivT, 
                                                conn_Pri, hostMarker_PrivT, 
                                                daddr_Pri, hostidx_Pri, 
                                                hidx_Priv, otherEntry_Pri, 
                                                i_Pri, indicies_Pri, 
                                                portDomain_Pri, sourcePort_Pri, 
                                                destPort_Pri, new_sport_Pri, 
                                                depth_C, host_C, hidx_Co, 
                                                host_idx_Co, pidx_Co, 
                                                port_idx_Co, connhost, port, 
                                                host_Co, hidx_Con, host_idx, 
                                                pidx, port_idx, depth_Di, ip_D, 
                                                host_Di, connDomain, cidx, 
                                                conn_Dis, depth_Pu, pkt_Pu, 
                                                ipkt_Pu, entry_Pu, conn_Pub, 
                                                hostMarker_Pu, ip_idx_Pu, 
                                                ipidx_Pu, ip_Pub, host_Pub, 
                                                depth_Pri, pkt_PrivTo, 
                                                conn_Priv, hostMarker_PrivTo, 
                                                daddr_Priv, hostidx_Priv, 
                                                hidx_PrivT, otherEntry_Priv, 
                                                i_Priv, indicies_Priv, 
                                                portDomain_Priv, 
                                                sourcePort_Priv, destPort_Priv, 
                                                new_sport_Priv, good, depth_E, 
                                                i_E, j_, ip_E, host_E, 
                                                indecies_, depth_Ev, i_Ev, j_E, 
                                                ip_Ev, host_Ev, indecies_E, 
                                                i_C, i_Ch, depth_Pub, pkt_Pub, 
                                                ipkt_Pub, entry_Pub, conn_PubT, 
                                                hostMarker_Pub, ip_idx_Pub, 
                                                ipidx_Pub, ip_PubT, host_PubT, 
                                                depth_Priv, pkt_PrivToP, 
                                                conn_PrivT, hostMarker_PrivToP, 
                                                daddr, hostidx, hidx, 
                                                otherEntry, i_PrivT, indicies, 
                                                portDomain, sourcePort, 
                                                destPort, new_sport, 
                                                depth_PubT, pkt, ipkt, entry, 
                                                conn_PubTo, hostMarker, ip_idx, 
                                                ipidx, ip_PubTo, host_PubTo, 
                                                depth, i_Eve, j, ip_Eve, 
                                                host_Eve, indecies, i, aa >>

disconnectVulnManRet(self) == /\ pc[self] = "disconnectVulnManRet"
                              /\ pc' = [pc EXCEPT ![self] = Head(stack[self]).pc]
                              /\ connDomain_Di' = [connDomain_Di EXCEPT ![self] = Head(stack[self]).connDomain_Di]
                              /\ cidx_Di' = [cidx_Di EXCEPT ![self] = Head(stack[self]).cidx_Di]
                              /\ conn_Di' = [conn_Di EXCEPT ![self] = Head(stack[self]).conn_Di]
                              /\ host' = [host EXCEPT ![self] = Head(stack[self]).host]
                              /\ ip' = [ip EXCEPT ![self] = Head(stack[self]).ip]
                              /\ stack' = [stack EXCEPT ![self] = Tail(stack[self])]
                              /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, 
                                              Aa, Bb, Cc, Dd, Ee, Ff, Gg, Hh, 
                                              Ii, Jj, Kk, Ll, Mm, Nn, Oo, Pp, 
                                              Qq, Rr, Ss, Tt, Uu, Vv, Ww, Xx, 
                                              Yy, Zz, H1, H2, MaxPorts, EP1, 
                                              PortMap1, EP2, PortMap2, 
                                              TableFull, EvictionReroute, 
                                              PortScanInv, ATIPInv, 
                                              MaxTableSize, hosts, FreeHosts, 
                                              UsedHosts, Ports, ExtraPorts, 
                                              ExtraExtraPorts, T, FreeIPs, 
                                              PrivIPs, PubIPs, PortSpace, 
                                              UsedIPs, Connections, SendQueue, 
                                              RcvQueue, MAX, Marker1, Marker2, 
                                              CmdConnect, CmdDisconnect, 
                                              PortSpaceFull, depth_, host_, 
                                              hidx_, host_idx_, pidx_, 
                                              port_idx_, depth_D, ip_, host_D, 
                                              connDomain_, cidx_, conn_, 
                                              host_Con, ip_C, hidx_C, 
                                              host_idx_C, pidx_C, port_idx_C, 
                                              host_Dis, ip_Di, connDomain_D, 
                                              cidx_D, conn_D, depth_P, pkt_, 
                                              ipkt_, entry_, conn_P, 
                                              hostMarker_, ip_idx_, ipidx_, 
                                              ip_P, host_P, pkt_P, ipkt_P, 
                                              entry_P, conn_Pu, hostMarker_P, 
                                              ip_idx_P, ipidx_P, ip_Pu, 
                                              host_Pu, IP, conn_PrivTo, sport_, 
                                              dstAddr_, dport_, pkt_Pr, 
                                              hostMarker_Pr, daddr_, hostidx_, 
                                              hidx_P, otherEntry_, i_, 
                                              indicies_, portDomain_, 
                                              sourcePort_, destPort_, 
                                              new_sport_, conn, sport, dstAddr, 
                                              dport, pkt_Pri, hostMarker_Pri, 
                                              daddr_P, hostidx_P, hidx_Pr, 
                                              otherEntry_P, i_P, indicies_P, 
                                              portDomain_P, sourcePort_P, 
                                              destPort_P, new_sport_P, 
                                              depth_Pr, pkt_Priv, conn_Pr, 
                                              hostMarker_Priv, daddr_Pr, 
                                              hostidx_Pr, hidx_Pri, 
                                              otherEntry_Pr, i_Pr, indicies_Pr, 
                                              portDomain_Pr, sourcePort_Pr, 
                                              destPort_Pr, new_sport_Pr, 
                                              pkt_PrivT, conn_Pri, 
                                              hostMarker_PrivT, daddr_Pri, 
                                              hostidx_Pri, hidx_Priv, 
                                              otherEntry_Pri, i_Pri, 
                                              indicies_Pri, portDomain_Pri, 
                                              sourcePort_Pri, destPort_Pri, 
                                              new_sport_Pri, depth_C, host_C, 
                                              hidx_Co, host_idx_Co, pidx_Co, 
                                              port_idx_Co, connhost, port, 
                                              host_Co, hidx_Con, host_idx, 
                                              pidx, port_idx, depth_Di, ip_D, 
                                              host_Di, connDomain, cidx, 
                                              conn_Dis, depth_Pu, pkt_Pu, 
                                              ipkt_Pu, entry_Pu, conn_Pub, 
                                              hostMarker_Pu, ip_idx_Pu, 
                                              ipidx_Pu, ip_Pub, host_Pub, 
                                              depth_Pri, pkt_PrivTo, conn_Priv, 
                                              hostMarker_PrivTo, daddr_Priv, 
                                              hostidx_Priv, hidx_PrivT, 
                                              otherEntry_Priv, i_Priv, 
                                              indicies_Priv, portDomain_Priv, 
                                              sourcePort_Priv, destPort_Priv, 
                                              new_sport_Priv, good, depth_E, 
                                              i_E, j_, ip_E, host_E, indecies_, 
                                              depth_Ev, i_Ev, j_E, ip_Ev, 
                                              host_Ev, indecies_E, i_C, i_Ch, 
                                              depth_Pub, pkt_Pub, ipkt_Pub, 
                                              entry_Pub, conn_PubT, 
                                              hostMarker_Pub, ip_idx_Pub, 
                                              ipidx_Pub, ip_PubT, host_PubT, 
                                              depth_Priv, pkt_PrivToP, 
                                              conn_PrivT, hostMarker_PrivToP, 
                                              daddr, hostidx, hidx, otherEntry, 
                                              i_PrivT, indicies, portDomain, 
                                              sourcePort, destPort, new_sport, 
                                              depth_PubT, pkt, ipkt, entry, 
                                              conn_PubTo, hostMarker, ip_idx, 
                                              ipidx, ip_PubTo, host_PubTo, 
                                              depth, i_Eve, j, ip_Eve, 
                                              host_Eve, indecies, i, aa >>

DisconnectVulnMan(self) == disconnectVulnManStart(self)
                              \/ disconnectVulnManRet(self)

pubtoprivVEvt3_(self) == /\ pc[self] = "pubtoprivVEvt3_"
                         /\ /\ depth' = [depth EXCEPT ![self] = depth_P[self]]
                            /\ stack' = [stack EXCEPT ![self] = << [ procedure |->  "EventSequenceATIP",
                                                                     pc        |->  "pubtoprivVStart_",
                                                                     i_Eve     |->  i_Eve[self],
                                                                     j         |->  j[self],
                                                                     ip_Eve    |->  ip_Eve[self],
                                                                     host_Eve  |->  host_Eve[self],
                                                                     indecies  |->  indecies[self],
                                                                     depth     |->  depth[self] ] >>
                                                                 \o stack[self]]
                         /\ i_Eve' = [i_Eve EXCEPT ![self] = defaultInitValue]
                         /\ j' = [j EXCEPT ![self] = defaultInitValue]
                         /\ ip_Eve' = [ip_Eve EXCEPT ![self] = defaultInitValue]
                         /\ host_Eve' = [host_Eve EXCEPT ![self] = defaultInitValue]
                         /\ indecies' = [indecies EXCEPT ![self] = defaultInitValue]
                         /\ pc' = [pc EXCEPT ![self] = "evtSeqStart"]
                         /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, 
                                         Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, 
                                         Kk, Ll, Mm, Nn, Oo, Pp, Qq, Rr, Ss, 
                                         Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, H2, 
                                         MaxPorts, EP1, PortMap1, EP2, 
                                         PortMap2, TableFull, EvictionReroute, 
                                         PortScanInv, ATIPInv, MaxTableSize, 
                                         hosts, FreeHosts, UsedHosts, Ports, 
                                         ExtraPorts, ExtraExtraPorts, T, 
                                         FreeIPs, PrivIPs, PubIPs, PortSpace, 
                                         UsedIPs, Connections, SendQueue, 
                                         RcvQueue, MAX, Marker1, Marker2, 
                                         CmdConnect, CmdDisconnect, 
                                         PortSpaceFull, depth_, host_, hidx_, 
                                         host_idx_, pidx_, port_idx_, depth_D, 
                                         ip_, host_D, connDomain_, cidx_, 
                                         conn_, host_Con, ip_C, hidx_C, 
                                         host_idx_C, pidx_C, port_idx_C, 
                                         host_Dis, ip_Di, connDomain_D, cidx_D, 
                                         conn_D, host, ip, connDomain_Di, 
                                         cidx_Di, conn_Di, depth_P, pkt_, 
                                         ipkt_, entry_, conn_P, hostMarker_, 
                                         ip_idx_, ipidx_, ip_P, host_P, pkt_P, 
                                         ipkt_P, entry_P, conn_Pu, 
                                         hostMarker_P, ip_idx_P, ipidx_P, 
                                         ip_Pu, host_Pu, IP, conn_PrivTo, 
                                         sport_, dstAddr_, dport_, pkt_Pr, 
                                         hostMarker_Pr, daddr_, hostidx_, 
                                         hidx_P, otherEntry_, i_, indicies_, 
                                         portDomain_, sourcePort_, destPort_, 
                                         new_sport_, conn, sport, dstAddr, 
                                         dport, pkt_Pri, hostMarker_Pri, 
                                         daddr_P, hostidx_P, hidx_Pr, 
                                         otherEntry_P, i_P, indicies_P, 
                                         portDomain_P, sourcePort_P, 
                                         destPort_P, new_sport_P, depth_Pr, 
                                         pkt_Priv, conn_Pr, hostMarker_Priv, 
                                         daddr_Pr, hostidx_Pr, hidx_Pri, 
                                         otherEntry_Pr, i_Pr, indicies_Pr, 
                                         portDomain_Pr, sourcePort_Pr, 
                                         destPort_Pr, new_sport_Pr, pkt_PrivT, 
                                         conn_Pri, hostMarker_PrivT, daddr_Pri, 
                                         hostidx_Pri, hidx_Priv, 
                                         otherEntry_Pri, i_Pri, indicies_Pri, 
                                         portDomain_Pri, sourcePort_Pri, 
                                         destPort_Pri, new_sport_Pri, depth_C, 
                                         host_C, hidx_Co, host_idx_Co, pidx_Co, 
                                         port_idx_Co, connhost, port, host_Co, 
                                         hidx_Con, host_idx, pidx, port_idx, 
                                         depth_Di, ip_D, host_Di, connDomain, 
                                         cidx, conn_Dis, depth_Pu, pkt_Pu, 
                                         ipkt_Pu, entry_Pu, conn_Pub, 
                                         hostMarker_Pu, ip_idx_Pu, ipidx_Pu, 
                                         ip_Pub, host_Pub, depth_Pri, 
                                         pkt_PrivTo, conn_Priv, 
                                         hostMarker_PrivTo, daddr_Priv, 
                                         hostidx_Priv, hidx_PrivT, 
                                         otherEntry_Priv, i_Priv, 
                                         indicies_Priv, portDomain_Priv, 
                                         sourcePort_Priv, destPort_Priv, 
                                         new_sport_Priv, good, depth_E, i_E, 
                                         j_, ip_E, host_E, indecies_, depth_Ev, 
                                         i_Ev, j_E, ip_Ev, host_Ev, indecies_E, 
                                         i_C, i_Ch, depth_Pub, pkt_Pub, 
                                         ipkt_Pub, entry_Pub, conn_PubT, 
                                         hostMarker_Pub, ip_idx_Pub, ipidx_Pub, 
                                         ip_PubT, host_PubT, depth_Priv, 
                                         pkt_PrivToP, conn_PrivT, 
                                         hostMarker_PrivToP, daddr, hostidx, 
                                         hidx, otherEntry, i_PrivT, indicies, 
                                         portDomain, sourcePort, destPort, 
                                         new_sport, depth_PubT, pkt, ipkt, 
                                         entry, conn_PubTo, hostMarker, ip_idx, 
                                         ipidx, ip_PubTo, host_PubTo, i, aa >>

pubtoprivVStart_(self) == /\ pc[self] = "pubtoprivVStart_"
                          /\ IF Len(SendQueue) > 0
                                THEN /\ pkt_' = [pkt_ EXCEPT ![self] = Head(SendQueue)]
                                     /\ PrintT(<<"PubToPrivMan - Len(SendQueue) > 0:", pkt_'[self], Connections, T>>)
                                     /\ SendQueue' = Tail(SendQueue)
                                     /\ IF Len(T) > 0
                                           THEN /\ PrintT(<<"PubToPrivMan - Len(T) > 0:">>)
                                                /\ entry_' = [entry_ EXCEPT ![self] = SelectSeq(T, LAMBDA e: e.reply.saddr=pkt_'[self].saddr /\
                                                                                                             e.reply.sport=pkt_'[self].sport /\
                                                                                                             e.reply.daddr=pkt_'[self].daddr /\
                                                                                                             e.reply.dport=pkt_'[self].dport)]
                                                /\ IF entry_'[self]=defaultInitValue
                                                      THEN /\ pc' = [pc EXCEPT ![self] = "pubtirprivVDE_"]
                                                      ELSE /\ pc' = [pc EXCEPT ![self] = "pubtoprivEEmpty_"]
                                                /\ UNCHANGED << FreeIPs, 
                                                                UsedIPs, 
                                                                Connections, 
                                                                ip_idx_, 
                                                                ipidx_, ip_P, 
                                                                host_P >>
                                           ELSE /\ PrintT(<<"PubToPrivMan - Empty Entry">>)
                                                /\ IF pkt_'[self].dport = N
                                                      THEN /\ IF pkt_'[self].daddr = N
                                                                 THEN /\ IF Len(FreeIPs) > 0
                                                                            THEN /\ ip_idx_' = [ip_idx_ EXCEPT ![self] = DOMAIN FreeIPs]
                                                                                 /\ ipidx_' = [ipidx_ EXCEPT ![self] = CHOOSE ipp \in ip_idx_'[self] : TRUE]
                                                                                 /\ ip_P' = [ip_P EXCEPT ![self] = FreeIPs[ipidx_'[self]]]
                                                                                 /\ FreeIPs' = SelectSeq(FreeIPs, LAMBDA d: d /= ip_P'[self])
                                                                                 /\ UsedIPs' = Append(UsedIPs, ip_P'[self])
                                                                                 /\ host_P' = [host_P EXCEPT ![self] = pkt_'[self].saddr]
                                                                                 /\ Connections' = Append(Connections, <<ip_P'[self], host_P'[self]>>)
                                                                                 /\ PrintT(<<"Added Connection",Connections'>>)
                                                                            ELSE /\ TRUE
                                                                                 /\ UNCHANGED << FreeIPs, 
                                                                                                 UsedIPs, 
                                                                                                 Connections, 
                                                                                                 ip_idx_, 
                                                                                                 ipidx_, 
                                                                                                 ip_P, 
                                                                                                 host_P >>
                                                                 ELSE /\ TRUE
                                                                      /\ UNCHANGED << FreeIPs, 
                                                                                      UsedIPs, 
                                                                                      Connections, 
                                                                                      ip_idx_, 
                                                                                      ipidx_, 
                                                                                      ip_P, 
                                                                                      host_P >>
                                                      ELSE /\ TRUE
                                                           /\ UNCHANGED << FreeIPs, 
                                                                           UsedIPs, 
                                                                           Connections, 
                                                                           ip_idx_, 
                                                                           ipidx_, 
                                                                           ip_P, 
                                                                           host_P >>
                                                /\ pc' = [pc EXCEPT ![self] = "pubtopriVvRet_"]
                                                /\ UNCHANGED entry_
                                ELSE /\ pc' = [pc EXCEPT ![self] = "pubtopriVvRet_"]
                                     /\ UNCHANGED << FreeIPs, UsedIPs, 
                                                     Connections, SendQueue, 
                                                     pkt_, entry_, ip_idx_, 
                                                     ipidx_, ip_P, host_P >>
                          /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, 
                                          Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, 
                                          Kk, Ll, Mm, Nn, Oo, Pp, Qq, Rr, Ss, 
                                          Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, H2, 
                                          MaxPorts, EP1, PortMap1, EP2, 
                                          PortMap2, TableFull, EvictionReroute, 
                                          PortScanInv, ATIPInv, MaxTableSize, 
                                          hosts, FreeHosts, UsedHosts, Ports, 
                                          ExtraPorts, ExtraExtraPorts, T, 
                                          PrivIPs, PubIPs, PortSpace, RcvQueue, 
                                          MAX, Marker1, Marker2, CmdConnect, 
                                          CmdDisconnect, PortSpaceFull, stack, 
                                          depth_, host_, hidx_, host_idx_, 
                                          pidx_, port_idx_, depth_D, ip_, 
                                          host_D, connDomain_, cidx_, conn_, 
                                          host_Con, ip_C, hidx_C, host_idx_C, 
                                          pidx_C, port_idx_C, host_Dis, ip_Di, 
                                          connDomain_D, cidx_D, conn_D, host, 
                                          ip, connDomain_Di, cidx_Di, conn_Di, 
                                          depth_P, ipkt_, conn_P, hostMarker_, 
                                          pkt_P, ipkt_P, entry_P, conn_Pu, 
                                          hostMarker_P, ip_idx_P, ipidx_P, 
                                          ip_Pu, host_Pu, IP, conn_PrivTo, 
                                          sport_, dstAddr_, dport_, pkt_Pr, 
                                          hostMarker_Pr, daddr_, hostidx_, 
                                          hidx_P, otherEntry_, i_, indicies_, 
                                          portDomain_, sourcePort_, destPort_, 
                                          new_sport_, conn, sport, dstAddr, 
                                          dport, pkt_Pri, hostMarker_Pri, 
                                          daddr_P, hostidx_P, hidx_Pr, 
                                          otherEntry_P, i_P, indicies_P, 
                                          portDomain_P, sourcePort_P, 
                                          destPort_P, new_sport_P, depth_Pr, 
                                          pkt_Priv, conn_Pr, hostMarker_Priv, 
                                          daddr_Pr, hostidx_Pr, hidx_Pri, 
                                          otherEntry_Pr, i_Pr, indicies_Pr, 
                                          portDomain_Pr, sourcePort_Pr, 
                                          destPort_Pr, new_sport_Pr, pkt_PrivT, 
                                          conn_Pri, hostMarker_PrivT, 
                                          daddr_Pri, hostidx_Pri, hidx_Priv, 
                                          otherEntry_Pri, i_Pri, indicies_Pri, 
                                          portDomain_Pri, sourcePort_Pri, 
                                          destPort_Pri, new_sport_Pri, depth_C, 
                                          host_C, hidx_Co, host_idx_Co, 
                                          pidx_Co, port_idx_Co, connhost, port, 
                                          host_Co, hidx_Con, host_idx, pidx, 
                                          port_idx, depth_Di, ip_D, host_Di, 
                                          connDomain, cidx, conn_Dis, depth_Pu, 
                                          pkt_Pu, ipkt_Pu, entry_Pu, conn_Pub, 
                                          hostMarker_Pu, ip_idx_Pu, ipidx_Pu, 
                                          ip_Pub, host_Pub, depth_Pri, 
                                          pkt_PrivTo, conn_Priv, 
                                          hostMarker_PrivTo, daddr_Priv, 
                                          hostidx_Priv, hidx_PrivT, 
                                          otherEntry_Priv, i_Priv, 
                                          indicies_Priv, portDomain_Priv, 
                                          sourcePort_Priv, destPort_Priv, 
                                          new_sport_Priv, good, depth_E, i_E, 
                                          j_, ip_E, host_E, indecies_, 
                                          depth_Ev, i_Ev, j_E, ip_Ev, host_Ev, 
                                          indecies_E, i_C, i_Ch, depth_Pub, 
                                          pkt_Pub, ipkt_Pub, entry_Pub, 
                                          conn_PubT, hostMarker_Pub, 
                                          ip_idx_Pub, ipidx_Pub, ip_PubT, 
                                          host_PubT, depth_Priv, pkt_PrivToP, 
                                          conn_PrivT, hostMarker_PrivToP, 
                                          daddr, hostidx, hidx, otherEntry, 
                                          i_PrivT, indicies, portDomain, 
                                          sourcePort, destPort, new_sport, 
                                          depth_PubT, pkt, ipkt, entry, 
                                          conn_PubTo, hostMarker, ip_idx, 
                                          ipidx, ip_PubTo, host_PubTo, depth, 
                                          i_Eve, j, ip_Eve, host_Eve, indecies, 
                                          i, aa >>

pubtoprivEEmpty_(self) == /\ pc[self] = "pubtoprivEEmpty_"
                          /\ IF Len(entry_[self]) <= 0
                                THEN /\ PrintT(<<"PubToPrivVuln - Empty Entry">>)
                                     /\ IF pkt_[self].dport = N
                                           THEN /\ IF pkt_[self].daddr = N
                                                      THEN /\ IF Len(FreeIPs) > 0
                                                                 THEN /\ ip_idx_' = [ip_idx_ EXCEPT ![self] = DOMAIN FreeIPs]
                                                                      /\ ipidx_' = [ipidx_ EXCEPT ![self] = CHOOSE ipp \in ip_idx_'[self] : TRUE]
                                                                      /\ ip_P' = [ip_P EXCEPT ![self] = FreeIPs[ipidx_'[self]]]
                                                                      /\ FreeIPs' = SelectSeq(FreeIPs, LAMBDA d: d /= ip_P'[self])
                                                                      /\ UsedIPs' = Append(UsedIPs, ip_P'[self])
                                                                      /\ host_P' = [host_P EXCEPT ![self] = pkt_[self].saddr]
                                                                      /\ Connections' = Append(Connections, <<ip_P'[self], host_P'[self]>>)
                                                                      /\ PrintT(<<"Added Connection",Connections'>>)
                                                                 ELSE /\ TRUE
                                                                      /\ UNCHANGED << FreeIPs, 
                                                                                      UsedIPs, 
                                                                                      Connections, 
                                                                                      ip_idx_, 
                                                                                      ipidx_, 
                                                                                      ip_P, 
                                                                                      host_P >>
                                                      ELSE /\ TRUE
                                                           /\ UNCHANGED << FreeIPs, 
                                                                           UsedIPs, 
                                                                           Connections, 
                                                                           ip_idx_, 
                                                                           ipidx_, 
                                                                           ip_P, 
                                                                           host_P >>
                                           ELSE /\ TRUE
                                                /\ UNCHANGED << FreeIPs, 
                                                                UsedIPs, 
                                                                Connections, 
                                                                ip_idx_, 
                                                                ipidx_, ip_P, 
                                                                host_P >>
                                     /\ pc' = [pc EXCEPT ![self] = "pubtopriVvRet_"]
                                ELSE /\ PrintT(<<"PubToPrivMan - Len(entry) > -0:", entry_[self], pkt_[self]>>)
                                     /\ pc' = [pc EXCEPT ![self] = "pubtoPrivElse_"]
                                     /\ UNCHANGED << FreeIPs, UsedIPs, 
                                                     Connections, ip_idx_, 
                                                     ipidx_, ip_P, host_P >>
                          /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, 
                                          Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, 
                                          Kk, Ll, Mm, Nn, Oo, Pp, Qq, Rr, Ss, 
                                          Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, H2, 
                                          MaxPorts, EP1, PortMap1, EP2, 
                                          PortMap2, TableFull, EvictionReroute, 
                                          PortScanInv, ATIPInv, MaxTableSize, 
                                          hosts, FreeHosts, UsedHosts, Ports, 
                                          ExtraPorts, ExtraExtraPorts, T, 
                                          PrivIPs, PubIPs, PortSpace, 
                                          SendQueue, RcvQueue, MAX, Marker1, 
                                          Marker2, CmdConnect, CmdDisconnect, 
                                          PortSpaceFull, stack, depth_, host_, 
                                          hidx_, host_idx_, pidx_, port_idx_, 
                                          depth_D, ip_, host_D, connDomain_, 
                                          cidx_, conn_, host_Con, ip_C, hidx_C, 
                                          host_idx_C, pidx_C, port_idx_C, 
                                          host_Dis, ip_Di, connDomain_D, 
                                          cidx_D, conn_D, host, ip, 
                                          connDomain_Di, cidx_Di, conn_Di, 
                                          depth_P, pkt_, ipkt_, entry_, conn_P, 
                                          hostMarker_, pkt_P, ipkt_P, entry_P, 
                                          conn_Pu, hostMarker_P, ip_idx_P, 
                                          ipidx_P, ip_Pu, host_Pu, IP, 
                                          conn_PrivTo, sport_, dstAddr_, 
                                          dport_, pkt_Pr, hostMarker_Pr, 
                                          daddr_, hostidx_, hidx_P, 
                                          otherEntry_, i_, indicies_, 
                                          portDomain_, sourcePort_, destPort_, 
                                          new_sport_, conn, sport, dstAddr, 
                                          dport, pkt_Pri, hostMarker_Pri, 
                                          daddr_P, hostidx_P, hidx_Pr, 
                                          otherEntry_P, i_P, indicies_P, 
                                          portDomain_P, sourcePort_P, 
                                          destPort_P, new_sport_P, depth_Pr, 
                                          pkt_Priv, conn_Pr, hostMarker_Priv, 
                                          daddr_Pr, hostidx_Pr, hidx_Pri, 
                                          otherEntry_Pr, i_Pr, indicies_Pr, 
                                          portDomain_Pr, sourcePort_Pr, 
                                          destPort_Pr, new_sport_Pr, pkt_PrivT, 
                                          conn_Pri, hostMarker_PrivT, 
                                          daddr_Pri, hostidx_Pri, hidx_Priv, 
                                          otherEntry_Pri, i_Pri, indicies_Pri, 
                                          portDomain_Pri, sourcePort_Pri, 
                                          destPort_Pri, new_sport_Pri, depth_C, 
                                          host_C, hidx_Co, host_idx_Co, 
                                          pidx_Co, port_idx_Co, connhost, port, 
                                          host_Co, hidx_Con, host_idx, pidx, 
                                          port_idx, depth_Di, ip_D, host_Di, 
                                          connDomain, cidx, conn_Dis, depth_Pu, 
                                          pkt_Pu, ipkt_Pu, entry_Pu, conn_Pub, 
                                          hostMarker_Pu, ip_idx_Pu, ipidx_Pu, 
                                          ip_Pub, host_Pub, depth_Pri, 
                                          pkt_PrivTo, conn_Priv, 
                                          hostMarker_PrivTo, daddr_Priv, 
                                          hostidx_Priv, hidx_PrivT, 
                                          otherEntry_Priv, i_Priv, 
                                          indicies_Priv, portDomain_Priv, 
                                          sourcePort_Priv, destPort_Priv, 
                                          new_sport_Priv, good, depth_E, i_E, 
                                          j_, ip_E, host_E, indecies_, 
                                          depth_Ev, i_Ev, j_E, ip_Ev, host_Ev, 
                                          indecies_E, i_C, i_Ch, depth_Pub, 
                                          pkt_Pub, ipkt_Pub, entry_Pub, 
                                          conn_PubT, hostMarker_Pub, 
                                          ip_idx_Pub, ipidx_Pub, ip_PubT, 
                                          host_PubT, depth_Priv, pkt_PrivToP, 
                                          conn_PrivT, hostMarker_PrivToP, 
                                          daddr, hostidx, hidx, otherEntry, 
                                          i_PrivT, indicies, portDomain, 
                                          sourcePort, destPort, new_sport, 
                                          depth_PubT, pkt, ipkt, entry, 
                                          conn_PubTo, hostMarker, ip_idx, 
                                          ipidx, ip_PubTo, host_PubTo, depth, 
                                          i_Eve, j, ip_Eve, host_Eve, indecies, 
                                          i, aa >>

pubtoPrivElse_(self) == /\ pc[self] = "pubtoPrivElse_"
                        /\ entry_' = [entry_ EXCEPT ![self] = Head(entry_[self])]
                        /\ IF entry_'[self].reply.dport=N
                              THEN /\ IF entry_'[self].reply.daddr=N
                                         THEN /\ PrintT(<<"PubToPrivMan - PortShadow: ", entry_'[self], pkt_[self]>>)
                                              /\ ATIPInv' = TRUE
                                         ELSE /\ TRUE
                                              /\ UNCHANGED ATIPInv
                              ELSE /\ TRUE
                                   /\ UNCHANGED ATIPInv
                        /\ IF entry_'[self].host_marker/=pkt_[self].host_marker
                              THEN /\ PrintT(<<"PubToPrivMan - entry.host_marker/=pkt.host_marker:", entry_'[self], pkt_[self]>>)
                                   /\ IF pkt_[self].host_marker = H1
                                         THEN /\ Marker1' = entry_'[self].host_marker
                                              /\ UNCHANGED Marker2
                                         ELSE /\ Marker2' = entry_'[self].host_marker
                                              /\ UNCHANGED Marker1
                                   /\ PrintT(<<"PubToPrivMan-Eviction Error: pkt", pkt_[self], " entry", entry_'[self], "Connections:", Connections, "T: ", T>>)
                              ELSE /\ TRUE
                                   /\ UNCHANGED << Marker1, Marker2 >>
                        /\ conn_P' = [conn_P EXCEPT ![self] = SelectSeq(Connections, LAMBDA e: entry_'[self].orig.saddr = Head(e))]
                        /\ IF Len(conn_P'[self]) > 0
                              THEN /\ pc' = [pc EXCEPT ![self] = "pubtoprivVConngt1_"]
                              ELSE /\ pc' = [pc EXCEPT ![self] = "pubtopriVvRet_"]
                        /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, 
                                        Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, 
                                        Ll, Mm, Nn, Oo, Pp, Qq, Rr, Ss, Tt, Uu, 
                                        Vv, Ww, Xx, Yy, Zz, H1, H2, MaxPorts, 
                                        EP1, PortMap1, EP2, PortMap2, 
                                        TableFull, EvictionReroute, 
                                        PortScanInv, MaxTableSize, hosts, 
                                        FreeHosts, UsedHosts, Ports, 
                                        ExtraPorts, ExtraExtraPorts, T, 
                                        FreeIPs, PrivIPs, PubIPs, PortSpace, 
                                        UsedIPs, Connections, SendQueue, 
                                        RcvQueue, MAX, CmdConnect, 
                                        CmdDisconnect, PortSpaceFull, stack, 
                                        depth_, host_, hidx_, host_idx_, pidx_, 
                                        port_idx_, depth_D, ip_, host_D, 
                                        connDomain_, cidx_, conn_, host_Con, 
                                        ip_C, hidx_C, host_idx_C, pidx_C, 
                                        port_idx_C, host_Dis, ip_Di, 
                                        connDomain_D, cidx_D, conn_D, host, ip, 
                                        connDomain_Di, cidx_Di, conn_Di, 
                                        depth_P, pkt_, ipkt_, hostMarker_, 
                                        ip_idx_, ipidx_, ip_P, host_P, pkt_P, 
                                        ipkt_P, entry_P, conn_Pu, hostMarker_P, 
                                        ip_idx_P, ipidx_P, ip_Pu, host_Pu, IP, 
                                        conn_PrivTo, sport_, dstAddr_, dport_, 
                                        pkt_Pr, hostMarker_Pr, daddr_, 
                                        hostidx_, hidx_P, otherEntry_, i_, 
                                        indicies_, portDomain_, sourcePort_, 
                                        destPort_, new_sport_, conn, sport, 
                                        dstAddr, dport, pkt_Pri, 
                                        hostMarker_Pri, daddr_P, hostidx_P, 
                                        hidx_Pr, otherEntry_P, i_P, indicies_P, 
                                        portDomain_P, sourcePort_P, destPort_P, 
                                        new_sport_P, depth_Pr, pkt_Priv, 
                                        conn_Pr, hostMarker_Priv, daddr_Pr, 
                                        hostidx_Pr, hidx_Pri, otherEntry_Pr, 
                                        i_Pr, indicies_Pr, portDomain_Pr, 
                                        sourcePort_Pr, destPort_Pr, 
                                        new_sport_Pr, pkt_PrivT, conn_Pri, 
                                        hostMarker_PrivT, daddr_Pri, 
                                        hostidx_Pri, hidx_Priv, otherEntry_Pri, 
                                        i_Pri, indicies_Pri, portDomain_Pri, 
                                        sourcePort_Pri, destPort_Pri, 
                                        new_sport_Pri, depth_C, host_C, 
                                        hidx_Co, host_idx_Co, pidx_Co, 
                                        port_idx_Co, connhost, port, host_Co, 
                                        hidx_Con, host_idx, pidx, port_idx, 
                                        depth_Di, ip_D, host_Di, connDomain, 
                                        cidx, conn_Dis, depth_Pu, pkt_Pu, 
                                        ipkt_Pu, entry_Pu, conn_Pub, 
                                        hostMarker_Pu, ip_idx_Pu, ipidx_Pu, 
                                        ip_Pub, host_Pub, depth_Pri, 
                                        pkt_PrivTo, conn_Priv, 
                                        hostMarker_PrivTo, daddr_Priv, 
                                        hostidx_Priv, hidx_PrivT, 
                                        otherEntry_Priv, i_Priv, indicies_Priv, 
                                        portDomain_Priv, sourcePort_Priv, 
                                        destPort_Priv, new_sport_Priv, good, 
                                        depth_E, i_E, j_, ip_E, host_E, 
                                        indecies_, depth_Ev, i_Ev, j_E, ip_Ev, 
                                        host_Ev, indecies_E, i_C, i_Ch, 
                                        depth_Pub, pkt_Pub, ipkt_Pub, 
                                        entry_Pub, conn_PubT, hostMarker_Pub, 
                                        ip_idx_Pub, ipidx_Pub, ip_PubT, 
                                        host_PubT, depth_Priv, pkt_PrivToP, 
                                        conn_PrivT, hostMarker_PrivToP, daddr, 
                                        hostidx, hidx, otherEntry, i_PrivT, 
                                        indicies, portDomain, sourcePort, 
                                        destPort, new_sport, depth_PubT, pkt, 
                                        ipkt, entry, conn_PubTo, hostMarker, 
                                        ip_idx, ipidx, ip_PubTo, host_PubTo, 
                                        depth, i_Eve, j, ip_Eve, host_Eve, 
                                        indecies, i, aa >>

pubtoprivVConngt1_(self) == /\ pc[self] = "pubtoprivVConngt1_"
                            /\ conn_P' = [conn_P EXCEPT ![self] = Head(conn_P[self])]
                            /\ pc' = [pc EXCEPT ![self] = "pubtoprivVConngt2_"]
                            /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, 
                                            Aa, Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, 
                                            Jj, Kk, Ll, Mm, Nn, Oo, Pp, Qq, Rr, 
                                            Ss, Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, 
                                            H2, MaxPorts, EP1, PortMap1, EP2, 
                                            PortMap2, TableFull, 
                                            EvictionReroute, PortScanInv, 
                                            ATIPInv, MaxTableSize, hosts, 
                                            FreeHosts, UsedHosts, Ports, 
                                            ExtraPorts, ExtraExtraPorts, T, 
                                            FreeIPs, PrivIPs, PubIPs, 
                                            PortSpace, UsedIPs, Connections, 
                                            SendQueue, RcvQueue, MAX, Marker1, 
                                            Marker2, CmdConnect, CmdDisconnect, 
                                            PortSpaceFull, stack, depth_, 
                                            host_, hidx_, host_idx_, pidx_, 
                                            port_idx_, depth_D, ip_, host_D, 
                                            connDomain_, cidx_, conn_, 
                                            host_Con, ip_C, hidx_C, host_idx_C, 
                                            pidx_C, port_idx_C, host_Dis, 
                                            ip_Di, connDomain_D, cidx_D, 
                                            conn_D, host, ip, connDomain_Di, 
                                            cidx_Di, conn_Di, depth_P, pkt_, 
                                            ipkt_, entry_, hostMarker_, 
                                            ip_idx_, ipidx_, ip_P, host_P, 
                                            pkt_P, ipkt_P, entry_P, conn_Pu, 
                                            hostMarker_P, ip_idx_P, ipidx_P, 
                                            ip_Pu, host_Pu, IP, conn_PrivTo, 
                                            sport_, dstAddr_, dport_, pkt_Pr, 
                                            hostMarker_Pr, daddr_, hostidx_, 
                                            hidx_P, otherEntry_, i_, indicies_, 
                                            portDomain_, sourcePort_, 
                                            destPort_, new_sport_, conn, sport, 
                                            dstAddr, dport, pkt_Pri, 
                                            hostMarker_Pri, daddr_P, hostidx_P, 
                                            hidx_Pr, otherEntry_P, i_P, 
                                            indicies_P, portDomain_P, 
                                            sourcePort_P, destPort_P, 
                                            new_sport_P, depth_Pr, pkt_Priv, 
                                            conn_Pr, hostMarker_Priv, daddr_Pr, 
                                            hostidx_Pr, hidx_Pri, 
                                            otherEntry_Pr, i_Pr, indicies_Pr, 
                                            portDomain_Pr, sourcePort_Pr, 
                                            destPort_Pr, new_sport_Pr, 
                                            pkt_PrivT, conn_Pri, 
                                            hostMarker_PrivT, daddr_Pri, 
                                            hostidx_Pri, hidx_Priv, 
                                            otherEntry_Pri, i_Pri, 
                                            indicies_Pri, portDomain_Pri, 
                                            sourcePort_Pri, destPort_Pri, 
                                            new_sport_Pri, depth_C, host_C, 
                                            hidx_Co, host_idx_Co, pidx_Co, 
                                            port_idx_Co, connhost, port, 
                                            host_Co, hidx_Con, host_idx, pidx, 
                                            port_idx, depth_Di, ip_D, host_Di, 
                                            connDomain, cidx, conn_Dis, 
                                            depth_Pu, pkt_Pu, ipkt_Pu, 
                                            entry_Pu, conn_Pub, hostMarker_Pu, 
                                            ip_idx_Pu, ipidx_Pu, ip_Pub, 
                                            host_Pub, depth_Pri, pkt_PrivTo, 
                                            conn_Priv, hostMarker_PrivTo, 
                                            daddr_Priv, hostidx_Priv, 
                                            hidx_PrivT, otherEntry_Priv, 
                                            i_Priv, indicies_Priv, 
                                            portDomain_Priv, sourcePort_Priv, 
                                            destPort_Priv, new_sport_Priv, 
                                            good, depth_E, i_E, j_, ip_E, 
                                            host_E, indecies_, depth_Ev, i_Ev, 
                                            j_E, ip_Ev, host_Ev, indecies_E, 
                                            i_C, i_Ch, depth_Pub, pkt_Pub, 
                                            ipkt_Pub, entry_Pub, conn_PubT, 
                                            hostMarker_Pub, ip_idx_Pub, 
                                            ipidx_Pub, ip_PubT, host_PubT, 
                                            depth_Priv, pkt_PrivToP, 
                                            conn_PrivT, hostMarker_PrivToP, 
                                            daddr, hostidx, hidx, otherEntry, 
                                            i_PrivT, indicies, portDomain, 
                                            sourcePort, destPort, new_sport, 
                                            depth_PubT, pkt, ipkt, entry, 
                                            conn_PubTo, hostMarker, ip_idx, 
                                            ipidx, ip_PubTo, host_PubTo, depth, 
                                            i_Eve, j, ip_Eve, host_Eve, 
                                            indecies, i, aa >>

pubtoprivVConngt2_(self) == /\ pc[self] = "pubtoprivVConngt2_"
                            /\ hostMarker_' = [hostMarker_ EXCEPT ![self] = conn_P[self][2]]
                            /\ IF hostMarker_'[self] = H1
                                  THEN /\ IF entry_[self].host_marker = H2
                                             THEN /\ PortScanInv' = TRUE
                                             ELSE /\ TRUE
                                                  /\ UNCHANGED PortScanInv
                                       /\ Marker1' = entry_[self].host_marker
                                       /\ UNCHANGED Marker2
                                  ELSE /\ IF entry_[self].host_marker = H1
                                             THEN /\ PortScanInv' = TRUE
                                             ELSE /\ TRUE
                                                  /\ UNCHANGED PortScanInv
                                       /\ Marker2' = entry_[self].host_marker
                                       /\ UNCHANGED Marker1
                            /\ pc' = [pc EXCEPT ![self] = "pubtopriVvRet_"]
                            /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, 
                                            Aa, Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, 
                                            Jj, Kk, Ll, Mm, Nn, Oo, Pp, Qq, Rr, 
                                            Ss, Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, 
                                            H2, MaxPorts, EP1, PortMap1, EP2, 
                                            PortMap2, TableFull, 
                                            EvictionReroute, ATIPInv, 
                                            MaxTableSize, hosts, FreeHosts, 
                                            UsedHosts, Ports, ExtraPorts, 
                                            ExtraExtraPorts, T, FreeIPs, 
                                            PrivIPs, PubIPs, PortSpace, 
                                            UsedIPs, Connections, SendQueue, 
                                            RcvQueue, MAX, CmdConnect, 
                                            CmdDisconnect, PortSpaceFull, 
                                            stack, depth_, host_, hidx_, 
                                            host_idx_, pidx_, port_idx_, 
                                            depth_D, ip_, host_D, connDomain_, 
                                            cidx_, conn_, host_Con, ip_C, 
                                            hidx_C, host_idx_C, pidx_C, 
                                            port_idx_C, host_Dis, ip_Di, 
                                            connDomain_D, cidx_D, conn_D, host, 
                                            ip, connDomain_Di, cidx_Di, 
                                            conn_Di, depth_P, pkt_, ipkt_, 
                                            entry_, conn_P, ip_idx_, ipidx_, 
                                            ip_P, host_P, pkt_P, ipkt_P, 
                                            entry_P, conn_Pu, hostMarker_P, 
                                            ip_idx_P, ipidx_P, ip_Pu, host_Pu, 
                                            IP, conn_PrivTo, sport_, dstAddr_, 
                                            dport_, pkt_Pr, hostMarker_Pr, 
                                            daddr_, hostidx_, hidx_P, 
                                            otherEntry_, i_, indicies_, 
                                            portDomain_, sourcePort_, 
                                            destPort_, new_sport_, conn, sport, 
                                            dstAddr, dport, pkt_Pri, 
                                            hostMarker_Pri, daddr_P, hostidx_P, 
                                            hidx_Pr, otherEntry_P, i_P, 
                                            indicies_P, portDomain_P, 
                                            sourcePort_P, destPort_P, 
                                            new_sport_P, depth_Pr, pkt_Priv, 
                                            conn_Pr, hostMarker_Priv, daddr_Pr, 
                                            hostidx_Pr, hidx_Pri, 
                                            otherEntry_Pr, i_Pr, indicies_Pr, 
                                            portDomain_Pr, sourcePort_Pr, 
                                            destPort_Pr, new_sport_Pr, 
                                            pkt_PrivT, conn_Pri, 
                                            hostMarker_PrivT, daddr_Pri, 
                                            hostidx_Pri, hidx_Priv, 
                                            otherEntry_Pri, i_Pri, 
                                            indicies_Pri, portDomain_Pri, 
                                            sourcePort_Pri, destPort_Pri, 
                                            new_sport_Pri, depth_C, host_C, 
                                            hidx_Co, host_idx_Co, pidx_Co, 
                                            port_idx_Co, connhost, port, 
                                            host_Co, hidx_Con, host_idx, pidx, 
                                            port_idx, depth_Di, ip_D, host_Di, 
                                            connDomain, cidx, conn_Dis, 
                                            depth_Pu, pkt_Pu, ipkt_Pu, 
                                            entry_Pu, conn_Pub, hostMarker_Pu, 
                                            ip_idx_Pu, ipidx_Pu, ip_Pub, 
                                            host_Pub, depth_Pri, pkt_PrivTo, 
                                            conn_Priv, hostMarker_PrivTo, 
                                            daddr_Priv, hostidx_Priv, 
                                            hidx_PrivT, otherEntry_Priv, 
                                            i_Priv, indicies_Priv, 
                                            portDomain_Priv, sourcePort_Priv, 
                                            destPort_Priv, new_sport_Priv, 
                                            good, depth_E, i_E, j_, ip_E, 
                                            host_E, indecies_, depth_Ev, i_Ev, 
                                            j_E, ip_Ev, host_Ev, indecies_E, 
                                            i_C, i_Ch, depth_Pub, pkt_Pub, 
                                            ipkt_Pub, entry_Pub, conn_PubT, 
                                            hostMarker_Pub, ip_idx_Pub, 
                                            ipidx_Pub, ip_PubT, host_PubT, 
                                            depth_Priv, pkt_PrivToP, 
                                            conn_PrivT, hostMarker_PrivToP, 
                                            daddr, hostidx, hidx, otherEntry, 
                                            i_PrivT, indicies, portDomain, 
                                            sourcePort, destPort, new_sport, 
                                            depth_PubT, pkt, ipkt, entry, 
                                            conn_PubTo, hostMarker, ip_idx, 
                                            ipidx, ip_PubTo, host_PubTo, depth, 
                                            i_Eve, j, ip_Eve, host_Eve, 
                                            indecies, i, aa >>

pubtirprivVDE_(self) == /\ pc[self] = "pubtirprivVDE_"
                        /\ pc' = [pc EXCEPT ![self] = Head(stack[self]).pc]
                        /\ pkt_' = [pkt_ EXCEPT ![self] = Head(stack[self]).pkt_]
                        /\ ipkt_' = [ipkt_ EXCEPT ![self] = Head(stack[self]).ipkt_]
                        /\ entry_' = [entry_ EXCEPT ![self] = Head(stack[self]).entry_]
                        /\ conn_P' = [conn_P EXCEPT ![self] = Head(stack[self]).conn_P]
                        /\ hostMarker_' = [hostMarker_ EXCEPT ![self] = Head(stack[self]).hostMarker_]
                        /\ ip_idx_' = [ip_idx_ EXCEPT ![self] = Head(stack[self]).ip_idx_]
                        /\ ipidx_' = [ipidx_ EXCEPT ![self] = Head(stack[self]).ipidx_]
                        /\ ip_P' = [ip_P EXCEPT ![self] = Head(stack[self]).ip_P]
                        /\ host_P' = [host_P EXCEPT ![self] = Head(stack[self]).host_P]
                        /\ depth_P' = [depth_P EXCEPT ![self] = Head(stack[self]).depth_P]
                        /\ stack' = [stack EXCEPT ![self] = Tail(stack[self])]
                        /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, 
                                        Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, 
                                        Ll, Mm, Nn, Oo, Pp, Qq, Rr, Ss, Tt, Uu, 
                                        Vv, Ww, Xx, Yy, Zz, H1, H2, MaxPorts, 
                                        EP1, PortMap1, EP2, PortMap2, 
                                        TableFull, EvictionReroute, 
                                        PortScanInv, ATIPInv, MaxTableSize, 
                                        hosts, FreeHosts, UsedHosts, Ports, 
                                        ExtraPorts, ExtraExtraPorts, T, 
                                        FreeIPs, PrivIPs, PubIPs, PortSpace, 
                                        UsedIPs, Connections, SendQueue, 
                                        RcvQueue, MAX, Marker1, Marker2, 
                                        CmdConnect, CmdDisconnect, 
                                        PortSpaceFull, depth_, host_, hidx_, 
                                        host_idx_, pidx_, port_idx_, depth_D, 
                                        ip_, host_D, connDomain_, cidx_, conn_, 
                                        host_Con, ip_C, hidx_C, host_idx_C, 
                                        pidx_C, port_idx_C, host_Dis, ip_Di, 
                                        connDomain_D, cidx_D, conn_D, host, ip, 
                                        connDomain_Di, cidx_Di, conn_Di, pkt_P, 
                                        ipkt_P, entry_P, conn_Pu, hostMarker_P, 
                                        ip_idx_P, ipidx_P, ip_Pu, host_Pu, IP, 
                                        conn_PrivTo, sport_, dstAddr_, dport_, 
                                        pkt_Pr, hostMarker_Pr, daddr_, 
                                        hostidx_, hidx_P, otherEntry_, i_, 
                                        indicies_, portDomain_, sourcePort_, 
                                        destPort_, new_sport_, conn, sport, 
                                        dstAddr, dport, pkt_Pri, 
                                        hostMarker_Pri, daddr_P, hostidx_P, 
                                        hidx_Pr, otherEntry_P, i_P, indicies_P, 
                                        portDomain_P, sourcePort_P, destPort_P, 
                                        new_sport_P, depth_Pr, pkt_Priv, 
                                        conn_Pr, hostMarker_Priv, daddr_Pr, 
                                        hostidx_Pr, hidx_Pri, otherEntry_Pr, 
                                        i_Pr, indicies_Pr, portDomain_Pr, 
                                        sourcePort_Pr, destPort_Pr, 
                                        new_sport_Pr, pkt_PrivT, conn_Pri, 
                                        hostMarker_PrivT, daddr_Pri, 
                                        hostidx_Pri, hidx_Priv, otherEntry_Pri, 
                                        i_Pri, indicies_Pri, portDomain_Pri, 
                                        sourcePort_Pri, destPort_Pri, 
                                        new_sport_Pri, depth_C, host_C, 
                                        hidx_Co, host_idx_Co, pidx_Co, 
                                        port_idx_Co, connhost, port, host_Co, 
                                        hidx_Con, host_idx, pidx, port_idx, 
                                        depth_Di, ip_D, host_Di, connDomain, 
                                        cidx, conn_Dis, depth_Pu, pkt_Pu, 
                                        ipkt_Pu, entry_Pu, conn_Pub, 
                                        hostMarker_Pu, ip_idx_Pu, ipidx_Pu, 
                                        ip_Pub, host_Pub, depth_Pri, 
                                        pkt_PrivTo, conn_Priv, 
                                        hostMarker_PrivTo, daddr_Priv, 
                                        hostidx_Priv, hidx_PrivT, 
                                        otherEntry_Priv, i_Priv, indicies_Priv, 
                                        portDomain_Priv, sourcePort_Priv, 
                                        destPort_Priv, new_sport_Priv, good, 
                                        depth_E, i_E, j_, ip_E, host_E, 
                                        indecies_, depth_Ev, i_Ev, j_E, ip_Ev, 
                                        host_Ev, indecies_E, i_C, i_Ch, 
                                        depth_Pub, pkt_Pub, ipkt_Pub, 
                                        entry_Pub, conn_PubT, hostMarker_Pub, 
                                        ip_idx_Pub, ipidx_Pub, ip_PubT, 
                                        host_PubT, depth_Priv, pkt_PrivToP, 
                                        conn_PrivT, hostMarker_PrivToP, daddr, 
                                        hostidx, hidx, otherEntry, i_PrivT, 
                                        indicies, portDomain, sourcePort, 
                                        destPort, new_sport, depth_PubT, pkt, 
                                        ipkt, entry, conn_PubTo, hostMarker, 
                                        ip_idx, ipidx, ip_PubTo, host_PubTo, 
                                        depth, i_Eve, j, ip_Eve, host_Eve, 
                                        indecies, i, aa >>

pubtopriVvRet_(self) == /\ pc[self] = "pubtopriVvRet_"
                        /\ pc' = [pc EXCEPT ![self] = Head(stack[self]).pc]
                        /\ pkt_' = [pkt_ EXCEPT ![self] = Head(stack[self]).pkt_]
                        /\ ipkt_' = [ipkt_ EXCEPT ![self] = Head(stack[self]).ipkt_]
                        /\ entry_' = [entry_ EXCEPT ![self] = Head(stack[self]).entry_]
                        /\ conn_P' = [conn_P EXCEPT ![self] = Head(stack[self]).conn_P]
                        /\ hostMarker_' = [hostMarker_ EXCEPT ![self] = Head(stack[self]).hostMarker_]
                        /\ ip_idx_' = [ip_idx_ EXCEPT ![self] = Head(stack[self]).ip_idx_]
                        /\ ipidx_' = [ipidx_ EXCEPT ![self] = Head(stack[self]).ipidx_]
                        /\ ip_P' = [ip_P EXCEPT ![self] = Head(stack[self]).ip_P]
                        /\ host_P' = [host_P EXCEPT ![self] = Head(stack[self]).host_P]
                        /\ depth_P' = [depth_P EXCEPT ![self] = Head(stack[self]).depth_P]
                        /\ stack' = [stack EXCEPT ![self] = Tail(stack[self])]
                        /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, 
                                        Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, 
                                        Ll, Mm, Nn, Oo, Pp, Qq, Rr, Ss, Tt, Uu, 
                                        Vv, Ww, Xx, Yy, Zz, H1, H2, MaxPorts, 
                                        EP1, PortMap1, EP2, PortMap2, 
                                        TableFull, EvictionReroute, 
                                        PortScanInv, ATIPInv, MaxTableSize, 
                                        hosts, FreeHosts, UsedHosts, Ports, 
                                        ExtraPorts, ExtraExtraPorts, T, 
                                        FreeIPs, PrivIPs, PubIPs, PortSpace, 
                                        UsedIPs, Connections, SendQueue, 
                                        RcvQueue, MAX, Marker1, Marker2, 
                                        CmdConnect, CmdDisconnect, 
                                        PortSpaceFull, depth_, host_, hidx_, 
                                        host_idx_, pidx_, port_idx_, depth_D, 
                                        ip_, host_D, connDomain_, cidx_, conn_, 
                                        host_Con, ip_C, hidx_C, host_idx_C, 
                                        pidx_C, port_idx_C, host_Dis, ip_Di, 
                                        connDomain_D, cidx_D, conn_D, host, ip, 
                                        connDomain_Di, cidx_Di, conn_Di, pkt_P, 
                                        ipkt_P, entry_P, conn_Pu, hostMarker_P, 
                                        ip_idx_P, ipidx_P, ip_Pu, host_Pu, IP, 
                                        conn_PrivTo, sport_, dstAddr_, dport_, 
                                        pkt_Pr, hostMarker_Pr, daddr_, 
                                        hostidx_, hidx_P, otherEntry_, i_, 
                                        indicies_, portDomain_, sourcePort_, 
                                        destPort_, new_sport_, conn, sport, 
                                        dstAddr, dport, pkt_Pri, 
                                        hostMarker_Pri, daddr_P, hostidx_P, 
                                        hidx_Pr, otherEntry_P, i_P, indicies_P, 
                                        portDomain_P, sourcePort_P, destPort_P, 
                                        new_sport_P, depth_Pr, pkt_Priv, 
                                        conn_Pr, hostMarker_Priv, daddr_Pr, 
                                        hostidx_Pr, hidx_Pri, otherEntry_Pr, 
                                        i_Pr, indicies_Pr, portDomain_Pr, 
                                        sourcePort_Pr, destPort_Pr, 
                                        new_sport_Pr, pkt_PrivT, conn_Pri, 
                                        hostMarker_PrivT, daddr_Pri, 
                                        hostidx_Pri, hidx_Priv, otherEntry_Pri, 
                                        i_Pri, indicies_Pri, portDomain_Pri, 
                                        sourcePort_Pri, destPort_Pri, 
                                        new_sport_Pri, depth_C, host_C, 
                                        hidx_Co, host_idx_Co, pidx_Co, 
                                        port_idx_Co, connhost, port, host_Co, 
                                        hidx_Con, host_idx, pidx, port_idx, 
                                        depth_Di, ip_D, host_Di, connDomain, 
                                        cidx, conn_Dis, depth_Pu, pkt_Pu, 
                                        ipkt_Pu, entry_Pu, conn_Pub, 
                                        hostMarker_Pu, ip_idx_Pu, ipidx_Pu, 
                                        ip_Pub, host_Pub, depth_Pri, 
                                        pkt_PrivTo, conn_Priv, 
                                        hostMarker_PrivTo, daddr_Priv, 
                                        hostidx_Priv, hidx_PrivT, 
                                        otherEntry_Priv, i_Priv, indicies_Priv, 
                                        portDomain_Priv, sourcePort_Priv, 
                                        destPort_Priv, new_sport_Priv, good, 
                                        depth_E, i_E, j_, ip_E, host_E, 
                                        indecies_, depth_Ev, i_Ev, j_E, ip_Ev, 
                                        host_Ev, indecies_E, i_C, i_Ch, 
                                        depth_Pub, pkt_Pub, ipkt_Pub, 
                                        entry_Pub, conn_PubT, hostMarker_Pub, 
                                        ip_idx_Pub, ipidx_Pub, ip_PubT, 
                                        host_PubT, depth_Priv, pkt_PrivToP, 
                                        conn_PrivT, hostMarker_PrivToP, daddr, 
                                        hostidx, hidx, otherEntry, i_PrivT, 
                                        indicies, portDomain, sourcePort, 
                                        destPort, new_sport, depth_PubT, pkt, 
                                        ipkt, entry, conn_PubTo, hostMarker, 
                                        ip_idx, ipidx, ip_PubTo, host_PubTo, 
                                        depth, i_Eve, j, ip_Eve, host_Eve, 
                                        indecies, i, aa >>

PubToPrivVuln(self) == pubtoprivVEvt3_(self) \/ pubtoprivVStart_(self)
                          \/ pubtoprivEEmpty_(self) \/ pubtoPrivElse_(self)
                          \/ pubtoprivVConngt1_(self)
                          \/ pubtoprivVConngt2_(self)
                          \/ pubtirprivVDE_(self) \/ pubtopriVvRet_(self)

pubtoprivManStart(self) == /\ pc[self] = "pubtoprivManStart"
                           /\ IF Len(SendQueue) > 0
                                 THEN /\ pkt_P' = [pkt_P EXCEPT ![self] = Head(SendQueue)]
                                      /\ PrintT(<<"PubToPrivMan - Len(SendQueue) > 0:", pkt_P'[self], Connections, T>>)
                                      /\ SendQueue' = Tail(SendQueue)
                                      /\ IF Len(T) > 0
                                            THEN /\ PrintT(<<"PubToPrivMan - Len(T) > 0:">>)
                                                 /\ entry_P' = [entry_P EXCEPT ![self] = SelectSeq(T, LAMBDA e: e.reply.saddr=pkt_P'[self].saddr /\
                                                                                                                e.reply.sport=pkt_P'[self].sport /\
                                                                                                                e.reply.daddr=pkt_P'[self].daddr /\
                                                                                                                e.reply.dport=pkt_P'[self].dport)]
                                                 /\ IF Len(entry_P'[self]) <= 0
                                                       THEN /\ PrintT(<<"PubToPrivVuln - Empty Entry">>)
                                                            /\ IF pkt_P'[self].dport = N
                                                                  THEN /\ IF pkt_P'[self].daddr = N
                                                                             THEN /\ IF Len(FreeIPs) > 0
                                                                                        THEN /\ ip_idx_P' = [ip_idx_P EXCEPT ![self] = DOMAIN FreeIPs]
                                                                                             /\ ipidx_P' = [ipidx_P EXCEPT ![self] = CHOOSE ipp \in ip_idx_P'[self] : TRUE]
                                                                                             /\ ip_Pu' = [ip_Pu EXCEPT ![self] = FreeIPs[ipidx_P'[self]]]
                                                                                             /\ FreeIPs' = SelectSeq(FreeIPs, LAMBDA d: d /= ip_Pu'[self])
                                                                                             /\ UsedIPs' = Append(UsedIPs, ip_Pu'[self])
                                                                                             /\ host_Pu' = [host_Pu EXCEPT ![self] = pkt_P'[self].saddr]
                                                                                             /\ Connections' = Append(Connections, <<ip_Pu'[self], host_Pu'[self]>>)
                                                                                             /\ PrintT(<<"Added Connection",Connections'>>)
                                                                                        ELSE /\ TRUE
                                                                                             /\ UNCHANGED << FreeIPs, 
                                                                                                             UsedIPs, 
                                                                                                             Connections, 
                                                                                                             ip_idx_P, 
                                                                                                             ipidx_P, 
                                                                                                             ip_Pu, 
                                                                                                             host_Pu >>
                                                                             ELSE /\ TRUE
                                                                                  /\ UNCHANGED << FreeIPs, 
                                                                                                  UsedIPs, 
                                                                                                  Connections, 
                                                                                                  ip_idx_P, 
                                                                                                  ipidx_P, 
                                                                                                  ip_Pu, 
                                                                                                  host_Pu >>
                                                                  ELSE /\ TRUE
                                                                       /\ UNCHANGED << FreeIPs, 
                                                                                       UsedIPs, 
                                                                                       Connections, 
                                                                                       ip_idx_P, 
                                                                                       ipidx_P, 
                                                                                       ip_Pu, 
                                                                                       host_Pu >>
                                                            /\ pc' = [pc EXCEPT ![self] = "pubtoprivRet_"]
                                                       ELSE /\ PrintT(<<"PubToPrivMan - Len(entry) > -0:", entry_P'[self], pkt_P'[self]>>)
                                                            /\ pc' = [pc EXCEPT ![self] = "pubtoPrivElse_P"]
                                                            /\ UNCHANGED << FreeIPs, 
                                                                            UsedIPs, 
                                                                            Connections, 
                                                                            ip_idx_P, 
                                                                            ipidx_P, 
                                                                            ip_Pu, 
                                                                            host_Pu >>
                                            ELSE /\ PrintT(<<"PubToPrivMan - Empty Entry">>)
                                                 /\ IF pkt_P'[self].dport = N
                                                       THEN /\ IF Len(FreeIPs) > 0
                                                                  THEN /\ ip_idx_P' = [ip_idx_P EXCEPT ![self] = DOMAIN FreeIPs]
                                                                       /\ ipidx_P' = [ipidx_P EXCEPT ![self] = CHOOSE ipp \in ip_idx_P'[self] : TRUE]
                                                                       /\ ip_Pu' = [ip_Pu EXCEPT ![self] = FreeIPs[ipidx_P'[self]]]
                                                                       /\ FreeIPs' = SelectSeq(FreeIPs, LAMBDA d: d /= ip_Pu'[self])
                                                                       /\ UsedIPs' = Append(UsedIPs, ip_Pu'[self])
                                                                       /\ host_Pu' = [host_Pu EXCEPT ![self] = pkt_P'[self].saddr]
                                                                       /\ Connections' = Append(Connections, <<ip_Pu'[self], host_Pu'[self]>>)
                                                                       /\ PrintT(<<"Added Connection",Connections'>>)
                                                                  ELSE /\ TRUE
                                                                       /\ UNCHANGED << FreeIPs, 
                                                                                       UsedIPs, 
                                                                                       Connections, 
                                                                                       ip_idx_P, 
                                                                                       ipidx_P, 
                                                                                       ip_Pu, 
                                                                                       host_Pu >>
                                                       ELSE /\ TRUE
                                                            /\ UNCHANGED << FreeIPs, 
                                                                            UsedIPs, 
                                                                            Connections, 
                                                                            ip_idx_P, 
                                                                            ipidx_P, 
                                                                            ip_Pu, 
                                                                            host_Pu >>
                                                 /\ pc' = [pc EXCEPT ![self] = "pubtoprivRet_"]
                                                 /\ UNCHANGED entry_P
                                 ELSE /\ PrintT(<<"PubToPrivMan - Else Len(SendQueue) <= 0">>)
                                      /\ pc' = [pc EXCEPT ![self] = "pubtoprivRet_"]
                                      /\ UNCHANGED << FreeIPs, UsedIPs, 
                                                      Connections, SendQueue, 
                                                      pkt_P, entry_P, ip_idx_P, 
                                                      ipidx_P, ip_Pu, host_Pu >>
                           /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, 
                                           Aa, Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, 
                                           Jj, Kk, Ll, Mm, Nn, Oo, Pp, Qq, Rr, 
                                           Ss, Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, 
                                           H2, MaxPorts, EP1, PortMap1, EP2, 
                                           PortMap2, TableFull, 
                                           EvictionReroute, PortScanInv, 
                                           ATIPInv, MaxTableSize, hosts, 
                                           FreeHosts, UsedHosts, Ports, 
                                           ExtraPorts, ExtraExtraPorts, T, 
                                           PrivIPs, PubIPs, PortSpace, 
                                           RcvQueue, MAX, Marker1, Marker2, 
                                           CmdConnect, CmdDisconnect, 
                                           PortSpaceFull, stack, depth_, host_, 
                                           hidx_, host_idx_, pidx_, port_idx_, 
                                           depth_D, ip_, host_D, connDomain_, 
                                           cidx_, conn_, host_Con, ip_C, 
                                           hidx_C, host_idx_C, pidx_C, 
                                           port_idx_C, host_Dis, ip_Di, 
                                           connDomain_D, cidx_D, conn_D, host, 
                                           ip, connDomain_Di, cidx_Di, conn_Di, 
                                           depth_P, pkt_, ipkt_, entry_, 
                                           conn_P, hostMarker_, ip_idx_, 
                                           ipidx_, ip_P, host_P, ipkt_P, 
                                           conn_Pu, hostMarker_P, IP, 
                                           conn_PrivTo, sport_, dstAddr_, 
                                           dport_, pkt_Pr, hostMarker_Pr, 
                                           daddr_, hostidx_, hidx_P, 
                                           otherEntry_, i_, indicies_, 
                                           portDomain_, sourcePort_, destPort_, 
                                           new_sport_, conn, sport, dstAddr, 
                                           dport, pkt_Pri, hostMarker_Pri, 
                                           daddr_P, hostidx_P, hidx_Pr, 
                                           otherEntry_P, i_P, indicies_P, 
                                           portDomain_P, sourcePort_P, 
                                           destPort_P, new_sport_P, depth_Pr, 
                                           pkt_Priv, conn_Pr, hostMarker_Priv, 
                                           daddr_Pr, hostidx_Pr, hidx_Pri, 
                                           otherEntry_Pr, i_Pr, indicies_Pr, 
                                           portDomain_Pr, sourcePort_Pr, 
                                           destPort_Pr, new_sport_Pr, 
                                           pkt_PrivT, conn_Pri, 
                                           hostMarker_PrivT, daddr_Pri, 
                                           hostidx_Pri, hidx_Priv, 
                                           otherEntry_Pri, i_Pri, indicies_Pri, 
                                           portDomain_Pri, sourcePort_Pri, 
                                           destPort_Pri, new_sport_Pri, 
                                           depth_C, host_C, hidx_Co, 
                                           host_idx_Co, pidx_Co, port_idx_Co, 
                                           connhost, port, host_Co, hidx_Con, 
                                           host_idx, pidx, port_idx, depth_Di, 
                                           ip_D, host_Di, connDomain, cidx, 
                                           conn_Dis, depth_Pu, pkt_Pu, ipkt_Pu, 
                                           entry_Pu, conn_Pub, hostMarker_Pu, 
                                           ip_idx_Pu, ipidx_Pu, ip_Pub, 
                                           host_Pub, depth_Pri, pkt_PrivTo, 
                                           conn_Priv, hostMarker_PrivTo, 
                                           daddr_Priv, hostidx_Priv, 
                                           hidx_PrivT, otherEntry_Priv, i_Priv, 
                                           indicies_Priv, portDomain_Priv, 
                                           sourcePort_Priv, destPort_Priv, 
                                           new_sport_Priv, good, depth_E, i_E, 
                                           j_, ip_E, host_E, indecies_, 
                                           depth_Ev, i_Ev, j_E, ip_Ev, host_Ev, 
                                           indecies_E, i_C, i_Ch, depth_Pub, 
                                           pkt_Pub, ipkt_Pub, entry_Pub, 
                                           conn_PubT, hostMarker_Pub, 
                                           ip_idx_Pub, ipidx_Pub, ip_PubT, 
                                           host_PubT, depth_Priv, pkt_PrivToP, 
                                           conn_PrivT, hostMarker_PrivToP, 
                                           daddr, hostidx, hidx, otherEntry, 
                                           i_PrivT, indicies, portDomain, 
                                           sourcePort, destPort, new_sport, 
                                           depth_PubT, pkt, ipkt, entry, 
                                           conn_PubTo, hostMarker, ip_idx, 
                                           ipidx, ip_PubTo, host_PubTo, depth, 
                                           i_Eve, j, ip_Eve, host_Eve, 
                                           indecies, i, aa >>

pubtoPrivElse_P(self) == /\ pc[self] = "pubtoPrivElse_P"
                         /\ entry_P' = [entry_P EXCEPT ![self] = Head(entry_P[self])]
                         /\ IF entry_P'[self].reply.dport=N
                               THEN /\ IF entry_P'[self].reply.daddr=N
                                          THEN /\ IP' = [IP EXCEPT ![self] = SelectSeq(PrivIPs, LAMBDA e: e=entry_P'[self].orig.saddr)]
                                               /\ IF Len(IP'[self])>0
                                                     THEN /\ PrintT(<<"PubToPrivMan - PortShadow: ", entry_P'[self], pkt_P[self]>>)
                                                          /\ ATIPInv' = TRUE
                                                     ELSE /\ TRUE
                                                          /\ UNCHANGED ATIPInv
                                          ELSE /\ TRUE
                                               /\ UNCHANGED << ATIPInv, IP >>
                               ELSE /\ TRUE
                                    /\ UNCHANGED << ATIPInv, IP >>
                         /\ IF entry_P'[self].host_marker/=pkt_P[self].host_marker
                               THEN /\ PrintT(<<"PubToPrivMan - entry.host_marker/=pkt.host_marker:", entry_P'[self], pkt_P[self]>>)
                                    /\ IF pkt_P[self].host_marker = H1
                                          THEN /\ Marker1' = entry_P'[self].host_marker
                                               /\ IF entry_P'[self].host_marker = H2
                                                     THEN /\ EvictionReroute' = TRUE
                                                     ELSE /\ TRUE
                                                          /\ UNCHANGED EvictionReroute
                                               /\ UNCHANGED Marker2
                                          ELSE /\ Marker2' = entry_P'[self].host_marker
                                               /\ IF entry_P'[self].host_marker = H1
                                                     THEN /\ EvictionReroute' = TRUE
                                                     ELSE /\ TRUE
                                                          /\ UNCHANGED EvictionReroute
                                               /\ UNCHANGED Marker1
                                    /\ PrintT(<<"PubToPrivMan - Eviction Error: pkt", pkt_P[self], " entry", entry_P'[self], "Connections:", Connections, "T: ", T>>)
                               ELSE /\ TRUE
                                    /\ UNCHANGED << EvictionReroute, Marker1, 
                                                    Marker2 >>
                         /\ conn_Pu' = [conn_Pu EXCEPT ![self] = SelectSeq(Connections, LAMBDA e: entry_P'[self].orig.saddr = Head(e))]
                         /\ IF Len(conn_Pu'[self]) > 0
                               THEN /\ pc' = [pc EXCEPT ![self] = "pubtoprivConngt1_"]
                               ELSE /\ pc' = [pc EXCEPT ![self] = "pubtoprivRet_"]
                         /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, 
                                         Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, 
                                         Kk, Ll, Mm, Nn, Oo, Pp, Qq, Rr, Ss, 
                                         Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, H2, 
                                         MaxPorts, EP1, PortMap1, EP2, 
                                         PortMap2, TableFull, PortScanInv, 
                                         MaxTableSize, hosts, FreeHosts, 
                                         UsedHosts, Ports, ExtraPorts, 
                                         ExtraExtraPorts, T, FreeIPs, PrivIPs, 
                                         PubIPs, PortSpace, UsedIPs, 
                                         Connections, SendQueue, RcvQueue, MAX, 
                                         CmdConnect, CmdDisconnect, 
                                         PortSpaceFull, stack, depth_, host_, 
                                         hidx_, host_idx_, pidx_, port_idx_, 
                                         depth_D, ip_, host_D, connDomain_, 
                                         cidx_, conn_, host_Con, ip_C, hidx_C, 
                                         host_idx_C, pidx_C, port_idx_C, 
                                         host_Dis, ip_Di, connDomain_D, cidx_D, 
                                         conn_D, host, ip, connDomain_Di, 
                                         cidx_Di, conn_Di, depth_P, pkt_, 
                                         ipkt_, entry_, conn_P, hostMarker_, 
                                         ip_idx_, ipidx_, ip_P, host_P, pkt_P, 
                                         ipkt_P, hostMarker_P, ip_idx_P, 
                                         ipidx_P, ip_Pu, host_Pu, conn_PrivTo, 
                                         sport_, dstAddr_, dport_, pkt_Pr, 
                                         hostMarker_Pr, daddr_, hostidx_, 
                                         hidx_P, otherEntry_, i_, indicies_, 
                                         portDomain_, sourcePort_, destPort_, 
                                         new_sport_, conn, sport, dstAddr, 
                                         dport, pkt_Pri, hostMarker_Pri, 
                                         daddr_P, hostidx_P, hidx_Pr, 
                                         otherEntry_P, i_P, indicies_P, 
                                         portDomain_P, sourcePort_P, 
                                         destPort_P, new_sport_P, depth_Pr, 
                                         pkt_Priv, conn_Pr, hostMarker_Priv, 
                                         daddr_Pr, hostidx_Pr, hidx_Pri, 
                                         otherEntry_Pr, i_Pr, indicies_Pr, 
                                         portDomain_Pr, sourcePort_Pr, 
                                         destPort_Pr, new_sport_Pr, pkt_PrivT, 
                                         conn_Pri, hostMarker_PrivT, daddr_Pri, 
                                         hostidx_Pri, hidx_Priv, 
                                         otherEntry_Pri, i_Pri, indicies_Pri, 
                                         portDomain_Pri, sourcePort_Pri, 
                                         destPort_Pri, new_sport_Pri, depth_C, 
                                         host_C, hidx_Co, host_idx_Co, pidx_Co, 
                                         port_idx_Co, connhost, port, host_Co, 
                                         hidx_Con, host_idx, pidx, port_idx, 
                                         depth_Di, ip_D, host_Di, connDomain, 
                                         cidx, conn_Dis, depth_Pu, pkt_Pu, 
                                         ipkt_Pu, entry_Pu, conn_Pub, 
                                         hostMarker_Pu, ip_idx_Pu, ipidx_Pu, 
                                         ip_Pub, host_Pub, depth_Pri, 
                                         pkt_PrivTo, conn_Priv, 
                                         hostMarker_PrivTo, daddr_Priv, 
                                         hostidx_Priv, hidx_PrivT, 
                                         otherEntry_Priv, i_Priv, 
                                         indicies_Priv, portDomain_Priv, 
                                         sourcePort_Priv, destPort_Priv, 
                                         new_sport_Priv, good, depth_E, i_E, 
                                         j_, ip_E, host_E, indecies_, depth_Ev, 
                                         i_Ev, j_E, ip_Ev, host_Ev, indecies_E, 
                                         i_C, i_Ch, depth_Pub, pkt_Pub, 
                                         ipkt_Pub, entry_Pub, conn_PubT, 
                                         hostMarker_Pub, ip_idx_Pub, ipidx_Pub, 
                                         ip_PubT, host_PubT, depth_Priv, 
                                         pkt_PrivToP, conn_PrivT, 
                                         hostMarker_PrivToP, daddr, hostidx, 
                                         hidx, otherEntry, i_PrivT, indicies, 
                                         portDomain, sourcePort, destPort, 
                                         new_sport, depth_PubT, pkt, ipkt, 
                                         entry, conn_PubTo, hostMarker, ip_idx, 
                                         ipidx, ip_PubTo, host_PubTo, depth, 
                                         i_Eve, j, ip_Eve, host_Eve, indecies, 
                                         i, aa >>

pubtoprivConngt1_(self) == /\ pc[self] = "pubtoprivConngt1_"
                           /\ conn_Pu' = [conn_Pu EXCEPT ![self] = Head(conn_Pu[self])]
                           /\ pc' = [pc EXCEPT ![self] = "pubtoprivConngt2_"]
                           /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, 
                                           Aa, Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, 
                                           Jj, Kk, Ll, Mm, Nn, Oo, Pp, Qq, Rr, 
                                           Ss, Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, 
                                           H2, MaxPorts, EP1, PortMap1, EP2, 
                                           PortMap2, TableFull, 
                                           EvictionReroute, PortScanInv, 
                                           ATIPInv, MaxTableSize, hosts, 
                                           FreeHosts, UsedHosts, Ports, 
                                           ExtraPorts, ExtraExtraPorts, T, 
                                           FreeIPs, PrivIPs, PubIPs, PortSpace, 
                                           UsedIPs, Connections, SendQueue, 
                                           RcvQueue, MAX, Marker1, Marker2, 
                                           CmdConnect, CmdDisconnect, 
                                           PortSpaceFull, stack, depth_, host_, 
                                           hidx_, host_idx_, pidx_, port_idx_, 
                                           depth_D, ip_, host_D, connDomain_, 
                                           cidx_, conn_, host_Con, ip_C, 
                                           hidx_C, host_idx_C, pidx_C, 
                                           port_idx_C, host_Dis, ip_Di, 
                                           connDomain_D, cidx_D, conn_D, host, 
                                           ip, connDomain_Di, cidx_Di, conn_Di, 
                                           depth_P, pkt_, ipkt_, entry_, 
                                           conn_P, hostMarker_, ip_idx_, 
                                           ipidx_, ip_P, host_P, pkt_P, ipkt_P, 
                                           entry_P, hostMarker_P, ip_idx_P, 
                                           ipidx_P, ip_Pu, host_Pu, IP, 
                                           conn_PrivTo, sport_, dstAddr_, 
                                           dport_, pkt_Pr, hostMarker_Pr, 
                                           daddr_, hostidx_, hidx_P, 
                                           otherEntry_, i_, indicies_, 
                                           portDomain_, sourcePort_, destPort_, 
                                           new_sport_, conn, sport, dstAddr, 
                                           dport, pkt_Pri, hostMarker_Pri, 
                                           daddr_P, hostidx_P, hidx_Pr, 
                                           otherEntry_P, i_P, indicies_P, 
                                           portDomain_P, sourcePort_P, 
                                           destPort_P, new_sport_P, depth_Pr, 
                                           pkt_Priv, conn_Pr, hostMarker_Priv, 
                                           daddr_Pr, hostidx_Pr, hidx_Pri, 
                                           otherEntry_Pr, i_Pr, indicies_Pr, 
                                           portDomain_Pr, sourcePort_Pr, 
                                           destPort_Pr, new_sport_Pr, 
                                           pkt_PrivT, conn_Pri, 
                                           hostMarker_PrivT, daddr_Pri, 
                                           hostidx_Pri, hidx_Priv, 
                                           otherEntry_Pri, i_Pri, indicies_Pri, 
                                           portDomain_Pri, sourcePort_Pri, 
                                           destPort_Pri, new_sport_Pri, 
                                           depth_C, host_C, hidx_Co, 
                                           host_idx_Co, pidx_Co, port_idx_Co, 
                                           connhost, port, host_Co, hidx_Con, 
                                           host_idx, pidx, port_idx, depth_Di, 
                                           ip_D, host_Di, connDomain, cidx, 
                                           conn_Dis, depth_Pu, pkt_Pu, ipkt_Pu, 
                                           entry_Pu, conn_Pub, hostMarker_Pu, 
                                           ip_idx_Pu, ipidx_Pu, ip_Pub, 
                                           host_Pub, depth_Pri, pkt_PrivTo, 
                                           conn_Priv, hostMarker_PrivTo, 
                                           daddr_Priv, hostidx_Priv, 
                                           hidx_PrivT, otherEntry_Priv, i_Priv, 
                                           indicies_Priv, portDomain_Priv, 
                                           sourcePort_Priv, destPort_Priv, 
                                           new_sport_Priv, good, depth_E, i_E, 
                                           j_, ip_E, host_E, indecies_, 
                                           depth_Ev, i_Ev, j_E, ip_Ev, host_Ev, 
                                           indecies_E, i_C, i_Ch, depth_Pub, 
                                           pkt_Pub, ipkt_Pub, entry_Pub, 
                                           conn_PubT, hostMarker_Pub, 
                                           ip_idx_Pub, ipidx_Pub, ip_PubT, 
                                           host_PubT, depth_Priv, pkt_PrivToP, 
                                           conn_PrivT, hostMarker_PrivToP, 
                                           daddr, hostidx, hidx, otherEntry, 
                                           i_PrivT, indicies, portDomain, 
                                           sourcePort, destPort, new_sport, 
                                           depth_PubT, pkt, ipkt, entry, 
                                           conn_PubTo, hostMarker, ip_idx, 
                                           ipidx, ip_PubTo, host_PubTo, depth, 
                                           i_Eve, j, ip_Eve, host_Eve, 
                                           indecies, i, aa >>

pubtoprivConngt2_(self) == /\ pc[self] = "pubtoprivConngt2_"
                           /\ hostMarker_P' = [hostMarker_P EXCEPT ![self] = conn_Pu[self][2]]
                           /\ IF hostMarker_P'[self] = H1
                                 THEN /\ IF entry_P[self].host_marker = H2
                                            THEN /\ PortScanInv' = TRUE
                                            ELSE /\ TRUE
                                                 /\ UNCHANGED PortScanInv
                                      /\ Marker1' = entry_P[self].host_marker
                                      /\ UNCHANGED Marker2
                                 ELSE /\ IF entry_P[self].host_marker = H1
                                            THEN /\ PortScanInv' = TRUE
                                            ELSE /\ TRUE
                                                 /\ UNCHANGED PortScanInv
                                      /\ Marker2' = entry_P[self].host_marker
                                      /\ UNCHANGED Marker1
                           /\ pc' = [pc EXCEPT ![self] = "pubtoprivRet_"]
                           /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, 
                                           Aa, Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, 
                                           Jj, Kk, Ll, Mm, Nn, Oo, Pp, Qq, Rr, 
                                           Ss, Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, 
                                           H2, MaxPorts, EP1, PortMap1, EP2, 
                                           PortMap2, TableFull, 
                                           EvictionReroute, ATIPInv, 
                                           MaxTableSize, hosts, FreeHosts, 
                                           UsedHosts, Ports, ExtraPorts, 
                                           ExtraExtraPorts, T, FreeIPs, 
                                           PrivIPs, PubIPs, PortSpace, UsedIPs, 
                                           Connections, SendQueue, RcvQueue, 
                                           MAX, CmdConnect, CmdDisconnect, 
                                           PortSpaceFull, stack, depth_, host_, 
                                           hidx_, host_idx_, pidx_, port_idx_, 
                                           depth_D, ip_, host_D, connDomain_, 
                                           cidx_, conn_, host_Con, ip_C, 
                                           hidx_C, host_idx_C, pidx_C, 
                                           port_idx_C, host_Dis, ip_Di, 
                                           connDomain_D, cidx_D, conn_D, host, 
                                           ip, connDomain_Di, cidx_Di, conn_Di, 
                                           depth_P, pkt_, ipkt_, entry_, 
                                           conn_P, hostMarker_, ip_idx_, 
                                           ipidx_, ip_P, host_P, pkt_P, ipkt_P, 
                                           entry_P, conn_Pu, ip_idx_P, ipidx_P, 
                                           ip_Pu, host_Pu, IP, conn_PrivTo, 
                                           sport_, dstAddr_, dport_, pkt_Pr, 
                                           hostMarker_Pr, daddr_, hostidx_, 
                                           hidx_P, otherEntry_, i_, indicies_, 
                                           portDomain_, sourcePort_, destPort_, 
                                           new_sport_, conn, sport, dstAddr, 
                                           dport, pkt_Pri, hostMarker_Pri, 
                                           daddr_P, hostidx_P, hidx_Pr, 
                                           otherEntry_P, i_P, indicies_P, 
                                           portDomain_P, sourcePort_P, 
                                           destPort_P, new_sport_P, depth_Pr, 
                                           pkt_Priv, conn_Pr, hostMarker_Priv, 
                                           daddr_Pr, hostidx_Pr, hidx_Pri, 
                                           otherEntry_Pr, i_Pr, indicies_Pr, 
                                           portDomain_Pr, sourcePort_Pr, 
                                           destPort_Pr, new_sport_Pr, 
                                           pkt_PrivT, conn_Pri, 
                                           hostMarker_PrivT, daddr_Pri, 
                                           hostidx_Pri, hidx_Priv, 
                                           otherEntry_Pri, i_Pri, indicies_Pri, 
                                           portDomain_Pri, sourcePort_Pri, 
                                           destPort_Pri, new_sport_Pri, 
                                           depth_C, host_C, hidx_Co, 
                                           host_idx_Co, pidx_Co, port_idx_Co, 
                                           connhost, port, host_Co, hidx_Con, 
                                           host_idx, pidx, port_idx, depth_Di, 
                                           ip_D, host_Di, connDomain, cidx, 
                                           conn_Dis, depth_Pu, pkt_Pu, ipkt_Pu, 
                                           entry_Pu, conn_Pub, hostMarker_Pu, 
                                           ip_idx_Pu, ipidx_Pu, ip_Pub, 
                                           host_Pub, depth_Pri, pkt_PrivTo, 
                                           conn_Priv, hostMarker_PrivTo, 
                                           daddr_Priv, hostidx_Priv, 
                                           hidx_PrivT, otherEntry_Priv, i_Priv, 
                                           indicies_Priv, portDomain_Priv, 
                                           sourcePort_Priv, destPort_Priv, 
                                           new_sport_Priv, good, depth_E, i_E, 
                                           j_, ip_E, host_E, indecies_, 
                                           depth_Ev, i_Ev, j_E, ip_Ev, host_Ev, 
                                           indecies_E, i_C, i_Ch, depth_Pub, 
                                           pkt_Pub, ipkt_Pub, entry_Pub, 
                                           conn_PubT, hostMarker_Pub, 
                                           ip_idx_Pub, ipidx_Pub, ip_PubT, 
                                           host_PubT, depth_Priv, pkt_PrivToP, 
                                           conn_PrivT, hostMarker_PrivToP, 
                                           daddr, hostidx, hidx, otherEntry, 
                                           i_PrivT, indicies, portDomain, 
                                           sourcePort, destPort, new_sport, 
                                           depth_PubT, pkt, ipkt, entry, 
                                           conn_PubTo, hostMarker, ip_idx, 
                                           ipidx, ip_PubTo, host_PubTo, depth, 
                                           i_Eve, j, ip_Eve, host_Eve, 
                                           indecies, i, aa >>

pubtoprivRet_(self) == /\ pc[self] = "pubtoprivRet_"
                       /\ pc' = [pc EXCEPT ![self] = Head(stack[self]).pc]
                       /\ pkt_P' = [pkt_P EXCEPT ![self] = Head(stack[self]).pkt_P]
                       /\ ipkt_P' = [ipkt_P EXCEPT ![self] = Head(stack[self]).ipkt_P]
                       /\ entry_P' = [entry_P EXCEPT ![self] = Head(stack[self]).entry_P]
                       /\ conn_Pu' = [conn_Pu EXCEPT ![self] = Head(stack[self]).conn_Pu]
                       /\ hostMarker_P' = [hostMarker_P EXCEPT ![self] = Head(stack[self]).hostMarker_P]
                       /\ ip_idx_P' = [ip_idx_P EXCEPT ![self] = Head(stack[self]).ip_idx_P]
                       /\ ipidx_P' = [ipidx_P EXCEPT ![self] = Head(stack[self]).ipidx_P]
                       /\ ip_Pu' = [ip_Pu EXCEPT ![self] = Head(stack[self]).ip_Pu]
                       /\ host_Pu' = [host_Pu EXCEPT ![self] = Head(stack[self]).host_Pu]
                       /\ IP' = [IP EXCEPT ![self] = Head(stack[self]).IP]
                       /\ stack' = [stack EXCEPT ![self] = Tail(stack[self])]
                       /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, 
                                       Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, 
                                       Ll, Mm, Nn, Oo, Pp, Qq, Rr, Ss, Tt, Uu, 
                                       Vv, Ww, Xx, Yy, Zz, H1, H2, MaxPorts, 
                                       EP1, PortMap1, EP2, PortMap2, TableFull, 
                                       EvictionReroute, PortScanInv, ATIPInv, 
                                       MaxTableSize, hosts, FreeHosts, 
                                       UsedHosts, Ports, ExtraPorts, 
                                       ExtraExtraPorts, T, FreeIPs, PrivIPs, 
                                       PubIPs, PortSpace, UsedIPs, Connections, 
                                       SendQueue, RcvQueue, MAX, Marker1, 
                                       Marker2, CmdConnect, CmdDisconnect, 
                                       PortSpaceFull, depth_, host_, hidx_, 
                                       host_idx_, pidx_, port_idx_, depth_D, 
                                       ip_, host_D, connDomain_, cidx_, conn_, 
                                       host_Con, ip_C, hidx_C, host_idx_C, 
                                       pidx_C, port_idx_C, host_Dis, ip_Di, 
                                       connDomain_D, cidx_D, conn_D, host, ip, 
                                       connDomain_Di, cidx_Di, conn_Di, 
                                       depth_P, pkt_, ipkt_, entry_, conn_P, 
                                       hostMarker_, ip_idx_, ipidx_, ip_P, 
                                       host_P, conn_PrivTo, sport_, dstAddr_, 
                                       dport_, pkt_Pr, hostMarker_Pr, daddr_, 
                                       hostidx_, hidx_P, otherEntry_, i_, 
                                       indicies_, portDomain_, sourcePort_, 
                                       destPort_, new_sport_, conn, sport, 
                                       dstAddr, dport, pkt_Pri, hostMarker_Pri, 
                                       daddr_P, hostidx_P, hidx_Pr, 
                                       otherEntry_P, i_P, indicies_P, 
                                       portDomain_P, sourcePort_P, destPort_P, 
                                       new_sport_P, depth_Pr, pkt_Priv, 
                                       conn_Pr, hostMarker_Priv, daddr_Pr, 
                                       hostidx_Pr, hidx_Pri, otherEntry_Pr, 
                                       i_Pr, indicies_Pr, portDomain_Pr, 
                                       sourcePort_Pr, destPort_Pr, 
                                       new_sport_Pr, pkt_PrivT, conn_Pri, 
                                       hostMarker_PrivT, daddr_Pri, 
                                       hostidx_Pri, hidx_Priv, otherEntry_Pri, 
                                       i_Pri, indicies_Pri, portDomain_Pri, 
                                       sourcePort_Pri, destPort_Pri, 
                                       new_sport_Pri, depth_C, host_C, hidx_Co, 
                                       host_idx_Co, pidx_Co, port_idx_Co, 
                                       connhost, port, host_Co, hidx_Con, 
                                       host_idx, pidx, port_idx, depth_Di, 
                                       ip_D, host_Di, connDomain, cidx, 
                                       conn_Dis, depth_Pu, pkt_Pu, ipkt_Pu, 
                                       entry_Pu, conn_Pub, hostMarker_Pu, 
                                       ip_idx_Pu, ipidx_Pu, ip_Pub, host_Pub, 
                                       depth_Pri, pkt_PrivTo, conn_Priv, 
                                       hostMarker_PrivTo, daddr_Priv, 
                                       hostidx_Priv, hidx_PrivT, 
                                       otherEntry_Priv, i_Priv, indicies_Priv, 
                                       portDomain_Priv, sourcePort_Priv, 
                                       destPort_Priv, new_sport_Priv, good, 
                                       depth_E, i_E, j_, ip_E, host_E, 
                                       indecies_, depth_Ev, i_Ev, j_E, ip_Ev, 
                                       host_Ev, indecies_E, i_C, i_Ch, 
                                       depth_Pub, pkt_Pub, ipkt_Pub, entry_Pub, 
                                       conn_PubT, hostMarker_Pub, ip_idx_Pub, 
                                       ipidx_Pub, ip_PubT, host_PubT, 
                                       depth_Priv, pkt_PrivToP, conn_PrivT, 
                                       hostMarker_PrivToP, daddr, hostidx, 
                                       hidx, otherEntry, i_PrivT, indicies, 
                                       portDomain, sourcePort, destPort, 
                                       new_sport, depth_PubT, pkt, ipkt, entry, 
                                       conn_PubTo, hostMarker, ip_idx, ipidx, 
                                       ip_PubTo, host_PubTo, depth, i_Eve, j, 
                                       ip_Eve, host_Eve, indecies, i, aa >>

PubToPrivMan(self) == pubtoprivManStart(self) \/ pubtoPrivElse_P(self)
                         \/ pubtoprivConngt1_(self)
                         \/ pubtoprivConngt2_(self) \/ pubtoprivRet_(self)

privtopubManStart_(self) == /\ pc[self] = "privtopubManStart_"
                            /\ IF Len (Connections) > 0
                                  THEN /\ sourcePort_' = [sourcePort_ EXCEPT ![self] = sport_[self]]
                                       /\ pc' = [pc EXCEPT ![self] = "privtopubMan2Dport_"]
                                  ELSE /\ pc' = [pc EXCEPT ![self] = "privtopubMan2Ret_"]
                                       /\ UNCHANGED sourcePort_
                            /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, 
                                            Aa, Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, 
                                            Jj, Kk, Ll, Mm, Nn, Oo, Pp, Qq, Rr, 
                                            Ss, Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, 
                                            H2, MaxPorts, EP1, PortMap1, EP2, 
                                            PortMap2, TableFull, 
                                            EvictionReroute, PortScanInv, 
                                            ATIPInv, MaxTableSize, hosts, 
                                            FreeHosts, UsedHosts, Ports, 
                                            ExtraPorts, ExtraExtraPorts, T, 
                                            FreeIPs, PrivIPs, PubIPs, 
                                            PortSpace, UsedIPs, Connections, 
                                            SendQueue, RcvQueue, MAX, Marker1, 
                                            Marker2, CmdConnect, CmdDisconnect, 
                                            PortSpaceFull, stack, depth_, 
                                            host_, hidx_, host_idx_, pidx_, 
                                            port_idx_, depth_D, ip_, host_D, 
                                            connDomain_, cidx_, conn_, 
                                            host_Con, ip_C, hidx_C, host_idx_C, 
                                            pidx_C, port_idx_C, host_Dis, 
                                            ip_Di, connDomain_D, cidx_D, 
                                            conn_D, host, ip, connDomain_Di, 
                                            cidx_Di, conn_Di, depth_P, pkt_, 
                                            ipkt_, entry_, conn_P, hostMarker_, 
                                            ip_idx_, ipidx_, ip_P, host_P, 
                                            pkt_P, ipkt_P, entry_P, conn_Pu, 
                                            hostMarker_P, ip_idx_P, ipidx_P, 
                                            ip_Pu, host_Pu, IP, conn_PrivTo, 
                                            sport_, dstAddr_, dport_, pkt_Pr, 
                                            hostMarker_Pr, daddr_, hostidx_, 
                                            hidx_P, otherEntry_, i_, indicies_, 
                                            portDomain_, destPort_, new_sport_, 
                                            conn, sport, dstAddr, dport, 
                                            pkt_Pri, hostMarker_Pri, daddr_P, 
                                            hostidx_P, hidx_Pr, otherEntry_P, 
                                            i_P, indicies_P, portDomain_P, 
                                            sourcePort_P, destPort_P, 
                                            new_sport_P, depth_Pr, pkt_Priv, 
                                            conn_Pr, hostMarker_Priv, daddr_Pr, 
                                            hostidx_Pr, hidx_Pri, 
                                            otherEntry_Pr, i_Pr, indicies_Pr, 
                                            portDomain_Pr, sourcePort_Pr, 
                                            destPort_Pr, new_sport_Pr, 
                                            pkt_PrivT, conn_Pri, 
                                            hostMarker_PrivT, daddr_Pri, 
                                            hostidx_Pri, hidx_Priv, 
                                            otherEntry_Pri, i_Pri, 
                                            indicies_Pri, portDomain_Pri, 
                                            sourcePort_Pri, destPort_Pri, 
                                            new_sport_Pri, depth_C, host_C, 
                                            hidx_Co, host_idx_Co, pidx_Co, 
                                            port_idx_Co, connhost, port, 
                                            host_Co, hidx_Con, host_idx, pidx, 
                                            port_idx, depth_Di, ip_D, host_Di, 
                                            connDomain, cidx, conn_Dis, 
                                            depth_Pu, pkt_Pu, ipkt_Pu, 
                                            entry_Pu, conn_Pub, hostMarker_Pu, 
                                            ip_idx_Pu, ipidx_Pu, ip_Pub, 
                                            host_Pub, depth_Pri, pkt_PrivTo, 
                                            conn_Priv, hostMarker_PrivTo, 
                                            daddr_Priv, hostidx_Priv, 
                                            hidx_PrivT, otherEntry_Priv, 
                                            i_Priv, indicies_Priv, 
                                            portDomain_Priv, sourcePort_Priv, 
                                            destPort_Priv, new_sport_Priv, 
                                            good, depth_E, i_E, j_, ip_E, 
                                            host_E, indecies_, depth_Ev, i_Ev, 
                                            j_E, ip_Ev, host_Ev, indecies_E, 
                                            i_C, i_Ch, depth_Pub, pkt_Pub, 
                                            ipkt_Pub, entry_Pub, conn_PubT, 
                                            hostMarker_Pub, ip_idx_Pub, 
                                            ipidx_Pub, ip_PubT, host_PubT, 
                                            depth_Priv, pkt_PrivToP, 
                                            conn_PrivT, hostMarker_PrivToP, 
                                            daddr, hostidx, hidx, otherEntry, 
                                            i_PrivT, indicies, portDomain, 
                                            sourcePort, destPort, new_sport, 
                                            depth_PubT, pkt, ipkt, entry, 
                                            conn_PubTo, hostMarker, ip_idx, 
                                            ipidx, ip_PubTo, host_PubTo, depth, 
                                            i_Eve, j, ip_Eve, host_Eve, 
                                            indecies, i, aa >>

privtopubMan2Dport_(self) == /\ pc[self] = "privtopubMan2Dport_"
                             /\ destPort_' = [destPort_ EXCEPT ![self] = dport_[self]]
                             /\ daddr_' = [daddr_ EXCEPT ![self] = dstAddr_[self]]
                             /\ PrintT(<<"PrivToPub - Conn: ", conn_PrivTo[self]>>)
                             /\ hostMarker_Pr' = [hostMarker_Pr EXCEPT ![self] = Head(Tail(conn_PrivTo[self]))]
                             /\ pkt_Pr' = [pkt_Pr EXCEPT ![self] = [saddr |-> Head(conn_PrivTo[self]), sport |-> sourcePort_[self],
                                                                    daddr |-> daddr_'[self], dport |-> destPort_'[self],
                                                                    host_marker |-> hostMarker_Pr'[self]
                                                                   ]]
                             /\ PrintT(<<"PrivToPubMan - pkt: ", conn_PrivTo[self], pkt_Pr'[self]>>)
                             /\ entry' = [entry EXCEPT ![self] = [host_marker |-> hostMarker_Pr'[self],
                                                                  orig |-> [saddr |-> pkt_Pr'[self].saddr, sport |-> pkt_Pr'[self].sport,
                                                                            daddr |-> pkt_Pr'[self].daddr, dport |-> pkt_Pr'[self].dport],
                                                                  reply |-> [saddr |-> pkt_Pr'[self].daddr, sport |-> pkt_Pr'[self].dport,
                                                                             daddr |-> N,  dport |-> pkt_Pr'[self].sport ]]]
                             /\ otherEntry_' = [otherEntry_ EXCEPT ![self] = SelectSeq(T, LAMBDA k: k.reply.saddr=pkt_Pr'[self].daddr /\ k.reply.sport=pkt_Pr'[self].dport /\
                                                                                                    k.reply.daddr=N /\ k.reply.dport=pkt_Pr'[self].sport)]
                             /\ PrintT(<<"PrivToPub - T", T, otherEntry_'[self], pkt_Pr'[self]>>)
                             /\ IF Len(otherEntry_'[self]) > 0
                                   THEN /\ T' = SelectSeq(T, LAMBDA e: ~(e.reply.saddr=pkt_Pr'[self].daddr /\ e.reply.sport=pkt_Pr'[self].dport /\
                                                                         e.reply.daddr=N /\ e.reply.dport=pkt_Pr'[self].sport) )
                                   ELSE /\ TRUE
                                        /\ T' = T
                             /\ pc' = [pc EXCEPT ![self] = "privtoPubMan2AddT_"]
                             /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, 
                                             Aa, Bb, Cc, Dd, Ee, Ff, Gg, Hh, 
                                             Ii, Jj, Kk, Ll, Mm, Nn, Oo, Pp, 
                                             Qq, Rr, Ss, Tt, Uu, Vv, Ww, Xx, 
                                             Yy, Zz, H1, H2, MaxPorts, EP1, 
                                             PortMap1, EP2, PortMap2, 
                                             TableFull, EvictionReroute, 
                                             PortScanInv, ATIPInv, 
                                             MaxTableSize, hosts, FreeHosts, 
                                             UsedHosts, Ports, ExtraPorts, 
                                             ExtraExtraPorts, FreeIPs, PrivIPs, 
                                             PubIPs, PortSpace, UsedIPs, 
                                             Connections, SendQueue, RcvQueue, 
                                             MAX, Marker1, Marker2, CmdConnect, 
                                             CmdDisconnect, PortSpaceFull, 
                                             stack, depth_, host_, hidx_, 
                                             host_idx_, pidx_, port_idx_, 
                                             depth_D, ip_, host_D, connDomain_, 
                                             cidx_, conn_, host_Con, ip_C, 
                                             hidx_C, host_idx_C, pidx_C, 
                                             port_idx_C, host_Dis, ip_Di, 
                                             connDomain_D, cidx_D, conn_D, 
                                             host, ip, connDomain_Di, cidx_Di, 
                                             conn_Di, depth_P, pkt_, ipkt_, 
                                             entry_, conn_P, hostMarker_, 
                                             ip_idx_, ipidx_, ip_P, host_P, 
                                             pkt_P, ipkt_P, entry_P, conn_Pu, 
                                             hostMarker_P, ip_idx_P, ipidx_P, 
                                             ip_Pu, host_Pu, IP, conn_PrivTo, 
                                             sport_, dstAddr_, dport_, 
                                             hostidx_, hidx_P, i_, indicies_, 
                                             portDomain_, sourcePort_, 
                                             new_sport_, conn, sport, dstAddr, 
                                             dport, pkt_Pri, hostMarker_Pri, 
                                             daddr_P, hostidx_P, hidx_Pr, 
                                             otherEntry_P, i_P, indicies_P, 
                                             portDomain_P, sourcePort_P, 
                                             destPort_P, new_sport_P, depth_Pr, 
                                             pkt_Priv, conn_Pr, 
                                             hostMarker_Priv, daddr_Pr, 
                                             hostidx_Pr, hidx_Pri, 
                                             otherEntry_Pr, i_Pr, indicies_Pr, 
                                             portDomain_Pr, sourcePort_Pr, 
                                             destPort_Pr, new_sport_Pr, 
                                             pkt_PrivT, conn_Pri, 
                                             hostMarker_PrivT, daddr_Pri, 
                                             hostidx_Pri, hidx_Priv, 
                                             otherEntry_Pri, i_Pri, 
                                             indicies_Pri, portDomain_Pri, 
                                             sourcePort_Pri, destPort_Pri, 
                                             new_sport_Pri, depth_C, host_C, 
                                             hidx_Co, host_idx_Co, pidx_Co, 
                                             port_idx_Co, connhost, port, 
                                             host_Co, hidx_Con, host_idx, pidx, 
                                             port_idx, depth_Di, ip_D, host_Di, 
                                             connDomain, cidx, conn_Dis, 
                                             depth_Pu, pkt_Pu, ipkt_Pu, 
                                             entry_Pu, conn_Pub, hostMarker_Pu, 
                                             ip_idx_Pu, ipidx_Pu, ip_Pub, 
                                             host_Pub, depth_Pri, pkt_PrivTo, 
                                             conn_Priv, hostMarker_PrivTo, 
                                             daddr_Priv, hostidx_Priv, 
                                             hidx_PrivT, otherEntry_Priv, 
                                             i_Priv, indicies_Priv, 
                                             portDomain_Priv, sourcePort_Priv, 
                                             destPort_Priv, new_sport_Priv, 
                                             good, depth_E, i_E, j_, ip_E, 
                                             host_E, indecies_, depth_Ev, i_Ev, 
                                             j_E, ip_Ev, host_Ev, indecies_E, 
                                             i_C, i_Ch, depth_Pub, pkt_Pub, 
                                             ipkt_Pub, entry_Pub, conn_PubT, 
                                             hostMarker_Pub, ip_idx_Pub, 
                                             ipidx_Pub, ip_PubT, host_PubT, 
                                             depth_Priv, pkt_PrivToP, 
                                             conn_PrivT, hostMarker_PrivToP, 
                                             daddr, hostidx, hidx, otherEntry, 
                                             i_PrivT, indicies, portDomain, 
                                             sourcePort, destPort, new_sport, 
                                             depth_PubT, pkt, ipkt, conn_PubTo, 
                                             hostMarker, ip_idx, ipidx, 
                                             ip_PubTo, host_PubTo, depth, 
                                             i_Eve, j, ip_Eve, host_Eve, 
                                             indecies, i, aa >>

privtoPubMan2AddT_(self) == /\ pc[self] = "privtoPubMan2AddT_"
                            /\ T' = Append(T, entry[self])
                            /\ pc' = [pc EXCEPT ![self] = "privtopubPkt_"]
                            /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, 
                                            Aa, Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, 
                                            Jj, Kk, Ll, Mm, Nn, Oo, Pp, Qq, Rr, 
                                            Ss, Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, 
                                            H2, MaxPorts, EP1, PortMap1, EP2, 
                                            PortMap2, TableFull, 
                                            EvictionReroute, PortScanInv, 
                                            ATIPInv, MaxTableSize, hosts, 
                                            FreeHosts, UsedHosts, Ports, 
                                            ExtraPorts, ExtraExtraPorts, 
                                            FreeIPs, PrivIPs, PubIPs, 
                                            PortSpace, UsedIPs, Connections, 
                                            SendQueue, RcvQueue, MAX, Marker1, 
                                            Marker2, CmdConnect, CmdDisconnect, 
                                            PortSpaceFull, stack, depth_, 
                                            host_, hidx_, host_idx_, pidx_, 
                                            port_idx_, depth_D, ip_, host_D, 
                                            connDomain_, cidx_, conn_, 
                                            host_Con, ip_C, hidx_C, host_idx_C, 
                                            pidx_C, port_idx_C, host_Dis, 
                                            ip_Di, connDomain_D, cidx_D, 
                                            conn_D, host, ip, connDomain_Di, 
                                            cidx_Di, conn_Di, depth_P, pkt_, 
                                            ipkt_, entry_, conn_P, hostMarker_, 
                                            ip_idx_, ipidx_, ip_P, host_P, 
                                            pkt_P, ipkt_P, entry_P, conn_Pu, 
                                            hostMarker_P, ip_idx_P, ipidx_P, 
                                            ip_Pu, host_Pu, IP, conn_PrivTo, 
                                            sport_, dstAddr_, dport_, pkt_Pr, 
                                            hostMarker_Pr, daddr_, hostidx_, 
                                            hidx_P, otherEntry_, i_, indicies_, 
                                            portDomain_, sourcePort_, 
                                            destPort_, new_sport_, conn, sport, 
                                            dstAddr, dport, pkt_Pri, 
                                            hostMarker_Pri, daddr_P, hostidx_P, 
                                            hidx_Pr, otherEntry_P, i_P, 
                                            indicies_P, portDomain_P, 
                                            sourcePort_P, destPort_P, 
                                            new_sport_P, depth_Pr, pkt_Priv, 
                                            conn_Pr, hostMarker_Priv, daddr_Pr, 
                                            hostidx_Pr, hidx_Pri, 
                                            otherEntry_Pr, i_Pr, indicies_Pr, 
                                            portDomain_Pr, sourcePort_Pr, 
                                            destPort_Pr, new_sport_Pr, 
                                            pkt_PrivT, conn_Pri, 
                                            hostMarker_PrivT, daddr_Pri, 
                                            hostidx_Pri, hidx_Priv, 
                                            otherEntry_Pri, i_Pri, 
                                            indicies_Pri, portDomain_Pri, 
                                            sourcePort_Pri, destPort_Pri, 
                                            new_sport_Pri, depth_C, host_C, 
                                            hidx_Co, host_idx_Co, pidx_Co, 
                                            port_idx_Co, connhost, port, 
                                            host_Co, hidx_Con, host_idx, pidx, 
                                            port_idx, depth_Di, ip_D, host_Di, 
                                            connDomain, cidx, conn_Dis, 
                                            depth_Pu, pkt_Pu, ipkt_Pu, 
                                            entry_Pu, conn_Pub, hostMarker_Pu, 
                                            ip_idx_Pu, ipidx_Pu, ip_Pub, 
                                            host_Pub, depth_Pri, pkt_PrivTo, 
                                            conn_Priv, hostMarker_PrivTo, 
                                            daddr_Priv, hostidx_Priv, 
                                            hidx_PrivT, otherEntry_Priv, 
                                            i_Priv, indicies_Priv, 
                                            portDomain_Priv, sourcePort_Priv, 
                                            destPort_Priv, new_sport_Priv, 
                                            good, depth_E, i_E, j_, ip_E, 
                                            host_E, indecies_, depth_Ev, i_Ev, 
                                            j_E, ip_Ev, host_Ev, indecies_E, 
                                            i_C, i_Ch, depth_Pub, pkt_Pub, 
                                            ipkt_Pub, entry_Pub, conn_PubT, 
                                            hostMarker_Pub, ip_idx_Pub, 
                                            ipidx_Pub, ip_PubT, host_PubT, 
                                            depth_Priv, pkt_PrivToP, 
                                            conn_PrivT, hostMarker_PrivToP, 
                                            daddr, hostidx, hidx, otherEntry, 
                                            i_PrivT, indicies, portDomain, 
                                            sourcePort, destPort, new_sport, 
                                            depth_PubT, pkt, ipkt, entry, 
                                            conn_PubTo, hostMarker, ip_idx, 
                                            ipidx, ip_PubTo, host_PubTo, depth, 
                                            i_Eve, j, ip_Eve, host_Eve, 
                                            indecies, i, aa >>

privtopubPkt_(self) == /\ pc[self] = "privtopubPkt_"
                       /\ pkt_Pr' = [pkt_Pr EXCEPT ![self] = [saddr |->pkt_Pr[self].daddr, sport |-> pkt_Pr[self].dport,
                                                              daddr |-> N, dport |-> pkt_Pr[self].sport,
                                                              host_marker |-> hostMarker_Pr[self]]]
                       /\ SendQueue' = Append(SendQueue, pkt_Pr'[self])
                       /\ pc' = [pc EXCEPT ![self] = "privtopubMan2Ret_"]
                       /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, 
                                       Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, 
                                       Ll, Mm, Nn, Oo, Pp, Qq, Rr, Ss, Tt, Uu, 
                                       Vv, Ww, Xx, Yy, Zz, H1, H2, MaxPorts, 
                                       EP1, PortMap1, EP2, PortMap2, TableFull, 
                                       EvictionReroute, PortScanInv, ATIPInv, 
                                       MaxTableSize, hosts, FreeHosts, 
                                       UsedHosts, Ports, ExtraPorts, 
                                       ExtraExtraPorts, T, FreeIPs, PrivIPs, 
                                       PubIPs, PortSpace, UsedIPs, Connections, 
                                       RcvQueue, MAX, Marker1, Marker2, 
                                       CmdConnect, CmdDisconnect, 
                                       PortSpaceFull, stack, depth_, host_, 
                                       hidx_, host_idx_, pidx_, port_idx_, 
                                       depth_D, ip_, host_D, connDomain_, 
                                       cidx_, conn_, host_Con, ip_C, hidx_C, 
                                       host_idx_C, pidx_C, port_idx_C, 
                                       host_Dis, ip_Di, connDomain_D, cidx_D, 
                                       conn_D, host, ip, connDomain_Di, 
                                       cidx_Di, conn_Di, depth_P, pkt_, ipkt_, 
                                       entry_, conn_P, hostMarker_, ip_idx_, 
                                       ipidx_, ip_P, host_P, pkt_P, ipkt_P, 
                                       entry_P, conn_Pu, hostMarker_P, 
                                       ip_idx_P, ipidx_P, ip_Pu, host_Pu, IP, 
                                       conn_PrivTo, sport_, dstAddr_, dport_, 
                                       hostMarker_Pr, daddr_, hostidx_, hidx_P, 
                                       otherEntry_, i_, indicies_, portDomain_, 
                                       sourcePort_, destPort_, new_sport_, 
                                       conn, sport, dstAddr, dport, pkt_Pri, 
                                       hostMarker_Pri, daddr_P, hostidx_P, 
                                       hidx_Pr, otherEntry_P, i_P, indicies_P, 
                                       portDomain_P, sourcePort_P, destPort_P, 
                                       new_sport_P, depth_Pr, pkt_Priv, 
                                       conn_Pr, hostMarker_Priv, daddr_Pr, 
                                       hostidx_Pr, hidx_Pri, otherEntry_Pr, 
                                       i_Pr, indicies_Pr, portDomain_Pr, 
                                       sourcePort_Pr, destPort_Pr, 
                                       new_sport_Pr, pkt_PrivT, conn_Pri, 
                                       hostMarker_PrivT, daddr_Pri, 
                                       hostidx_Pri, hidx_Priv, otherEntry_Pri, 
                                       i_Pri, indicies_Pri, portDomain_Pri, 
                                       sourcePort_Pri, destPort_Pri, 
                                       new_sport_Pri, depth_C, host_C, hidx_Co, 
                                       host_idx_Co, pidx_Co, port_idx_Co, 
                                       connhost, port, host_Co, hidx_Con, 
                                       host_idx, pidx, port_idx, depth_Di, 
                                       ip_D, host_Di, connDomain, cidx, 
                                       conn_Dis, depth_Pu, pkt_Pu, ipkt_Pu, 
                                       entry_Pu, conn_Pub, hostMarker_Pu, 
                                       ip_idx_Pu, ipidx_Pu, ip_Pub, host_Pub, 
                                       depth_Pri, pkt_PrivTo, conn_Priv, 
                                       hostMarker_PrivTo, daddr_Priv, 
                                       hostidx_Priv, hidx_PrivT, 
                                       otherEntry_Priv, i_Priv, indicies_Priv, 
                                       portDomain_Priv, sourcePort_Priv, 
                                       destPort_Priv, new_sport_Priv, good, 
                                       depth_E, i_E, j_, ip_E, host_E, 
                                       indecies_, depth_Ev, i_Ev, j_E, ip_Ev, 
                                       host_Ev, indecies_E, i_C, i_Ch, 
                                       depth_Pub, pkt_Pub, ipkt_Pub, entry_Pub, 
                                       conn_PubT, hostMarker_Pub, ip_idx_Pub, 
                                       ipidx_Pub, ip_PubT, host_PubT, 
                                       depth_Priv, pkt_PrivToP, conn_PrivT, 
                                       hostMarker_PrivToP, daddr, hostidx, 
                                       hidx, otherEntry, i_PrivT, indicies, 
                                       portDomain, sourcePort, destPort, 
                                       new_sport, depth_PubT, pkt, ipkt, entry, 
                                       conn_PubTo, hostMarker, ip_idx, ipidx, 
                                       ip_PubTo, host_PubTo, depth, i_Eve, j, 
                                       ip_Eve, host_Eve, indecies, i, aa >>

privtopubMan2Ret_(self) == /\ pc[self] = "privtopubMan2Ret_"
                           /\ pc' = [pc EXCEPT ![self] = Head(stack[self]).pc]
                           /\ pkt_Pr' = [pkt_Pr EXCEPT ![self] = Head(stack[self]).pkt_Pr]
                           /\ hostMarker_Pr' = [hostMarker_Pr EXCEPT ![self] = Head(stack[self]).hostMarker_Pr]
                           /\ daddr_' = [daddr_ EXCEPT ![self] = Head(stack[self]).daddr_]
                           /\ hostidx_' = [hostidx_ EXCEPT ![self] = Head(stack[self]).hostidx_]
                           /\ hidx_P' = [hidx_P EXCEPT ![self] = Head(stack[self]).hidx_P]
                           /\ otherEntry_' = [otherEntry_ EXCEPT ![self] = Head(stack[self]).otherEntry_]
                           /\ i_' = [i_ EXCEPT ![self] = Head(stack[self]).i_]
                           /\ indicies_' = [indicies_ EXCEPT ![self] = Head(stack[self]).indicies_]
                           /\ portDomain_' = [portDomain_ EXCEPT ![self] = Head(stack[self]).portDomain_]
                           /\ sourcePort_' = [sourcePort_ EXCEPT ![self] = Head(stack[self]).sourcePort_]
                           /\ destPort_' = [destPort_ EXCEPT ![self] = Head(stack[self]).destPort_]
                           /\ new_sport_' = [new_sport_ EXCEPT ![self] = Head(stack[self]).new_sport_]
                           /\ conn_PrivTo' = [conn_PrivTo EXCEPT ![self] = Head(stack[self]).conn_PrivTo]
                           /\ sport_' = [sport_ EXCEPT ![self] = Head(stack[self]).sport_]
                           /\ dstAddr_' = [dstAddr_ EXCEPT ![self] = Head(stack[self]).dstAddr_]
                           /\ dport_' = [dport_ EXCEPT ![self] = Head(stack[self]).dport_]
                           /\ stack' = [stack EXCEPT ![self] = Tail(stack[self])]
                           /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, 
                                           Aa, Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, 
                                           Jj, Kk, Ll, Mm, Nn, Oo, Pp, Qq, Rr, 
                                           Ss, Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, 
                                           H2, MaxPorts, EP1, PortMap1, EP2, 
                                           PortMap2, TableFull, 
                                           EvictionReroute, PortScanInv, 
                                           ATIPInv, MaxTableSize, hosts, 
                                           FreeHosts, UsedHosts, Ports, 
                                           ExtraPorts, ExtraExtraPorts, T, 
                                           FreeIPs, PrivIPs, PubIPs, PortSpace, 
                                           UsedIPs, Connections, SendQueue, 
                                           RcvQueue, MAX, Marker1, Marker2, 
                                           CmdConnect, CmdDisconnect, 
                                           PortSpaceFull, depth_, host_, hidx_, 
                                           host_idx_, pidx_, port_idx_, 
                                           depth_D, ip_, host_D, connDomain_, 
                                           cidx_, conn_, host_Con, ip_C, 
                                           hidx_C, host_idx_C, pidx_C, 
                                           port_idx_C, host_Dis, ip_Di, 
                                           connDomain_D, cidx_D, conn_D, host, 
                                           ip, connDomain_Di, cidx_Di, conn_Di, 
                                           depth_P, pkt_, ipkt_, entry_, 
                                           conn_P, hostMarker_, ip_idx_, 
                                           ipidx_, ip_P, host_P, pkt_P, ipkt_P, 
                                           entry_P, conn_Pu, hostMarker_P, 
                                           ip_idx_P, ipidx_P, ip_Pu, host_Pu, 
                                           IP, conn, sport, dstAddr, dport, 
                                           pkt_Pri, hostMarker_Pri, daddr_P, 
                                           hostidx_P, hidx_Pr, otherEntry_P, 
                                           i_P, indicies_P, portDomain_P, 
                                           sourcePort_P, destPort_P, 
                                           new_sport_P, depth_Pr, pkt_Priv, 
                                           conn_Pr, hostMarker_Priv, daddr_Pr, 
                                           hostidx_Pr, hidx_Pri, otherEntry_Pr, 
                                           i_Pr, indicies_Pr, portDomain_Pr, 
                                           sourcePort_Pr, destPort_Pr, 
                                           new_sport_Pr, pkt_PrivT, conn_Pri, 
                                           hostMarker_PrivT, daddr_Pri, 
                                           hostidx_Pri, hidx_Priv, 
                                           otherEntry_Pri, i_Pri, indicies_Pri, 
                                           portDomain_Pri, sourcePort_Pri, 
                                           destPort_Pri, new_sport_Pri, 
                                           depth_C, host_C, hidx_Co, 
                                           host_idx_Co, pidx_Co, port_idx_Co, 
                                           connhost, port, host_Co, hidx_Con, 
                                           host_idx, pidx, port_idx, depth_Di, 
                                           ip_D, host_Di, connDomain, cidx, 
                                           conn_Dis, depth_Pu, pkt_Pu, ipkt_Pu, 
                                           entry_Pu, conn_Pub, hostMarker_Pu, 
                                           ip_idx_Pu, ipidx_Pu, ip_Pub, 
                                           host_Pub, depth_Pri, pkt_PrivTo, 
                                           conn_Priv, hostMarker_PrivTo, 
                                           daddr_Priv, hostidx_Priv, 
                                           hidx_PrivT, otherEntry_Priv, i_Priv, 
                                           indicies_Priv, portDomain_Priv, 
                                           sourcePort_Priv, destPort_Priv, 
                                           new_sport_Priv, good, depth_E, i_E, 
                                           j_, ip_E, host_E, indecies_, 
                                           depth_Ev, i_Ev, j_E, ip_Ev, host_Ev, 
                                           indecies_E, i_C, i_Ch, depth_Pub, 
                                           pkt_Pub, ipkt_Pub, entry_Pub, 
                                           conn_PubT, hostMarker_Pub, 
                                           ip_idx_Pub, ipidx_Pub, ip_PubT, 
                                           host_PubT, depth_Priv, pkt_PrivToP, 
                                           conn_PrivT, hostMarker_PrivToP, 
                                           daddr, hostidx, hidx, otherEntry, 
                                           i_PrivT, indicies, portDomain, 
                                           sourcePort, destPort, new_sport, 
                                           depth_PubT, pkt, ipkt, entry, 
                                           conn_PubTo, hostMarker, ip_idx, 
                                           ipidx, ip_PubTo, host_PubTo, depth, 
                                           i_Eve, j, ip_Eve, host_Eve, 
                                           indecies, i, aa >>

PrivToPubMan2(self) == privtopubManStart_(self)
                          \/ privtopubMan2Dport_(self)
                          \/ privtoPubMan2AddT_(self)
                          \/ privtopubPkt_(self) \/ privtopubMan2Ret_(self)

privtopubManStart_P(self) == /\ pc[self] = "privtopubManStart_P"
                             /\ IF Len (Connections) > 0
                                   THEN /\ sourcePort_P' = [sourcePort_P EXCEPT ![self] = sport[self]]
                                        /\ pc' = [pc EXCEPT ![self] = "privtopubMan2Dport"]
                                   ELSE /\ pc' = [pc EXCEPT ![self] = "privtopubMan2Ret"]
                                        /\ UNCHANGED sourcePort_P
                             /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, 
                                             Aa, Bb, Cc, Dd, Ee, Ff, Gg, Hh, 
                                             Ii, Jj, Kk, Ll, Mm, Nn, Oo, Pp, 
                                             Qq, Rr, Ss, Tt, Uu, Vv, Ww, Xx, 
                                             Yy, Zz, H1, H2, MaxPorts, EP1, 
                                             PortMap1, EP2, PortMap2, 
                                             TableFull, EvictionReroute, 
                                             PortScanInv, ATIPInv, 
                                             MaxTableSize, hosts, FreeHosts, 
                                             UsedHosts, Ports, ExtraPorts, 
                                             ExtraExtraPorts, T, FreeIPs, 
                                             PrivIPs, PubIPs, PortSpace, 
                                             UsedIPs, Connections, SendQueue, 
                                             RcvQueue, MAX, Marker1, Marker2, 
                                             CmdConnect, CmdDisconnect, 
                                             PortSpaceFull, stack, depth_, 
                                             host_, hidx_, host_idx_, pidx_, 
                                             port_idx_, depth_D, ip_, host_D, 
                                             connDomain_, cidx_, conn_, 
                                             host_Con, ip_C, hidx_C, 
                                             host_idx_C, pidx_C, port_idx_C, 
                                             host_Dis, ip_Di, connDomain_D, 
                                             cidx_D, conn_D, host, ip, 
                                             connDomain_Di, cidx_Di, conn_Di, 
                                             depth_P, pkt_, ipkt_, entry_, 
                                             conn_P, hostMarker_, ip_idx_, 
                                             ipidx_, ip_P, host_P, pkt_P, 
                                             ipkt_P, entry_P, conn_Pu, 
                                             hostMarker_P, ip_idx_P, ipidx_P, 
                                             ip_Pu, host_Pu, IP, conn_PrivTo, 
                                             sport_, dstAddr_, dport_, pkt_Pr, 
                                             hostMarker_Pr, daddr_, hostidx_, 
                                             hidx_P, otherEntry_, i_, 
                                             indicies_, portDomain_, 
                                             sourcePort_, destPort_, 
                                             new_sport_, conn, sport, dstAddr, 
                                             dport, pkt_Pri, hostMarker_Pri, 
                                             daddr_P, hostidx_P, hidx_Pr, 
                                             otherEntry_P, i_P, indicies_P, 
                                             portDomain_P, destPort_P, 
                                             new_sport_P, depth_Pr, pkt_Priv, 
                                             conn_Pr, hostMarker_Priv, 
                                             daddr_Pr, hostidx_Pr, hidx_Pri, 
                                             otherEntry_Pr, i_Pr, indicies_Pr, 
                                             portDomain_Pr, sourcePort_Pr, 
                                             destPort_Pr, new_sport_Pr, 
                                             pkt_PrivT, conn_Pri, 
                                             hostMarker_PrivT, daddr_Pri, 
                                             hostidx_Pri, hidx_Priv, 
                                             otherEntry_Pri, i_Pri, 
                                             indicies_Pri, portDomain_Pri, 
                                             sourcePort_Pri, destPort_Pri, 
                                             new_sport_Pri, depth_C, host_C, 
                                             hidx_Co, host_idx_Co, pidx_Co, 
                                             port_idx_Co, connhost, port, 
                                             host_Co, hidx_Con, host_idx, pidx, 
                                             port_idx, depth_Di, ip_D, host_Di, 
                                             connDomain, cidx, conn_Dis, 
                                             depth_Pu, pkt_Pu, ipkt_Pu, 
                                             entry_Pu, conn_Pub, hostMarker_Pu, 
                                             ip_idx_Pu, ipidx_Pu, ip_Pub, 
                                             host_Pub, depth_Pri, pkt_PrivTo, 
                                             conn_Priv, hostMarker_PrivTo, 
                                             daddr_Priv, hostidx_Priv, 
                                             hidx_PrivT, otherEntry_Priv, 
                                             i_Priv, indicies_Priv, 
                                             portDomain_Priv, sourcePort_Priv, 
                                             destPort_Priv, new_sport_Priv, 
                                             good, depth_E, i_E, j_, ip_E, 
                                             host_E, indecies_, depth_Ev, i_Ev, 
                                             j_E, ip_Ev, host_Ev, indecies_E, 
                                             i_C, i_Ch, depth_Pub, pkt_Pub, 
                                             ipkt_Pub, entry_Pub, conn_PubT, 
                                             hostMarker_Pub, ip_idx_Pub, 
                                             ipidx_Pub, ip_PubT, host_PubT, 
                                             depth_Priv, pkt_PrivToP, 
                                             conn_PrivT, hostMarker_PrivToP, 
                                             daddr, hostidx, hidx, otherEntry, 
                                             i_PrivT, indicies, portDomain, 
                                             sourcePort, destPort, new_sport, 
                                             depth_PubT, pkt, ipkt, entry, 
                                             conn_PubTo, hostMarker, ip_idx, 
                                             ipidx, ip_PubTo, host_PubTo, 
                                             depth, i_Eve, j, ip_Eve, host_Eve, 
                                             indecies, i, aa >>

privtopubMan2Dport(self) == /\ pc[self] = "privtopubMan2Dport"
                            /\ destPort_P' = [destPort_P EXCEPT ![self] = dport[self]]
                            /\ daddr_P' = [daddr_P EXCEPT ![self] = dstAddr[self]]
                            /\ PrintT(<<"PrivToPub - Conn: ", conn[self]>>)
                            /\ hostMarker_Pri' = [hostMarker_Pri EXCEPT ![self] = Head(Tail(conn[self]))]
                            /\ pkt_Pri' = [pkt_Pri EXCEPT ![self] = [saddr |-> Head(conn[self]), sport |-> sourcePort_P[self],
                                                                     daddr |-> daddr_P'[self], dport |-> destPort_P'[self],
                                                                     host_marker |-> hostMarker_Pri'[self]
                                                                    ]]
                            /\ PrintT(<<"PrivToPubMan - pkt: ", conn[self], pkt_Pri'[self]>>)
                            /\ entry' = [entry EXCEPT ![self] = [host_marker |-> hostMarker_Pri'[self],
                                                                 orig |-> [saddr |-> pkt_Pri'[self].saddr, sport |-> pkt_Pri'[self].sport,
                                                                           daddr |-> pkt_Pri'[self].daddr, dport |-> pkt_Pri'[self].dport],
                                                                 reply |-> [saddr |-> pkt_Pri'[self].daddr, sport |-> pkt_Pri'[self].dport,
                                                                            daddr |-> E,  dport |-> pkt_Pri'[self].sport ]]]
                            /\ otherEntry_P' = [otherEntry_P EXCEPT ![self] = SelectSeq(T, LAMBDA k: k.reply.saddr=pkt_Pri'[self].daddr /\ k.reply.sport=pkt_Pri'[self].dport /\
                                                                                                     k.reply.daddr=E /\ k.reply.dport=pkt_Pri'[self].sport)]
                            /\ PrintT(<<"PrivToPub - T", T, otherEntry_P'[self], pkt_Pri'[self]>>)
                            /\ IF Len(otherEntry_P'[self]) > 0
                                  THEN /\ T' = SelectSeq(T, LAMBDA e: ~(e.reply.saddr=pkt_Pri'[self].daddr /\ e.reply.sport=pkt_Pri'[self].dport /\
                                                                        e.reply.daddr=E /\ e.reply.dport=pkt_Pri'[self].sport) )
                                  ELSE /\ TRUE
                                       /\ T' = T
                            /\ pc' = [pc EXCEPT ![self] = "privtoPubMan2AddT"]
                            /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, 
                                            Aa, Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, 
                                            Jj, Kk, Ll, Mm, Nn, Oo, Pp, Qq, Rr, 
                                            Ss, Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, 
                                            H2, MaxPorts, EP1, PortMap1, EP2, 
                                            PortMap2, TableFull, 
                                            EvictionReroute, PortScanInv, 
                                            ATIPInv, MaxTableSize, hosts, 
                                            FreeHosts, UsedHosts, Ports, 
                                            ExtraPorts, ExtraExtraPorts, 
                                            FreeIPs, PrivIPs, PubIPs, 
                                            PortSpace, UsedIPs, Connections, 
                                            SendQueue, RcvQueue, MAX, Marker1, 
                                            Marker2, CmdConnect, CmdDisconnect, 
                                            PortSpaceFull, stack, depth_, 
                                            host_, hidx_, host_idx_, pidx_, 
                                            port_idx_, depth_D, ip_, host_D, 
                                            connDomain_, cidx_, conn_, 
                                            host_Con, ip_C, hidx_C, host_idx_C, 
                                            pidx_C, port_idx_C, host_Dis, 
                                            ip_Di, connDomain_D, cidx_D, 
                                            conn_D, host, ip, connDomain_Di, 
                                            cidx_Di, conn_Di, depth_P, pkt_, 
                                            ipkt_, entry_, conn_P, hostMarker_, 
                                            ip_idx_, ipidx_, ip_P, host_P, 
                                            pkt_P, ipkt_P, entry_P, conn_Pu, 
                                            hostMarker_P, ip_idx_P, ipidx_P, 
                                            ip_Pu, host_Pu, IP, conn_PrivTo, 
                                            sport_, dstAddr_, dport_, pkt_Pr, 
                                            hostMarker_Pr, daddr_, hostidx_, 
                                            hidx_P, otherEntry_, i_, indicies_, 
                                            portDomain_, sourcePort_, 
                                            destPort_, new_sport_, conn, sport, 
                                            dstAddr, dport, hostidx_P, hidx_Pr, 
                                            i_P, indicies_P, portDomain_P, 
                                            sourcePort_P, new_sport_P, 
                                            depth_Pr, pkt_Priv, conn_Pr, 
                                            hostMarker_Priv, daddr_Pr, 
                                            hostidx_Pr, hidx_Pri, 
                                            otherEntry_Pr, i_Pr, indicies_Pr, 
                                            portDomain_Pr, sourcePort_Pr, 
                                            destPort_Pr, new_sport_Pr, 
                                            pkt_PrivT, conn_Pri, 
                                            hostMarker_PrivT, daddr_Pri, 
                                            hostidx_Pri, hidx_Priv, 
                                            otherEntry_Pri, i_Pri, 
                                            indicies_Pri, portDomain_Pri, 
                                            sourcePort_Pri, destPort_Pri, 
                                            new_sport_Pri, depth_C, host_C, 
                                            hidx_Co, host_idx_Co, pidx_Co, 
                                            port_idx_Co, connhost, port, 
                                            host_Co, hidx_Con, host_idx, pidx, 
                                            port_idx, depth_Di, ip_D, host_Di, 
                                            connDomain, cidx, conn_Dis, 
                                            depth_Pu, pkt_Pu, ipkt_Pu, 
                                            entry_Pu, conn_Pub, hostMarker_Pu, 
                                            ip_idx_Pu, ipidx_Pu, ip_Pub, 
                                            host_Pub, depth_Pri, pkt_PrivTo, 
                                            conn_Priv, hostMarker_PrivTo, 
                                            daddr_Priv, hostidx_Priv, 
                                            hidx_PrivT, otherEntry_Priv, 
                                            i_Priv, indicies_Priv, 
                                            portDomain_Priv, sourcePort_Priv, 
                                            destPort_Priv, new_sport_Priv, 
                                            good, depth_E, i_E, j_, ip_E, 
                                            host_E, indecies_, depth_Ev, i_Ev, 
                                            j_E, ip_Ev, host_Ev, indecies_E, 
                                            i_C, i_Ch, depth_Pub, pkt_Pub, 
                                            ipkt_Pub, entry_Pub, conn_PubT, 
                                            hostMarker_Pub, ip_idx_Pub, 
                                            ipidx_Pub, ip_PubT, host_PubT, 
                                            depth_Priv, pkt_PrivToP, 
                                            conn_PrivT, hostMarker_PrivToP, 
                                            daddr, hostidx, hidx, otherEntry, 
                                            i_PrivT, indicies, portDomain, 
                                            sourcePort, destPort, new_sport, 
                                            depth_PubT, pkt, ipkt, conn_PubTo, 
                                            hostMarker, ip_idx, ipidx, 
                                            ip_PubTo, host_PubTo, depth, i_Eve, 
                                            j, ip_Eve, host_Eve, indecies, i, 
                                            aa >>

privtoPubMan2AddT(self) == /\ pc[self] = "privtoPubMan2AddT"
                           /\ T' = Append(T, entry[self])
                           /\ pc' = [pc EXCEPT ![self] = "privtopubPkt_P"]
                           /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, 
                                           Aa, Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, 
                                           Jj, Kk, Ll, Mm, Nn, Oo, Pp, Qq, Rr, 
                                           Ss, Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, 
                                           H2, MaxPorts, EP1, PortMap1, EP2, 
                                           PortMap2, TableFull, 
                                           EvictionReroute, PortScanInv, 
                                           ATIPInv, MaxTableSize, hosts, 
                                           FreeHosts, UsedHosts, Ports, 
                                           ExtraPorts, ExtraExtraPorts, 
                                           FreeIPs, PrivIPs, PubIPs, PortSpace, 
                                           UsedIPs, Connections, SendQueue, 
                                           RcvQueue, MAX, Marker1, Marker2, 
                                           CmdConnect, CmdDisconnect, 
                                           PortSpaceFull, stack, depth_, host_, 
                                           hidx_, host_idx_, pidx_, port_idx_, 
                                           depth_D, ip_, host_D, connDomain_, 
                                           cidx_, conn_, host_Con, ip_C, 
                                           hidx_C, host_idx_C, pidx_C, 
                                           port_idx_C, host_Dis, ip_Di, 
                                           connDomain_D, cidx_D, conn_D, host, 
                                           ip, connDomain_Di, cidx_Di, conn_Di, 
                                           depth_P, pkt_, ipkt_, entry_, 
                                           conn_P, hostMarker_, ip_idx_, 
                                           ipidx_, ip_P, host_P, pkt_P, ipkt_P, 
                                           entry_P, conn_Pu, hostMarker_P, 
                                           ip_idx_P, ipidx_P, ip_Pu, host_Pu, 
                                           IP, conn_PrivTo, sport_, dstAddr_, 
                                           dport_, pkt_Pr, hostMarker_Pr, 
                                           daddr_, hostidx_, hidx_P, 
                                           otherEntry_, i_, indicies_, 
                                           portDomain_, sourcePort_, destPort_, 
                                           new_sport_, conn, sport, dstAddr, 
                                           dport, pkt_Pri, hostMarker_Pri, 
                                           daddr_P, hostidx_P, hidx_Pr, 
                                           otherEntry_P, i_P, indicies_P, 
                                           portDomain_P, sourcePort_P, 
                                           destPort_P, new_sport_P, depth_Pr, 
                                           pkt_Priv, conn_Pr, hostMarker_Priv, 
                                           daddr_Pr, hostidx_Pr, hidx_Pri, 
                                           otherEntry_Pr, i_Pr, indicies_Pr, 
                                           portDomain_Pr, sourcePort_Pr, 
                                           destPort_Pr, new_sport_Pr, 
                                           pkt_PrivT, conn_Pri, 
                                           hostMarker_PrivT, daddr_Pri, 
                                           hostidx_Pri, hidx_Priv, 
                                           otherEntry_Pri, i_Pri, indicies_Pri, 
                                           portDomain_Pri, sourcePort_Pri, 
                                           destPort_Pri, new_sport_Pri, 
                                           depth_C, host_C, hidx_Co, 
                                           host_idx_Co, pidx_Co, port_idx_Co, 
                                           connhost, port, host_Co, hidx_Con, 
                                           host_idx, pidx, port_idx, depth_Di, 
                                           ip_D, host_Di, connDomain, cidx, 
                                           conn_Dis, depth_Pu, pkt_Pu, ipkt_Pu, 
                                           entry_Pu, conn_Pub, hostMarker_Pu, 
                                           ip_idx_Pu, ipidx_Pu, ip_Pub, 
                                           host_Pub, depth_Pri, pkt_PrivTo, 
                                           conn_Priv, hostMarker_PrivTo, 
                                           daddr_Priv, hostidx_Priv, 
                                           hidx_PrivT, otherEntry_Priv, i_Priv, 
                                           indicies_Priv, portDomain_Priv, 
                                           sourcePort_Priv, destPort_Priv, 
                                           new_sport_Priv, good, depth_E, i_E, 
                                           j_, ip_E, host_E, indecies_, 
                                           depth_Ev, i_Ev, j_E, ip_Ev, host_Ev, 
                                           indecies_E, i_C, i_Ch, depth_Pub, 
                                           pkt_Pub, ipkt_Pub, entry_Pub, 
                                           conn_PubT, hostMarker_Pub, 
                                           ip_idx_Pub, ipidx_Pub, ip_PubT, 
                                           host_PubT, depth_Priv, pkt_PrivToP, 
                                           conn_PrivT, hostMarker_PrivToP, 
                                           daddr, hostidx, hidx, otherEntry, 
                                           i_PrivT, indicies, portDomain, 
                                           sourcePort, destPort, new_sport, 
                                           depth_PubT, pkt, ipkt, entry, 
                                           conn_PubTo, hostMarker, ip_idx, 
                                           ipidx, ip_PubTo, host_PubTo, depth, 
                                           i_Eve, j, ip_Eve, host_Eve, 
                                           indecies, i, aa >>

privtopubPkt_P(self) == /\ pc[self] = "privtopubPkt_P"
                        /\ pkt_Pri' = [pkt_Pri EXCEPT ![self] = [saddr |->pkt_Pri[self].daddr, sport |-> pkt_Pri[self].dport,
                                                                 daddr |-> E, dport |-> pkt_Pri[self].sport,
                                                                 host_marker |-> hostMarker_Pri[self]]]
                        /\ SendQueue' = Append(SendQueue, pkt_Pri'[self])
                        /\ pc' = [pc EXCEPT ![self] = "privtopubMan2Ret"]
                        /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, 
                                        Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, 
                                        Ll, Mm, Nn, Oo, Pp, Qq, Rr, Ss, Tt, Uu, 
                                        Vv, Ww, Xx, Yy, Zz, H1, H2, MaxPorts, 
                                        EP1, PortMap1, EP2, PortMap2, 
                                        TableFull, EvictionReroute, 
                                        PortScanInv, ATIPInv, MaxTableSize, 
                                        hosts, FreeHosts, UsedHosts, Ports, 
                                        ExtraPorts, ExtraExtraPorts, T, 
                                        FreeIPs, PrivIPs, PubIPs, PortSpace, 
                                        UsedIPs, Connections, RcvQueue, MAX, 
                                        Marker1, Marker2, CmdConnect, 
                                        CmdDisconnect, PortSpaceFull, stack, 
                                        depth_, host_, hidx_, host_idx_, pidx_, 
                                        port_idx_, depth_D, ip_, host_D, 
                                        connDomain_, cidx_, conn_, host_Con, 
                                        ip_C, hidx_C, host_idx_C, pidx_C, 
                                        port_idx_C, host_Dis, ip_Di, 
                                        connDomain_D, cidx_D, conn_D, host, ip, 
                                        connDomain_Di, cidx_Di, conn_Di, 
                                        depth_P, pkt_, ipkt_, entry_, conn_P, 
                                        hostMarker_, ip_idx_, ipidx_, ip_P, 
                                        host_P, pkt_P, ipkt_P, entry_P, 
                                        conn_Pu, hostMarker_P, ip_idx_P, 
                                        ipidx_P, ip_Pu, host_Pu, IP, 
                                        conn_PrivTo, sport_, dstAddr_, dport_, 
                                        pkt_Pr, hostMarker_Pr, daddr_, 
                                        hostidx_, hidx_P, otherEntry_, i_, 
                                        indicies_, portDomain_, sourcePort_, 
                                        destPort_, new_sport_, conn, sport, 
                                        dstAddr, dport, hostMarker_Pri, 
                                        daddr_P, hostidx_P, hidx_Pr, 
                                        otherEntry_P, i_P, indicies_P, 
                                        portDomain_P, sourcePort_P, destPort_P, 
                                        new_sport_P, depth_Pr, pkt_Priv, 
                                        conn_Pr, hostMarker_Priv, daddr_Pr, 
                                        hostidx_Pr, hidx_Pri, otherEntry_Pr, 
                                        i_Pr, indicies_Pr, portDomain_Pr, 
                                        sourcePort_Pr, destPort_Pr, 
                                        new_sport_Pr, pkt_PrivT, conn_Pri, 
                                        hostMarker_PrivT, daddr_Pri, 
                                        hostidx_Pri, hidx_Priv, otherEntry_Pri, 
                                        i_Pri, indicies_Pri, portDomain_Pri, 
                                        sourcePort_Pri, destPort_Pri, 
                                        new_sport_Pri, depth_C, host_C, 
                                        hidx_Co, host_idx_Co, pidx_Co, 
                                        port_idx_Co, connhost, port, host_Co, 
                                        hidx_Con, host_idx, pidx, port_idx, 
                                        depth_Di, ip_D, host_Di, connDomain, 
                                        cidx, conn_Dis, depth_Pu, pkt_Pu, 
                                        ipkt_Pu, entry_Pu, conn_Pub, 
                                        hostMarker_Pu, ip_idx_Pu, ipidx_Pu, 
                                        ip_Pub, host_Pub, depth_Pri, 
                                        pkt_PrivTo, conn_Priv, 
                                        hostMarker_PrivTo, daddr_Priv, 
                                        hostidx_Priv, hidx_PrivT, 
                                        otherEntry_Priv, i_Priv, indicies_Priv, 
                                        portDomain_Priv, sourcePort_Priv, 
                                        destPort_Priv, new_sport_Priv, good, 
                                        depth_E, i_E, j_, ip_E, host_E, 
                                        indecies_, depth_Ev, i_Ev, j_E, ip_Ev, 
                                        host_Ev, indecies_E, i_C, i_Ch, 
                                        depth_Pub, pkt_Pub, ipkt_Pub, 
                                        entry_Pub, conn_PubT, hostMarker_Pub, 
                                        ip_idx_Pub, ipidx_Pub, ip_PubT, 
                                        host_PubT, depth_Priv, pkt_PrivToP, 
                                        conn_PrivT, hostMarker_PrivToP, daddr, 
                                        hostidx, hidx, otherEntry, i_PrivT, 
                                        indicies, portDomain, sourcePort, 
                                        destPort, new_sport, depth_PubT, pkt, 
                                        ipkt, entry, conn_PubTo, hostMarker, 
                                        ip_idx, ipidx, ip_PubTo, host_PubTo, 
                                        depth, i_Eve, j, ip_Eve, host_Eve, 
                                        indecies, i, aa >>

privtopubMan2Ret(self) == /\ pc[self] = "privtopubMan2Ret"
                          /\ pc' = [pc EXCEPT ![self] = Head(stack[self]).pc]
                          /\ pkt_Pri' = [pkt_Pri EXCEPT ![self] = Head(stack[self]).pkt_Pri]
                          /\ hostMarker_Pri' = [hostMarker_Pri EXCEPT ![self] = Head(stack[self]).hostMarker_Pri]
                          /\ daddr_P' = [daddr_P EXCEPT ![self] = Head(stack[self]).daddr_P]
                          /\ hostidx_P' = [hostidx_P EXCEPT ![self] = Head(stack[self]).hostidx_P]
                          /\ hidx_Pr' = [hidx_Pr EXCEPT ![self] = Head(stack[self]).hidx_Pr]
                          /\ otherEntry_P' = [otherEntry_P EXCEPT ![self] = Head(stack[self]).otherEntry_P]
                          /\ i_P' = [i_P EXCEPT ![self] = Head(stack[self]).i_P]
                          /\ indicies_P' = [indicies_P EXCEPT ![self] = Head(stack[self]).indicies_P]
                          /\ portDomain_P' = [portDomain_P EXCEPT ![self] = Head(stack[self]).portDomain_P]
                          /\ sourcePort_P' = [sourcePort_P EXCEPT ![self] = Head(stack[self]).sourcePort_P]
                          /\ destPort_P' = [destPort_P EXCEPT ![self] = Head(stack[self]).destPort_P]
                          /\ new_sport_P' = [new_sport_P EXCEPT ![self] = Head(stack[self]).new_sport_P]
                          /\ conn' = [conn EXCEPT ![self] = Head(stack[self]).conn]
                          /\ sport' = [sport EXCEPT ![self] = Head(stack[self]).sport]
                          /\ dstAddr' = [dstAddr EXCEPT ![self] = Head(stack[self]).dstAddr]
                          /\ dport' = [dport EXCEPT ![self] = Head(stack[self]).dport]
                          /\ stack' = [stack EXCEPT ![self] = Tail(stack[self])]
                          /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, 
                                          Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, 
                                          Kk, Ll, Mm, Nn, Oo, Pp, Qq, Rr, Ss, 
                                          Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, H2, 
                                          MaxPorts, EP1, PortMap1, EP2, 
                                          PortMap2, TableFull, EvictionReroute, 
                                          PortScanInv, ATIPInv, MaxTableSize, 
                                          hosts, FreeHosts, UsedHosts, Ports, 
                                          ExtraPorts, ExtraExtraPorts, T, 
                                          FreeIPs, PrivIPs, PubIPs, PortSpace, 
                                          UsedIPs, Connections, SendQueue, 
                                          RcvQueue, MAX, Marker1, Marker2, 
                                          CmdConnect, CmdDisconnect, 
                                          PortSpaceFull, depth_, host_, hidx_, 
                                          host_idx_, pidx_, port_idx_, depth_D, 
                                          ip_, host_D, connDomain_, cidx_, 
                                          conn_, host_Con, ip_C, hidx_C, 
                                          host_idx_C, pidx_C, port_idx_C, 
                                          host_Dis, ip_Di, connDomain_D, 
                                          cidx_D, conn_D, host, ip, 
                                          connDomain_Di, cidx_Di, conn_Di, 
                                          depth_P, pkt_, ipkt_, entry_, conn_P, 
                                          hostMarker_, ip_idx_, ipidx_, ip_P, 
                                          host_P, pkt_P, ipkt_P, entry_P, 
                                          conn_Pu, hostMarker_P, ip_idx_P, 
                                          ipidx_P, ip_Pu, host_Pu, IP, 
                                          conn_PrivTo, sport_, dstAddr_, 
                                          dport_, pkt_Pr, hostMarker_Pr, 
                                          daddr_, hostidx_, hidx_P, 
                                          otherEntry_, i_, indicies_, 
                                          portDomain_, sourcePort_, destPort_, 
                                          new_sport_, depth_Pr, pkt_Priv, 
                                          conn_Pr, hostMarker_Priv, daddr_Pr, 
                                          hostidx_Pr, hidx_Pri, otherEntry_Pr, 
                                          i_Pr, indicies_Pr, portDomain_Pr, 
                                          sourcePort_Pr, destPort_Pr, 
                                          new_sport_Pr, pkt_PrivT, conn_Pri, 
                                          hostMarker_PrivT, daddr_Pri, 
                                          hostidx_Pri, hidx_Priv, 
                                          otherEntry_Pri, i_Pri, indicies_Pri, 
                                          portDomain_Pri, sourcePort_Pri, 
                                          destPort_Pri, new_sport_Pri, depth_C, 
                                          host_C, hidx_Co, host_idx_Co, 
                                          pidx_Co, port_idx_Co, connhost, port, 
                                          host_Co, hidx_Con, host_idx, pidx, 
                                          port_idx, depth_Di, ip_D, host_Di, 
                                          connDomain, cidx, conn_Dis, depth_Pu, 
                                          pkt_Pu, ipkt_Pu, entry_Pu, conn_Pub, 
                                          hostMarker_Pu, ip_idx_Pu, ipidx_Pu, 
                                          ip_Pub, host_Pub, depth_Pri, 
                                          pkt_PrivTo, conn_Priv, 
                                          hostMarker_PrivTo, daddr_Priv, 
                                          hostidx_Priv, hidx_PrivT, 
                                          otherEntry_Priv, i_Priv, 
                                          indicies_Priv, portDomain_Priv, 
                                          sourcePort_Priv, destPort_Priv, 
                                          new_sport_Priv, good, depth_E, i_E, 
                                          j_, ip_E, host_E, indecies_, 
                                          depth_Ev, i_Ev, j_E, ip_Ev, host_Ev, 
                                          indecies_E, i_C, i_Ch, depth_Pub, 
                                          pkt_Pub, ipkt_Pub, entry_Pub, 
                                          conn_PubT, hostMarker_Pub, 
                                          ip_idx_Pub, ipidx_Pub, ip_PubT, 
                                          host_PubT, depth_Priv, pkt_PrivToP, 
                                          conn_PrivT, hostMarker_PrivToP, 
                                          daddr, hostidx, hidx, otherEntry, 
                                          i_PrivT, indicies, portDomain, 
                                          sourcePort, destPort, new_sport, 
                                          depth_PubT, pkt, ipkt, entry, 
                                          conn_PubTo, hostMarker, ip_idx, 
                                          ipidx, ip_PubTo, host_PubTo, depth, 
                                          i_Eve, j, ip_Eve, host_Eve, indecies, 
                                          i, aa >>

PrivToPubManExit(self) == privtopubManStart_P(self)
                             \/ privtopubMan2Dport(self)
                             \/ privtoPubMan2AddT(self)
                             \/ privtopubPkt_P(self)
                             \/ privtopubMan2Ret(self)

privtopubV3_(self) == /\ pc[self] = "privtopubV3_"
                      /\ /\ depth' = [depth EXCEPT ![self] = depth_Pr[self]]
                         /\ stack' = [stack EXCEPT ![self] = << [ procedure |->  "EventSequenceATIP",
                                                                  pc        |->  "privtopubManStart_Pr",
                                                                  i_Eve     |->  i_Eve[self],
                                                                  j         |->  j[self],
                                                                  ip_Eve    |->  ip_Eve[self],
                                                                  host_Eve  |->  host_Eve[self],
                                                                  indecies  |->  indecies[self],
                                                                  depth     |->  depth[self] ] >>
                                                              \o stack[self]]
                      /\ i_Eve' = [i_Eve EXCEPT ![self] = defaultInitValue]
                      /\ j' = [j EXCEPT ![self] = defaultInitValue]
                      /\ ip_Eve' = [ip_Eve EXCEPT ![self] = defaultInitValue]
                      /\ host_Eve' = [host_Eve EXCEPT ![self] = defaultInitValue]
                      /\ indecies' = [indecies EXCEPT ![self] = defaultInitValue]
                      /\ pc' = [pc EXCEPT ![self] = "evtSeqStart"]
                      /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, Bb, 
                                      Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, Ll, 
                                      Mm, Nn, Oo, Pp, Qq, Rr, Ss, Tt, Uu, Vv, 
                                      Ww, Xx, Yy, Zz, H1, H2, MaxPorts, EP1, 
                                      PortMap1, EP2, PortMap2, TableFull, 
                                      EvictionReroute, PortScanInv, ATIPInv, 
                                      MaxTableSize, hosts, FreeHosts, 
                                      UsedHosts, Ports, ExtraPorts, 
                                      ExtraExtraPorts, T, FreeIPs, PrivIPs, 
                                      PubIPs, PortSpace, UsedIPs, Connections, 
                                      SendQueue, RcvQueue, MAX, Marker1, 
                                      Marker2, CmdConnect, CmdDisconnect, 
                                      PortSpaceFull, depth_, host_, hidx_, 
                                      host_idx_, pidx_, port_idx_, depth_D, 
                                      ip_, host_D, connDomain_, cidx_, conn_, 
                                      host_Con, ip_C, hidx_C, host_idx_C, 
                                      pidx_C, port_idx_C, host_Dis, ip_Di, 
                                      connDomain_D, cidx_D, conn_D, host, ip, 
                                      connDomain_Di, cidx_Di, conn_Di, depth_P, 
                                      pkt_, ipkt_, entry_, conn_P, hostMarker_, 
                                      ip_idx_, ipidx_, ip_P, host_P, pkt_P, 
                                      ipkt_P, entry_P, conn_Pu, hostMarker_P, 
                                      ip_idx_P, ipidx_P, ip_Pu, host_Pu, IP, 
                                      conn_PrivTo, sport_, dstAddr_, dport_, 
                                      pkt_Pr, hostMarker_Pr, daddr_, hostidx_, 
                                      hidx_P, otherEntry_, i_, indicies_, 
                                      portDomain_, sourcePort_, destPort_, 
                                      new_sport_, conn, sport, dstAddr, dport, 
                                      pkt_Pri, hostMarker_Pri, daddr_P, 
                                      hostidx_P, hidx_Pr, otherEntry_P, i_P, 
                                      indicies_P, portDomain_P, sourcePort_P, 
                                      destPort_P, new_sport_P, depth_Pr, 
                                      pkt_Priv, conn_Pr, hostMarker_Priv, 
                                      daddr_Pr, hostidx_Pr, hidx_Pri, 
                                      otherEntry_Pr, i_Pr, indicies_Pr, 
                                      portDomain_Pr, sourcePort_Pr, 
                                      destPort_Pr, new_sport_Pr, pkt_PrivT, 
                                      conn_Pri, hostMarker_PrivT, daddr_Pri, 
                                      hostidx_Pri, hidx_Priv, otherEntry_Pri, 
                                      i_Pri, indicies_Pri, portDomain_Pri, 
                                      sourcePort_Pri, destPort_Pri, 
                                      new_sport_Pri, depth_C, host_C, hidx_Co, 
                                      host_idx_Co, pidx_Co, port_idx_Co, 
                                      connhost, port, host_Co, hidx_Con, 
                                      host_idx, pidx, port_idx, depth_Di, ip_D, 
                                      host_Di, connDomain, cidx, conn_Dis, 
                                      depth_Pu, pkt_Pu, ipkt_Pu, entry_Pu, 
                                      conn_Pub, hostMarker_Pu, ip_idx_Pu, 
                                      ipidx_Pu, ip_Pub, host_Pub, depth_Pri, 
                                      pkt_PrivTo, conn_Priv, hostMarker_PrivTo, 
                                      daddr_Priv, hostidx_Priv, hidx_PrivT, 
                                      otherEntry_Priv, i_Priv, indicies_Priv, 
                                      portDomain_Priv, sourcePort_Priv, 
                                      destPort_Priv, new_sport_Priv, good, 
                                      depth_E, i_E, j_, ip_E, host_E, 
                                      indecies_, depth_Ev, i_Ev, j_E, ip_Ev, 
                                      host_Ev, indecies_E, i_C, i_Ch, 
                                      depth_Pub, pkt_Pub, ipkt_Pub, entry_Pub, 
                                      conn_PubT, hostMarker_Pub, ip_idx_Pub, 
                                      ipidx_Pub, ip_PubT, host_PubT, 
                                      depth_Priv, pkt_PrivToP, conn_PrivT, 
                                      hostMarker_PrivToP, daddr, hostidx, hidx, 
                                      otherEntry, i_PrivT, indicies, 
                                      portDomain, sourcePort, destPort, 
                                      new_sport, depth_PubT, pkt, ipkt, entry, 
                                      conn_PubTo, hostMarker, ip_idx, ipidx, 
                                      ip_PubTo, host_PubTo, i, aa >>

privtopubManStart_Pr(self) == /\ pc[self] = "privtopubManStart_Pr"
                              /\ IF Len (Connections) > 0
                                    THEN /\ indicies_Pr' = [indicies_Pr EXCEPT ![self] = DOMAIN Connections]
                                         /\ portDomain_Pr' = [portDomain_Pr EXCEPT ![self] = DOMAIN Ports]
                                         /\ sourcePort_Pr' = [sourcePort_Pr EXCEPT ![self] = CHOOSE pr \in portDomain_Pr'[self] : TRUE]
                                         /\ i_Pr' = [i_Pr EXCEPT ![self] = CHOOSE f \in indicies_Pr'[self] : TRUE]
                                         /\ PrintT(<<"PrivToPub - conn", indecies[self], conn_Pr[self], Connections>>)
                                         /\ pc' = [pc EXCEPT ![self] = "privtopubConn_"]
                                    ELSE /\ pc' = [pc EXCEPT ![self] = "privtopubRet_"]
                                         /\ UNCHANGED << i_Pr, indicies_Pr, 
                                                         portDomain_Pr, 
                                                         sourcePort_Pr >>
                              /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, 
                                              Aa, Bb, Cc, Dd, Ee, Ff, Gg, Hh, 
                                              Ii, Jj, Kk, Ll, Mm, Nn, Oo, Pp, 
                                              Qq, Rr, Ss, Tt, Uu, Vv, Ww, Xx, 
                                              Yy, Zz, H1, H2, MaxPorts, EP1, 
                                              PortMap1, EP2, PortMap2, 
                                              TableFull, EvictionReroute, 
                                              PortScanInv, ATIPInv, 
                                              MaxTableSize, hosts, FreeHosts, 
                                              UsedHosts, Ports, ExtraPorts, 
                                              ExtraExtraPorts, T, FreeIPs, 
                                              PrivIPs, PubIPs, PortSpace, 
                                              UsedIPs, Connections, SendQueue, 
                                              RcvQueue, MAX, Marker1, Marker2, 
                                              CmdConnect, CmdDisconnect, 
                                              PortSpaceFull, stack, depth_, 
                                              host_, hidx_, host_idx_, pidx_, 
                                              port_idx_, depth_D, ip_, host_D, 
                                              connDomain_, cidx_, conn_, 
                                              host_Con, ip_C, hidx_C, 
                                              host_idx_C, pidx_C, port_idx_C, 
                                              host_Dis, ip_Di, connDomain_D, 
                                              cidx_D, conn_D, host, ip, 
                                              connDomain_Di, cidx_Di, conn_Di, 
                                              depth_P, pkt_, ipkt_, entry_, 
                                              conn_P, hostMarker_, ip_idx_, 
                                              ipidx_, ip_P, host_P, pkt_P, 
                                              ipkt_P, entry_P, conn_Pu, 
                                              hostMarker_P, ip_idx_P, ipidx_P, 
                                              ip_Pu, host_Pu, IP, conn_PrivTo, 
                                              sport_, dstAddr_, dport_, pkt_Pr, 
                                              hostMarker_Pr, daddr_, hostidx_, 
                                              hidx_P, otherEntry_, i_, 
                                              indicies_, portDomain_, 
                                              sourcePort_, destPort_, 
                                              new_sport_, conn, sport, dstAddr, 
                                              dport, pkt_Pri, hostMarker_Pri, 
                                              daddr_P, hostidx_P, hidx_Pr, 
                                              otherEntry_P, i_P, indicies_P, 
                                              portDomain_P, sourcePort_P, 
                                              destPort_P, new_sport_P, 
                                              depth_Pr, pkt_Priv, conn_Pr, 
                                              hostMarker_Priv, daddr_Pr, 
                                              hostidx_Pr, hidx_Pri, 
                                              otherEntry_Pr, destPort_Pr, 
                                              new_sport_Pr, pkt_PrivT, 
                                              conn_Pri, hostMarker_PrivT, 
                                              daddr_Pri, hostidx_Pri, 
                                              hidx_Priv, otherEntry_Pri, i_Pri, 
                                              indicies_Pri, portDomain_Pri, 
                                              sourcePort_Pri, destPort_Pri, 
                                              new_sport_Pri, depth_C, host_C, 
                                              hidx_Co, host_idx_Co, pidx_Co, 
                                              port_idx_Co, connhost, port, 
                                              host_Co, hidx_Con, host_idx, 
                                              pidx, port_idx, depth_Di, ip_D, 
                                              host_Di, connDomain, cidx, 
                                              conn_Dis, depth_Pu, pkt_Pu, 
                                              ipkt_Pu, entry_Pu, conn_Pub, 
                                              hostMarker_Pu, ip_idx_Pu, 
                                              ipidx_Pu, ip_Pub, host_Pub, 
                                              depth_Pri, pkt_PrivTo, conn_Priv, 
                                              hostMarker_PrivTo, daddr_Priv, 
                                              hostidx_Priv, hidx_PrivT, 
                                              otherEntry_Priv, i_Priv, 
                                              indicies_Priv, portDomain_Priv, 
                                              sourcePort_Priv, destPort_Priv, 
                                              new_sport_Priv, good, depth_E, 
                                              i_E, j_, ip_E, host_E, indecies_, 
                                              depth_Ev, i_Ev, j_E, ip_Ev, 
                                              host_Ev, indecies_E, i_C, i_Ch, 
                                              depth_Pub, pkt_Pub, ipkt_Pub, 
                                              entry_Pub, conn_PubT, 
                                              hostMarker_Pub, ip_idx_Pub, 
                                              ipidx_Pub, ip_PubT, host_PubT, 
                                              depth_Priv, pkt_PrivToP, 
                                              conn_PrivT, hostMarker_PrivToP, 
                                              daddr, hostidx, hidx, otherEntry, 
                                              i_PrivT, indicies, portDomain, 
                                              sourcePort, destPort, new_sport, 
                                              depth_PubT, pkt, ipkt, entry, 
                                              conn_PubTo, hostMarker, ip_idx, 
                                              ipidx, ip_PubTo, host_PubTo, 
                                              depth, i_Eve, j, ip_Eve, 
                                              host_Eve, indecies, i, aa >>

privtopubConn_(self) == /\ pc[self] = "privtopubConn_"
                        /\ conn_Pr' = [conn_Pr EXCEPT ![self] = Connections[i_Pr[self]]]
                        /\ sourcePort_Pr' = [sourcePort_Pr EXCEPT ![self] = Ports[sourcePort_Pr[self]]]
                        /\ portDomain_Pr' = [portDomain_Pr EXCEPT ![self] = DOMAIN Ports]
                        /\ destPort_Pr' = [destPort_Pr EXCEPT ![self] = CHOOSE h \in portDomain_Pr'[self] : TRUE]
                        /\ pc' = [pc EXCEPT ![self] = "privtopubDport_"]
                        /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, 
                                        Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, 
                                        Ll, Mm, Nn, Oo, Pp, Qq, Rr, Ss, Tt, Uu, 
                                        Vv, Ww, Xx, Yy, Zz, H1, H2, MaxPorts, 
                                        EP1, PortMap1, EP2, PortMap2, 
                                        TableFull, EvictionReroute, 
                                        PortScanInv, ATIPInv, MaxTableSize, 
                                        hosts, FreeHosts, UsedHosts, Ports, 
                                        ExtraPorts, ExtraExtraPorts, T, 
                                        FreeIPs, PrivIPs, PubIPs, PortSpace, 
                                        UsedIPs, Connections, SendQueue, 
                                        RcvQueue, MAX, Marker1, Marker2, 
                                        CmdConnect, CmdDisconnect, 
                                        PortSpaceFull, stack, depth_, host_, 
                                        hidx_, host_idx_, pidx_, port_idx_, 
                                        depth_D, ip_, host_D, connDomain_, 
                                        cidx_, conn_, host_Con, ip_C, hidx_C, 
                                        host_idx_C, pidx_C, port_idx_C, 
                                        host_Dis, ip_Di, connDomain_D, cidx_D, 
                                        conn_D, host, ip, connDomain_Di, 
                                        cidx_Di, conn_Di, depth_P, pkt_, ipkt_, 
                                        entry_, conn_P, hostMarker_, ip_idx_, 
                                        ipidx_, ip_P, host_P, pkt_P, ipkt_P, 
                                        entry_P, conn_Pu, hostMarker_P, 
                                        ip_idx_P, ipidx_P, ip_Pu, host_Pu, IP, 
                                        conn_PrivTo, sport_, dstAddr_, dport_, 
                                        pkt_Pr, hostMarker_Pr, daddr_, 
                                        hostidx_, hidx_P, otherEntry_, i_, 
                                        indicies_, portDomain_, sourcePort_, 
                                        destPort_, new_sport_, conn, sport, 
                                        dstAddr, dport, pkt_Pri, 
                                        hostMarker_Pri, daddr_P, hostidx_P, 
                                        hidx_Pr, otherEntry_P, i_P, indicies_P, 
                                        portDomain_P, sourcePort_P, destPort_P, 
                                        new_sport_P, depth_Pr, pkt_Priv, 
                                        hostMarker_Priv, daddr_Pr, hostidx_Pr, 
                                        hidx_Pri, otherEntry_Pr, i_Pr, 
                                        indicies_Pr, new_sport_Pr, pkt_PrivT, 
                                        conn_Pri, hostMarker_PrivT, daddr_Pri, 
                                        hostidx_Pri, hidx_Priv, otherEntry_Pri, 
                                        i_Pri, indicies_Pri, portDomain_Pri, 
                                        sourcePort_Pri, destPort_Pri, 
                                        new_sport_Pri, depth_C, host_C, 
                                        hidx_Co, host_idx_Co, pidx_Co, 
                                        port_idx_Co, connhost, port, host_Co, 
                                        hidx_Con, host_idx, pidx, port_idx, 
                                        depth_Di, ip_D, host_Di, connDomain, 
                                        cidx, conn_Dis, depth_Pu, pkt_Pu, 
                                        ipkt_Pu, entry_Pu, conn_Pub, 
                                        hostMarker_Pu, ip_idx_Pu, ipidx_Pu, 
                                        ip_Pub, host_Pub, depth_Pri, 
                                        pkt_PrivTo, conn_Priv, 
                                        hostMarker_PrivTo, daddr_Priv, 
                                        hostidx_Priv, hidx_PrivT, 
                                        otherEntry_Priv, i_Priv, indicies_Priv, 
                                        portDomain_Priv, sourcePort_Priv, 
                                        destPort_Priv, new_sport_Priv, good, 
                                        depth_E, i_E, j_, ip_E, host_E, 
                                        indecies_, depth_Ev, i_Ev, j_E, ip_Ev, 
                                        host_Ev, indecies_E, i_C, i_Ch, 
                                        depth_Pub, pkt_Pub, ipkt_Pub, 
                                        entry_Pub, conn_PubT, hostMarker_Pub, 
                                        ip_idx_Pub, ipidx_Pub, ip_PubT, 
                                        host_PubT, depth_Priv, pkt_PrivToP, 
                                        conn_PrivT, hostMarker_PrivToP, daddr, 
                                        hostidx, hidx, otherEntry, i_PrivT, 
                                        indicies, portDomain, sourcePort, 
                                        destPort, new_sport, depth_PubT, pkt, 
                                        ipkt, entry, conn_PubTo, hostMarker, 
                                        ip_idx, ipidx, ip_PubTo, host_PubTo, 
                                        depth, i_Eve, j, ip_Eve, host_Eve, 
                                        indecies, i, aa >>

privtopubDport_(self) == /\ pc[self] = "privtopubDport_"
                         /\ destPort_Pr' = [destPort_Pr EXCEPT ![self] = Ports[destPort_Pr[self]]]
                         /\ hostidx_Pr' = [hostidx_Pr EXCEPT ![self] = DOMAIN hosts]
                         /\ hidx_Pri' = [hidx_Pri EXCEPT ![self] = CHOOSE hid \in hostidx_Pr'[self] : TRUE]
                         /\ daddr_Pr' = [daddr_Pr EXCEPT ![self] = hosts[hidx_Pri'[self]]]
                         /\ PrintT(<<"PrivToPubVuln - Conn: ", conn_Pr[self]>>)
                         /\ hostMarker_Priv' = [hostMarker_Priv EXCEPT ![self] = Head(Tail(conn_Pr[self]))]
                         /\ pkt_Priv' = [pkt_Priv EXCEPT ![self] = [saddr |-> Head(conn_Pr[self]), sport |-> sourcePort_Pr[self],
                                                                    daddr |-> daddr_Pr'[self], dport |-> destPort_Pr'[self],
                                                                    host_marker |-> hostMarker_Priv'[self]
                                                                   ]]
                         /\ PrintT(<<"PrivToPubMan - pkt: ", conn_Pr[self], pkt_Priv'[self]>>)
                         /\ entry' = [entry EXCEPT ![self] = [host_marker |-> hostMarker_Priv'[self],
                                                              orig |-> [saddr |-> pkt_Priv'[self].saddr, sport |-> pkt_Priv'[self].sport,
                                                                        daddr |-> pkt_Priv'[self].daddr, dport |-> pkt_Priv'[self].dport],
                                                              reply |-> [saddr |-> pkt_Priv'[self].daddr, sport |-> pkt_Priv'[self].dport,
                                                                         daddr |-> N,  dport |-> pkt_Priv'[self].sport ]]]
                         /\ otherEntry_Pr' = [otherEntry_Pr EXCEPT ![self] = SelectSeq(T, LAMBDA k: k.reply.saddr=pkt_Priv'[self].daddr /\ k.reply.sport=pkt_Priv'[self].dport /\
                                                                                                    k.reply.daddr=N /\ k.reply.dport=pkt_Priv'[self].sport /\ k.host_marker /= hostMarker_Priv'[self])]
                         /\ PrintT(<<"PrivToPub - T", T, otherEntry_Pr'[self], pkt_Priv'[self]>>)
                         /\ IF Len(otherEntry_Pr'[self]) > 0
                               THEN /\ T' = SelectSeq(T, LAMBDA e: ~(e.reply.saddr=pkt_Priv'[self].daddr /\ e.reply.sport=pkt_Priv'[self].dport /\
                                                                     e.reply.daddr=N /\ e.reply.dport=pkt_Priv'[self].sport) )
                               ELSE /\ TRUE
                                    /\ T' = T
                         /\ pc' = [pc EXCEPT ![self] = "privtoPubManAddT_"]
                         /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, 
                                         Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, 
                                         Kk, Ll, Mm, Nn, Oo, Pp, Qq, Rr, Ss, 
                                         Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, H2, 
                                         MaxPorts, EP1, PortMap1, EP2, 
                                         PortMap2, TableFull, EvictionReroute, 
                                         PortScanInv, ATIPInv, MaxTableSize, 
                                         hosts, FreeHosts, UsedHosts, Ports, 
                                         ExtraPorts, ExtraExtraPorts, FreeIPs, 
                                         PrivIPs, PubIPs, PortSpace, UsedIPs, 
                                         Connections, SendQueue, RcvQueue, MAX, 
                                         Marker1, Marker2, CmdConnect, 
                                         CmdDisconnect, PortSpaceFull, stack, 
                                         depth_, host_, hidx_, host_idx_, 
                                         pidx_, port_idx_, depth_D, ip_, 
                                         host_D, connDomain_, cidx_, conn_, 
                                         host_Con, ip_C, hidx_C, host_idx_C, 
                                         pidx_C, port_idx_C, host_Dis, ip_Di, 
                                         connDomain_D, cidx_D, conn_D, host, 
                                         ip, connDomain_Di, cidx_Di, conn_Di, 
                                         depth_P, pkt_, ipkt_, entry_, conn_P, 
                                         hostMarker_, ip_idx_, ipidx_, ip_P, 
                                         host_P, pkt_P, ipkt_P, entry_P, 
                                         conn_Pu, hostMarker_P, ip_idx_P, 
                                         ipidx_P, ip_Pu, host_Pu, IP, 
                                         conn_PrivTo, sport_, dstAddr_, dport_, 
                                         pkt_Pr, hostMarker_Pr, daddr_, 
                                         hostidx_, hidx_P, otherEntry_, i_, 
                                         indicies_, portDomain_, sourcePort_, 
                                         destPort_, new_sport_, conn, sport, 
                                         dstAddr, dport, pkt_Pri, 
                                         hostMarker_Pri, daddr_P, hostidx_P, 
                                         hidx_Pr, otherEntry_P, i_P, 
                                         indicies_P, portDomain_P, 
                                         sourcePort_P, destPort_P, new_sport_P, 
                                         depth_Pr, conn_Pr, i_Pr, indicies_Pr, 
                                         portDomain_Pr, sourcePort_Pr, 
                                         new_sport_Pr, pkt_PrivT, conn_Pri, 
                                         hostMarker_PrivT, daddr_Pri, 
                                         hostidx_Pri, hidx_Priv, 
                                         otherEntry_Pri, i_Pri, indicies_Pri, 
                                         portDomain_Pri, sourcePort_Pri, 
                                         destPort_Pri, new_sport_Pri, depth_C, 
                                         host_C, hidx_Co, host_idx_Co, pidx_Co, 
                                         port_idx_Co, connhost, port, host_Co, 
                                         hidx_Con, host_idx, pidx, port_idx, 
                                         depth_Di, ip_D, host_Di, connDomain, 
                                         cidx, conn_Dis, depth_Pu, pkt_Pu, 
                                         ipkt_Pu, entry_Pu, conn_Pub, 
                                         hostMarker_Pu, ip_idx_Pu, ipidx_Pu, 
                                         ip_Pub, host_Pub, depth_Pri, 
                                         pkt_PrivTo, conn_Priv, 
                                         hostMarker_PrivTo, daddr_Priv, 
                                         hostidx_Priv, hidx_PrivT, 
                                         otherEntry_Priv, i_Priv, 
                                         indicies_Priv, portDomain_Priv, 
                                         sourcePort_Priv, destPort_Priv, 
                                         new_sport_Priv, good, depth_E, i_E, 
                                         j_, ip_E, host_E, indecies_, depth_Ev, 
                                         i_Ev, j_E, ip_Ev, host_Ev, indecies_E, 
                                         i_C, i_Ch, depth_Pub, pkt_Pub, 
                                         ipkt_Pub, entry_Pub, conn_PubT, 
                                         hostMarker_Pub, ip_idx_Pub, ipidx_Pub, 
                                         ip_PubT, host_PubT, depth_Priv, 
                                         pkt_PrivToP, conn_PrivT, 
                                         hostMarker_PrivToP, daddr, hostidx, 
                                         hidx, otherEntry, i_PrivT, indicies, 
                                         portDomain, sourcePort, destPort, 
                                         new_sport, depth_PubT, pkt, ipkt, 
                                         conn_PubTo, hostMarker, ip_idx, ipidx, 
                                         ip_PubTo, host_PubTo, depth, i_Eve, j, 
                                         ip_Eve, host_Eve, indecies, i, aa >>

privtoPubManAddT_(self) == /\ pc[self] = "privtoPubManAddT_"
                           /\ T' = Append(T, entry[self])
                           /\ IF Len(T') > MaxTableSize
                                 THEN /\ TableFull' = TRUE
                                 ELSE /\ TRUE
                                      /\ UNCHANGED TableFull
                           /\ pc' = [pc EXCEPT ![self] = "privtopubPkt_Pr"]
                           /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, 
                                           Aa, Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, 
                                           Jj, Kk, Ll, Mm, Nn, Oo, Pp, Qq, Rr, 
                                           Ss, Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, 
                                           H2, MaxPorts, EP1, PortMap1, EP2, 
                                           PortMap2, EvictionReroute, 
                                           PortScanInv, ATIPInv, MaxTableSize, 
                                           hosts, FreeHosts, UsedHosts, Ports, 
                                           ExtraPorts, ExtraExtraPorts, 
                                           FreeIPs, PrivIPs, PubIPs, PortSpace, 
                                           UsedIPs, Connections, SendQueue, 
                                           RcvQueue, MAX, Marker1, Marker2, 
                                           CmdConnect, CmdDisconnect, 
                                           PortSpaceFull, stack, depth_, host_, 
                                           hidx_, host_idx_, pidx_, port_idx_, 
                                           depth_D, ip_, host_D, connDomain_, 
                                           cidx_, conn_, host_Con, ip_C, 
                                           hidx_C, host_idx_C, pidx_C, 
                                           port_idx_C, host_Dis, ip_Di, 
                                           connDomain_D, cidx_D, conn_D, host, 
                                           ip, connDomain_Di, cidx_Di, conn_Di, 
                                           depth_P, pkt_, ipkt_, entry_, 
                                           conn_P, hostMarker_, ip_idx_, 
                                           ipidx_, ip_P, host_P, pkt_P, ipkt_P, 
                                           entry_P, conn_Pu, hostMarker_P, 
                                           ip_idx_P, ipidx_P, ip_Pu, host_Pu, 
                                           IP, conn_PrivTo, sport_, dstAddr_, 
                                           dport_, pkt_Pr, hostMarker_Pr, 
                                           daddr_, hostidx_, hidx_P, 
                                           otherEntry_, i_, indicies_, 
                                           portDomain_, sourcePort_, destPort_, 
                                           new_sport_, conn, sport, dstAddr, 
                                           dport, pkt_Pri, hostMarker_Pri, 
                                           daddr_P, hostidx_P, hidx_Pr, 
                                           otherEntry_P, i_P, indicies_P, 
                                           portDomain_P, sourcePort_P, 
                                           destPort_P, new_sport_P, depth_Pr, 
                                           pkt_Priv, conn_Pr, hostMarker_Priv, 
                                           daddr_Pr, hostidx_Pr, hidx_Pri, 
                                           otherEntry_Pr, i_Pr, indicies_Pr, 
                                           portDomain_Pr, sourcePort_Pr, 
                                           destPort_Pr, new_sport_Pr, 
                                           pkt_PrivT, conn_Pri, 
                                           hostMarker_PrivT, daddr_Pri, 
                                           hostidx_Pri, hidx_Priv, 
                                           otherEntry_Pri, i_Pri, indicies_Pri, 
                                           portDomain_Pri, sourcePort_Pri, 
                                           destPort_Pri, new_sport_Pri, 
                                           depth_C, host_C, hidx_Co, 
                                           host_idx_Co, pidx_Co, port_idx_Co, 
                                           connhost, port, host_Co, hidx_Con, 
                                           host_idx, pidx, port_idx, depth_Di, 
                                           ip_D, host_Di, connDomain, cidx, 
                                           conn_Dis, depth_Pu, pkt_Pu, ipkt_Pu, 
                                           entry_Pu, conn_Pub, hostMarker_Pu, 
                                           ip_idx_Pu, ipidx_Pu, ip_Pub, 
                                           host_Pub, depth_Pri, pkt_PrivTo, 
                                           conn_Priv, hostMarker_PrivTo, 
                                           daddr_Priv, hostidx_Priv, 
                                           hidx_PrivT, otherEntry_Priv, i_Priv, 
                                           indicies_Priv, portDomain_Priv, 
                                           sourcePort_Priv, destPort_Priv, 
                                           new_sport_Priv, good, depth_E, i_E, 
                                           j_, ip_E, host_E, indecies_, 
                                           depth_Ev, i_Ev, j_E, ip_Ev, host_Ev, 
                                           indecies_E, i_C, i_Ch, depth_Pub, 
                                           pkt_Pub, ipkt_Pub, entry_Pub, 
                                           conn_PubT, hostMarker_Pub, 
                                           ip_idx_Pub, ipidx_Pub, ip_PubT, 
                                           host_PubT, depth_Priv, pkt_PrivToP, 
                                           conn_PrivT, hostMarker_PrivToP, 
                                           daddr, hostidx, hidx, otherEntry, 
                                           i_PrivT, indicies, portDomain, 
                                           sourcePort, destPort, new_sport, 
                                           depth_PubT, pkt, ipkt, entry, 
                                           conn_PubTo, hostMarker, ip_idx, 
                                           ipidx, ip_PubTo, host_PubTo, depth, 
                                           i_Eve, j, ip_Eve, host_Eve, 
                                           indecies, i, aa >>

privtopubPkt_Pr(self) == /\ pc[self] = "privtopubPkt_Pr"
                         /\ pkt_Priv' = [pkt_Priv EXCEPT ![self] = [saddr |->pkt_Priv[self].daddr, sport |-> pkt_Priv[self].dport,
                                                                    daddr |-> N, dport |-> pkt_Priv[self].sport,
                                                                    host_marker |-> hostMarker_Priv[self]]]
                         /\ SendQueue' = Append(SendQueue, pkt_Priv'[self])
                         /\ pc' = [pc EXCEPT ![self] = "privtopubRet_"]
                         /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, 
                                         Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, 
                                         Kk, Ll, Mm, Nn, Oo, Pp, Qq, Rr, Ss, 
                                         Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, H2, 
                                         MaxPorts, EP1, PortMap1, EP2, 
                                         PortMap2, TableFull, EvictionReroute, 
                                         PortScanInv, ATIPInv, MaxTableSize, 
                                         hosts, FreeHosts, UsedHosts, Ports, 
                                         ExtraPorts, ExtraExtraPorts, T, 
                                         FreeIPs, PrivIPs, PubIPs, PortSpace, 
                                         UsedIPs, Connections, RcvQueue, MAX, 
                                         Marker1, Marker2, CmdConnect, 
                                         CmdDisconnect, PortSpaceFull, stack, 
                                         depth_, host_, hidx_, host_idx_, 
                                         pidx_, port_idx_, depth_D, ip_, 
                                         host_D, connDomain_, cidx_, conn_, 
                                         host_Con, ip_C, hidx_C, host_idx_C, 
                                         pidx_C, port_idx_C, host_Dis, ip_Di, 
                                         connDomain_D, cidx_D, conn_D, host, 
                                         ip, connDomain_Di, cidx_Di, conn_Di, 
                                         depth_P, pkt_, ipkt_, entry_, conn_P, 
                                         hostMarker_, ip_idx_, ipidx_, ip_P, 
                                         host_P, pkt_P, ipkt_P, entry_P, 
                                         conn_Pu, hostMarker_P, ip_idx_P, 
                                         ipidx_P, ip_Pu, host_Pu, IP, 
                                         conn_PrivTo, sport_, dstAddr_, dport_, 
                                         pkt_Pr, hostMarker_Pr, daddr_, 
                                         hostidx_, hidx_P, otherEntry_, i_, 
                                         indicies_, portDomain_, sourcePort_, 
                                         destPort_, new_sport_, conn, sport, 
                                         dstAddr, dport, pkt_Pri, 
                                         hostMarker_Pri, daddr_P, hostidx_P, 
                                         hidx_Pr, otherEntry_P, i_P, 
                                         indicies_P, portDomain_P, 
                                         sourcePort_P, destPort_P, new_sport_P, 
                                         depth_Pr, conn_Pr, hostMarker_Priv, 
                                         daddr_Pr, hostidx_Pr, hidx_Pri, 
                                         otherEntry_Pr, i_Pr, indicies_Pr, 
                                         portDomain_Pr, sourcePort_Pr, 
                                         destPort_Pr, new_sport_Pr, pkt_PrivT, 
                                         conn_Pri, hostMarker_PrivT, daddr_Pri, 
                                         hostidx_Pri, hidx_Priv, 
                                         otherEntry_Pri, i_Pri, indicies_Pri, 
                                         portDomain_Pri, sourcePort_Pri, 
                                         destPort_Pri, new_sport_Pri, depth_C, 
                                         host_C, hidx_Co, host_idx_Co, pidx_Co, 
                                         port_idx_Co, connhost, port, host_Co, 
                                         hidx_Con, host_idx, pidx, port_idx, 
                                         depth_Di, ip_D, host_Di, connDomain, 
                                         cidx, conn_Dis, depth_Pu, pkt_Pu, 
                                         ipkt_Pu, entry_Pu, conn_Pub, 
                                         hostMarker_Pu, ip_idx_Pu, ipidx_Pu, 
                                         ip_Pub, host_Pub, depth_Pri, 
                                         pkt_PrivTo, conn_Priv, 
                                         hostMarker_PrivTo, daddr_Priv, 
                                         hostidx_Priv, hidx_PrivT, 
                                         otherEntry_Priv, i_Priv, 
                                         indicies_Priv, portDomain_Priv, 
                                         sourcePort_Priv, destPort_Priv, 
                                         new_sport_Priv, good, depth_E, i_E, 
                                         j_, ip_E, host_E, indecies_, depth_Ev, 
                                         i_Ev, j_E, ip_Ev, host_Ev, indecies_E, 
                                         i_C, i_Ch, depth_Pub, pkt_Pub, 
                                         ipkt_Pub, entry_Pub, conn_PubT, 
                                         hostMarker_Pub, ip_idx_Pub, ipidx_Pub, 
                                         ip_PubT, host_PubT, depth_Priv, 
                                         pkt_PrivToP, conn_PrivT, 
                                         hostMarker_PrivToP, daddr, hostidx, 
                                         hidx, otherEntry, i_PrivT, indicies, 
                                         portDomain, sourcePort, destPort, 
                                         new_sport, depth_PubT, pkt, ipkt, 
                                         entry, conn_PubTo, hostMarker, ip_idx, 
                                         ipidx, ip_PubTo, host_PubTo, depth, 
                                         i_Eve, j, ip_Eve, host_Eve, indecies, 
                                         i, aa >>

privtopubRet_(self) == /\ pc[self] = "privtopubRet_"
                       /\ pc' = [pc EXCEPT ![self] = Head(stack[self]).pc]
                       /\ pkt_Priv' = [pkt_Priv EXCEPT ![self] = Head(stack[self]).pkt_Priv]
                       /\ conn_Pr' = [conn_Pr EXCEPT ![self] = Head(stack[self]).conn_Pr]
                       /\ hostMarker_Priv' = [hostMarker_Priv EXCEPT ![self] = Head(stack[self]).hostMarker_Priv]
                       /\ daddr_Pr' = [daddr_Pr EXCEPT ![self] = Head(stack[self]).daddr_Pr]
                       /\ hostidx_Pr' = [hostidx_Pr EXCEPT ![self] = Head(stack[self]).hostidx_Pr]
                       /\ hidx_Pri' = [hidx_Pri EXCEPT ![self] = Head(stack[self]).hidx_Pri]
                       /\ otherEntry_Pr' = [otherEntry_Pr EXCEPT ![self] = Head(stack[self]).otherEntry_Pr]
                       /\ i_Pr' = [i_Pr EXCEPT ![self] = Head(stack[self]).i_Pr]
                       /\ indicies_Pr' = [indicies_Pr EXCEPT ![self] = Head(stack[self]).indicies_Pr]
                       /\ portDomain_Pr' = [portDomain_Pr EXCEPT ![self] = Head(stack[self]).portDomain_Pr]
                       /\ sourcePort_Pr' = [sourcePort_Pr EXCEPT ![self] = Head(stack[self]).sourcePort_Pr]
                       /\ destPort_Pr' = [destPort_Pr EXCEPT ![self] = Head(stack[self]).destPort_Pr]
                       /\ new_sport_Pr' = [new_sport_Pr EXCEPT ![self] = Head(stack[self]).new_sport_Pr]
                       /\ depth_Pr' = [depth_Pr EXCEPT ![self] = Head(stack[self]).depth_Pr]
                       /\ stack' = [stack EXCEPT ![self] = Tail(stack[self])]
                       /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, 
                                       Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, 
                                       Ll, Mm, Nn, Oo, Pp, Qq, Rr, Ss, Tt, Uu, 
                                       Vv, Ww, Xx, Yy, Zz, H1, H2, MaxPorts, 
                                       EP1, PortMap1, EP2, PortMap2, TableFull, 
                                       EvictionReroute, PortScanInv, ATIPInv, 
                                       MaxTableSize, hosts, FreeHosts, 
                                       UsedHosts, Ports, ExtraPorts, 
                                       ExtraExtraPorts, T, FreeIPs, PrivIPs, 
                                       PubIPs, PortSpace, UsedIPs, Connections, 
                                       SendQueue, RcvQueue, MAX, Marker1, 
                                       Marker2, CmdConnect, CmdDisconnect, 
                                       PortSpaceFull, depth_, host_, hidx_, 
                                       host_idx_, pidx_, port_idx_, depth_D, 
                                       ip_, host_D, connDomain_, cidx_, conn_, 
                                       host_Con, ip_C, hidx_C, host_idx_C, 
                                       pidx_C, port_idx_C, host_Dis, ip_Di, 
                                       connDomain_D, cidx_D, conn_D, host, ip, 
                                       connDomain_Di, cidx_Di, conn_Di, 
                                       depth_P, pkt_, ipkt_, entry_, conn_P, 
                                       hostMarker_, ip_idx_, ipidx_, ip_P, 
                                       host_P, pkt_P, ipkt_P, entry_P, conn_Pu, 
                                       hostMarker_P, ip_idx_P, ipidx_P, ip_Pu, 
                                       host_Pu, IP, conn_PrivTo, sport_, 
                                       dstAddr_, dport_, pkt_Pr, hostMarker_Pr, 
                                       daddr_, hostidx_, hidx_P, otherEntry_, 
                                       i_, indicies_, portDomain_, sourcePort_, 
                                       destPort_, new_sport_, conn, sport, 
                                       dstAddr, dport, pkt_Pri, hostMarker_Pri, 
                                       daddr_P, hostidx_P, hidx_Pr, 
                                       otherEntry_P, i_P, indicies_P, 
                                       portDomain_P, sourcePort_P, destPort_P, 
                                       new_sport_P, pkt_PrivT, conn_Pri, 
                                       hostMarker_PrivT, daddr_Pri, 
                                       hostidx_Pri, hidx_Priv, otherEntry_Pri, 
                                       i_Pri, indicies_Pri, portDomain_Pri, 
                                       sourcePort_Pri, destPort_Pri, 
                                       new_sport_Pri, depth_C, host_C, hidx_Co, 
                                       host_idx_Co, pidx_Co, port_idx_Co, 
                                       connhost, port, host_Co, hidx_Con, 
                                       host_idx, pidx, port_idx, depth_Di, 
                                       ip_D, host_Di, connDomain, cidx, 
                                       conn_Dis, depth_Pu, pkt_Pu, ipkt_Pu, 
                                       entry_Pu, conn_Pub, hostMarker_Pu, 
                                       ip_idx_Pu, ipidx_Pu, ip_Pub, host_Pub, 
                                       depth_Pri, pkt_PrivTo, conn_Priv, 
                                       hostMarker_PrivTo, daddr_Priv, 
                                       hostidx_Priv, hidx_PrivT, 
                                       otherEntry_Priv, i_Priv, indicies_Priv, 
                                       portDomain_Priv, sourcePort_Priv, 
                                       destPort_Priv, new_sport_Priv, good, 
                                       depth_E, i_E, j_, ip_E, host_E, 
                                       indecies_, depth_Ev, i_Ev, j_E, ip_Ev, 
                                       host_Ev, indecies_E, i_C, i_Ch, 
                                       depth_Pub, pkt_Pub, ipkt_Pub, entry_Pub, 
                                       conn_PubT, hostMarker_Pub, ip_idx_Pub, 
                                       ipidx_Pub, ip_PubT, host_PubT, 
                                       depth_Priv, pkt_PrivToP, conn_PrivT, 
                                       hostMarker_PrivToP, daddr, hostidx, 
                                       hidx, otherEntry, i_PrivT, indicies, 
                                       portDomain, sourcePort, destPort, 
                                       new_sport, depth_PubT, pkt, ipkt, entry, 
                                       conn_PubTo, hostMarker, ip_idx, ipidx, 
                                       ip_PubTo, host_PubTo, depth, i_Eve, j, 
                                       ip_Eve, host_Eve, indecies, i, aa >>

PrivToPubVuln(self) == privtopubV3_(self) \/ privtopubManStart_Pr(self)
                          \/ privtopubConn_(self) \/ privtopubDport_(self)
                          \/ privtoPubManAddT_(self)
                          \/ privtopubPkt_Pr(self) \/ privtopubRet_(self)

privtopubManStart_Pri(self) == /\ pc[self] = "privtopubManStart_Pri"
                               /\ IF Len (Connections) > 0
                                     THEN /\ indicies_Pri' = [indicies_Pri EXCEPT ![self] = DOMAIN Connections]
                                          /\ portDomain_Pri' = [portDomain_Pri EXCEPT ![self] = DOMAIN Ports]
                                          /\ sourcePort_Pri' = [sourcePort_Pri EXCEPT ![self] = CHOOSE pr \in portDomain_Pri'[self] : TRUE]
                                          /\ i_Pri' = [i_Pri EXCEPT ![self] = CHOOSE f \in indicies_Pri'[self] : TRUE]
                                          /\ pc' = [pc EXCEPT ![self] = "privtopubManConn"]
                                     ELSE /\ pc' = [pc EXCEPT ![self] = "privtopubRet_P"]
                                          /\ UNCHANGED << i_Pri, indicies_Pri, 
                                                          portDomain_Pri, 
                                                          sourcePort_Pri >>
                               /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, 
                                               NN, Aa, Bb, Cc, Dd, Ee, Ff, Gg, 
                                               Hh, Ii, Jj, Kk, Ll, Mm, Nn, Oo, 
                                               Pp, Qq, Rr, Ss, Tt, Uu, Vv, Ww, 
                                               Xx, Yy, Zz, H1, H2, MaxPorts, 
                                               EP1, PortMap1, EP2, PortMap2, 
                                               TableFull, EvictionReroute, 
                                               PortScanInv, ATIPInv, 
                                               MaxTableSize, hosts, FreeHosts, 
                                               UsedHosts, Ports, ExtraPorts, 
                                               ExtraExtraPorts, T, FreeIPs, 
                                               PrivIPs, PubIPs, PortSpace, 
                                               UsedIPs, Connections, SendQueue, 
                                               RcvQueue, MAX, Marker1, Marker2, 
                                               CmdConnect, CmdDisconnect, 
                                               PortSpaceFull, stack, depth_, 
                                               host_, hidx_, host_idx_, pidx_, 
                                               port_idx_, depth_D, ip_, host_D, 
                                               connDomain_, cidx_, conn_, 
                                               host_Con, ip_C, hidx_C, 
                                               host_idx_C, pidx_C, port_idx_C, 
                                               host_Dis, ip_Di, connDomain_D, 
                                               cidx_D, conn_D, host, ip, 
                                               connDomain_Di, cidx_Di, conn_Di, 
                                               depth_P, pkt_, ipkt_, entry_, 
                                               conn_P, hostMarker_, ip_idx_, 
                                               ipidx_, ip_P, host_P, pkt_P, 
                                               ipkt_P, entry_P, conn_Pu, 
                                               hostMarker_P, ip_idx_P, ipidx_P, 
                                               ip_Pu, host_Pu, IP, conn_PrivTo, 
                                               sport_, dstAddr_, dport_, 
                                               pkt_Pr, hostMarker_Pr, daddr_, 
                                               hostidx_, hidx_P, otherEntry_, 
                                               i_, indicies_, portDomain_, 
                                               sourcePort_, destPort_, 
                                               new_sport_, conn, sport, 
                                               dstAddr, dport, pkt_Pri, 
                                               hostMarker_Pri, daddr_P, 
                                               hostidx_P, hidx_Pr, 
                                               otherEntry_P, i_P, indicies_P, 
                                               portDomain_P, sourcePort_P, 
                                               destPort_P, new_sport_P, 
                                               depth_Pr, pkt_Priv, conn_Pr, 
                                               hostMarker_Priv, daddr_Pr, 
                                               hostidx_Pr, hidx_Pri, 
                                               otherEntry_Pr, i_Pr, 
                                               indicies_Pr, portDomain_Pr, 
                                               sourcePort_Pr, destPort_Pr, 
                                               new_sport_Pr, pkt_PrivT, 
                                               conn_Pri, hostMarker_PrivT, 
                                               daddr_Pri, hostidx_Pri, 
                                               hidx_Priv, otherEntry_Pri, 
                                               destPort_Pri, new_sport_Pri, 
                                               depth_C, host_C, hidx_Co, 
                                               host_idx_Co, pidx_Co, 
                                               port_idx_Co, connhost, port, 
                                               host_Co, hidx_Con, host_idx, 
                                               pidx, port_idx, depth_Di, ip_D, 
                                               host_Di, connDomain, cidx, 
                                               conn_Dis, depth_Pu, pkt_Pu, 
                                               ipkt_Pu, entry_Pu, conn_Pub, 
                                               hostMarker_Pu, ip_idx_Pu, 
                                               ipidx_Pu, ip_Pub, host_Pub, 
                                               depth_Pri, pkt_PrivTo, 
                                               conn_Priv, hostMarker_PrivTo, 
                                               daddr_Priv, hostidx_Priv, 
                                               hidx_PrivT, otherEntry_Priv, 
                                               i_Priv, indicies_Priv, 
                                               portDomain_Priv, 
                                               sourcePort_Priv, destPort_Priv, 
                                               new_sport_Priv, good, depth_E, 
                                               i_E, j_, ip_E, host_E, 
                                               indecies_, depth_Ev, i_Ev, j_E, 
                                               ip_Ev, host_Ev, indecies_E, i_C, 
                                               i_Ch, depth_Pub, pkt_Pub, 
                                               ipkt_Pub, entry_Pub, conn_PubT, 
                                               hostMarker_Pub, ip_idx_Pub, 
                                               ipidx_Pub, ip_PubT, host_PubT, 
                                               depth_Priv, pkt_PrivToP, 
                                               conn_PrivT, hostMarker_PrivToP, 
                                               daddr, hostidx, hidx, 
                                               otherEntry, i_PrivT, indicies, 
                                               portDomain, sourcePort, 
                                               destPort, new_sport, depth_PubT, 
                                               pkt, ipkt, entry, conn_PubTo, 
                                               hostMarker, ip_idx, ipidx, 
                                               ip_PubTo, host_PubTo, depth, 
                                               i_Eve, j, ip_Eve, host_Eve, 
                                               indecies, i, aa >>

privtopubManConn(self) == /\ pc[self] = "privtopubManConn"
                          /\ conn_Pri' = [conn_Pri EXCEPT ![self] = Connections[i_Pri[self]]]
                          /\ sourcePort_Pri' = [sourcePort_Pri EXCEPT ![self] = B]
                          /\ portDomain_Pri' = [portDomain_Pri EXCEPT ![self] = DOMAIN Ports]
                          /\ destPort_Pri' = [destPort_Pri EXCEPT ![self] = CHOOSE h \in portDomain_Pri'[self] : TRUE]
                          /\ pc' = [pc EXCEPT ![self] = "privtopubManDport"]
                          /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, 
                                          Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, 
                                          Kk, Ll, Mm, Nn, Oo, Pp, Qq, Rr, Ss, 
                                          Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, H2, 
                                          MaxPorts, EP1, PortMap1, EP2, 
                                          PortMap2, TableFull, EvictionReroute, 
                                          PortScanInv, ATIPInv, MaxTableSize, 
                                          hosts, FreeHosts, UsedHosts, Ports, 
                                          ExtraPorts, ExtraExtraPorts, T, 
                                          FreeIPs, PrivIPs, PubIPs, PortSpace, 
                                          UsedIPs, Connections, SendQueue, 
                                          RcvQueue, MAX, Marker1, Marker2, 
                                          CmdConnect, CmdDisconnect, 
                                          PortSpaceFull, stack, depth_, host_, 
                                          hidx_, host_idx_, pidx_, port_idx_, 
                                          depth_D, ip_, host_D, connDomain_, 
                                          cidx_, conn_, host_Con, ip_C, hidx_C, 
                                          host_idx_C, pidx_C, port_idx_C, 
                                          host_Dis, ip_Di, connDomain_D, 
                                          cidx_D, conn_D, host, ip, 
                                          connDomain_Di, cidx_Di, conn_Di, 
                                          depth_P, pkt_, ipkt_, entry_, conn_P, 
                                          hostMarker_, ip_idx_, ipidx_, ip_P, 
                                          host_P, pkt_P, ipkt_P, entry_P, 
                                          conn_Pu, hostMarker_P, ip_idx_P, 
                                          ipidx_P, ip_Pu, host_Pu, IP, 
                                          conn_PrivTo, sport_, dstAddr_, 
                                          dport_, pkt_Pr, hostMarker_Pr, 
                                          daddr_, hostidx_, hidx_P, 
                                          otherEntry_, i_, indicies_, 
                                          portDomain_, sourcePort_, destPort_, 
                                          new_sport_, conn, sport, dstAddr, 
                                          dport, pkt_Pri, hostMarker_Pri, 
                                          daddr_P, hostidx_P, hidx_Pr, 
                                          otherEntry_P, i_P, indicies_P, 
                                          portDomain_P, sourcePort_P, 
                                          destPort_P, new_sport_P, depth_Pr, 
                                          pkt_Priv, conn_Pr, hostMarker_Priv, 
                                          daddr_Pr, hostidx_Pr, hidx_Pri, 
                                          otherEntry_Pr, i_Pr, indicies_Pr, 
                                          portDomain_Pr, sourcePort_Pr, 
                                          destPort_Pr, new_sport_Pr, pkt_PrivT, 
                                          hostMarker_PrivT, daddr_Pri, 
                                          hostidx_Pri, hidx_Priv, 
                                          otherEntry_Pri, i_Pri, indicies_Pri, 
                                          new_sport_Pri, depth_C, host_C, 
                                          hidx_Co, host_idx_Co, pidx_Co, 
                                          port_idx_Co, connhost, port, host_Co, 
                                          hidx_Con, host_idx, pidx, port_idx, 
                                          depth_Di, ip_D, host_Di, connDomain, 
                                          cidx, conn_Dis, depth_Pu, pkt_Pu, 
                                          ipkt_Pu, entry_Pu, conn_Pub, 
                                          hostMarker_Pu, ip_idx_Pu, ipidx_Pu, 
                                          ip_Pub, host_Pub, depth_Pri, 
                                          pkt_PrivTo, conn_Priv, 
                                          hostMarker_PrivTo, daddr_Priv, 
                                          hostidx_Priv, hidx_PrivT, 
                                          otherEntry_Priv, i_Priv, 
                                          indicies_Priv, portDomain_Priv, 
                                          sourcePort_Priv, destPort_Priv, 
                                          new_sport_Priv, good, depth_E, i_E, 
                                          j_, ip_E, host_E, indecies_, 
                                          depth_Ev, i_Ev, j_E, ip_Ev, host_Ev, 
                                          indecies_E, i_C, i_Ch, depth_Pub, 
                                          pkt_Pub, ipkt_Pub, entry_Pub, 
                                          conn_PubT, hostMarker_Pub, 
                                          ip_idx_Pub, ipidx_Pub, ip_PubT, 
                                          host_PubT, depth_Priv, pkt_PrivToP, 
                                          conn_PrivT, hostMarker_PrivToP, 
                                          daddr, hostidx, hidx, otherEntry, 
                                          i_PrivT, indicies, portDomain, 
                                          sourcePort, destPort, new_sport, 
                                          depth_PubT, pkt, ipkt, entry, 
                                          conn_PubTo, hostMarker, ip_idx, 
                                          ipidx, ip_PubTo, host_PubTo, depth, 
                                          i_Eve, j, ip_Eve, host_Eve, indecies, 
                                          i, aa >>

privtopubManDport(self) == /\ pc[self] = "privtopubManDport"
                           /\ destPort_Pri' = [destPort_Pri EXCEPT ![self] = C]
                           /\ hostidx_Pri' = [hostidx_Pri EXCEPT ![self] = DOMAIN hosts]
                           /\ hidx_Priv' = [hidx_Priv EXCEPT ![self] = CHOOSE hid \in hostidx_Pri'[self] : TRUE]
                           /\ daddr_Pri' = [daddr_Pri EXCEPT ![self] = C]
                           /\ PrintT(<<"PrivToPubMan - Len(connections) > 0: ", indicies_Pri[self], conn_Pri[self], Connections>>)
                           /\ hostMarker_PrivT' = [hostMarker_PrivT EXCEPT ![self] = Head(Tail(conn_Pri[self]))]
                           /\ pkt_PrivT' = [pkt_PrivT EXCEPT ![self] = [saddr |-> Head(conn_Pri[self]), sport |-> sourcePort_Pri[self],
                                                                        daddr |-> daddr_Pri'[self], dport |-> destPort_Pri'[self],
                                                                        host_marker |-> hostMarker_PrivT'[self]
                                                                       ]]
                           /\ PrintT(<<"PrivToPubMan - conn, pkt: ", conn_Pri[self], pkt_PrivT'[self]>>)
                           /\ entry' = [entry EXCEPT ![self] = [host_marker |-> hostMarker_PrivT'[self],
                                                                orig |-> [saddr |-> pkt_PrivT'[self].saddr, sport |-> pkt_PrivT'[self].sport,
                                                                          daddr |-> pkt_PrivT'[self].daddr, dport |-> pkt_PrivT'[self].dport],
                                                                reply |-> [saddr |-> pkt_PrivT'[self].daddr, sport |-> pkt_PrivT'[self].dport,
                                                                           daddr |-> N,  dport |-> pkt_PrivT'[self].sport ]]]
                           /\ otherEntry_Pri' = [otherEntry_Pri EXCEPT ![self] = SelectSeq(T, LAMBDA k: k.reply.saddr=pkt_PrivT'[self].daddr /\ k.reply.sport=pkt_PrivT'[self].dport /\
                                                                                                        k.reply.daddr=N /\ k.reply.dport=pkt_PrivT'[self].sport)]
                           /\ PrintT(<<"PrivToPubMan - T", T, otherEntry_Pri'[self], pkt_PrivT'[self]>>)
                           /\ IF Len(otherEntry_Pri'[self]) > 0
                                 THEN /\ T' = SelectSeq(T, LAMBDA e: ~(e.reply.saddr=pkt_PrivT'[self].daddr /\ e.reply.sport=pkt_PrivT'[self].dport /\
                                                                       e.reply.daddr=N /\ e.reply.dport=pkt_PrivT'[self].sport) )
                                 ELSE /\ TRUE
                                      /\ T' = T
                           /\ pc' = [pc EXCEPT ![self] = "privtoPubManAddT_P"]
                           /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, 
                                           Aa, Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, 
                                           Jj, Kk, Ll, Mm, Nn, Oo, Pp, Qq, Rr, 
                                           Ss, Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, 
                                           H2, MaxPorts, EP1, PortMap1, EP2, 
                                           PortMap2, TableFull, 
                                           EvictionReroute, PortScanInv, 
                                           ATIPInv, MaxTableSize, hosts, 
                                           FreeHosts, UsedHosts, Ports, 
                                           ExtraPorts, ExtraExtraPorts, 
                                           FreeIPs, PrivIPs, PubIPs, PortSpace, 
                                           UsedIPs, Connections, SendQueue, 
                                           RcvQueue, MAX, Marker1, Marker2, 
                                           CmdConnect, CmdDisconnect, 
                                           PortSpaceFull, stack, depth_, host_, 
                                           hidx_, host_idx_, pidx_, port_idx_, 
                                           depth_D, ip_, host_D, connDomain_, 
                                           cidx_, conn_, host_Con, ip_C, 
                                           hidx_C, host_idx_C, pidx_C, 
                                           port_idx_C, host_Dis, ip_Di, 
                                           connDomain_D, cidx_D, conn_D, host, 
                                           ip, connDomain_Di, cidx_Di, conn_Di, 
                                           depth_P, pkt_, ipkt_, entry_, 
                                           conn_P, hostMarker_, ip_idx_, 
                                           ipidx_, ip_P, host_P, pkt_P, ipkt_P, 
                                           entry_P, conn_Pu, hostMarker_P, 
                                           ip_idx_P, ipidx_P, ip_Pu, host_Pu, 
                                           IP, conn_PrivTo, sport_, dstAddr_, 
                                           dport_, pkt_Pr, hostMarker_Pr, 
                                           daddr_, hostidx_, hidx_P, 
                                           otherEntry_, i_, indicies_, 
                                           portDomain_, sourcePort_, destPort_, 
                                           new_sport_, conn, sport, dstAddr, 
                                           dport, pkt_Pri, hostMarker_Pri, 
                                           daddr_P, hostidx_P, hidx_Pr, 
                                           otherEntry_P, i_P, indicies_P, 
                                           portDomain_P, sourcePort_P, 
                                           destPort_P, new_sport_P, depth_Pr, 
                                           pkt_Priv, conn_Pr, hostMarker_Priv, 
                                           daddr_Pr, hostidx_Pr, hidx_Pri, 
                                           otherEntry_Pr, i_Pr, indicies_Pr, 
                                           portDomain_Pr, sourcePort_Pr, 
                                           destPort_Pr, new_sport_Pr, conn_Pri, 
                                           i_Pri, indicies_Pri, portDomain_Pri, 
                                           sourcePort_Pri, new_sport_Pri, 
                                           depth_C, host_C, hidx_Co, 
                                           host_idx_Co, pidx_Co, port_idx_Co, 
                                           connhost, port, host_Co, hidx_Con, 
                                           host_idx, pidx, port_idx, depth_Di, 
                                           ip_D, host_Di, connDomain, cidx, 
                                           conn_Dis, depth_Pu, pkt_Pu, ipkt_Pu, 
                                           entry_Pu, conn_Pub, hostMarker_Pu, 
                                           ip_idx_Pu, ipidx_Pu, ip_Pub, 
                                           host_Pub, depth_Pri, pkt_PrivTo, 
                                           conn_Priv, hostMarker_PrivTo, 
                                           daddr_Priv, hostidx_Priv, 
                                           hidx_PrivT, otherEntry_Priv, i_Priv, 
                                           indicies_Priv, portDomain_Priv, 
                                           sourcePort_Priv, destPort_Priv, 
                                           new_sport_Priv, good, depth_E, i_E, 
                                           j_, ip_E, host_E, indecies_, 
                                           depth_Ev, i_Ev, j_E, ip_Ev, host_Ev, 
                                           indecies_E, i_C, i_Ch, depth_Pub, 
                                           pkt_Pub, ipkt_Pub, entry_Pub, 
                                           conn_PubT, hostMarker_Pub, 
                                           ip_idx_Pub, ipidx_Pub, ip_PubT, 
                                           host_PubT, depth_Priv, pkt_PrivToP, 
                                           conn_PrivT, hostMarker_PrivToP, 
                                           daddr, hostidx, hidx, otherEntry, 
                                           i_PrivT, indicies, portDomain, 
                                           sourcePort, destPort, new_sport, 
                                           depth_PubT, pkt, ipkt, conn_PubTo, 
                                           hostMarker, ip_idx, ipidx, ip_PubTo, 
                                           host_PubTo, depth, i_Eve, j, ip_Eve, 
                                           host_Eve, indecies, i, aa >>

privtoPubManAddT_P(self) == /\ pc[self] = "privtoPubManAddT_P"
                            /\ T' = Append(T, entry[self])
                            /\ pc' = [pc EXCEPT ![self] = "privtopubPkt_Pri"]
                            /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, 
                                            Aa, Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, 
                                            Jj, Kk, Ll, Mm, Nn, Oo, Pp, Qq, Rr, 
                                            Ss, Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, 
                                            H2, MaxPorts, EP1, PortMap1, EP2, 
                                            PortMap2, TableFull, 
                                            EvictionReroute, PortScanInv, 
                                            ATIPInv, MaxTableSize, hosts, 
                                            FreeHosts, UsedHosts, Ports, 
                                            ExtraPorts, ExtraExtraPorts, 
                                            FreeIPs, PrivIPs, PubIPs, 
                                            PortSpace, UsedIPs, Connections, 
                                            SendQueue, RcvQueue, MAX, Marker1, 
                                            Marker2, CmdConnect, CmdDisconnect, 
                                            PortSpaceFull, stack, depth_, 
                                            host_, hidx_, host_idx_, pidx_, 
                                            port_idx_, depth_D, ip_, host_D, 
                                            connDomain_, cidx_, conn_, 
                                            host_Con, ip_C, hidx_C, host_idx_C, 
                                            pidx_C, port_idx_C, host_Dis, 
                                            ip_Di, connDomain_D, cidx_D, 
                                            conn_D, host, ip, connDomain_Di, 
                                            cidx_Di, conn_Di, depth_P, pkt_, 
                                            ipkt_, entry_, conn_P, hostMarker_, 
                                            ip_idx_, ipidx_, ip_P, host_P, 
                                            pkt_P, ipkt_P, entry_P, conn_Pu, 
                                            hostMarker_P, ip_idx_P, ipidx_P, 
                                            ip_Pu, host_Pu, IP, conn_PrivTo, 
                                            sport_, dstAddr_, dport_, pkt_Pr, 
                                            hostMarker_Pr, daddr_, hostidx_, 
                                            hidx_P, otherEntry_, i_, indicies_, 
                                            portDomain_, sourcePort_, 
                                            destPort_, new_sport_, conn, sport, 
                                            dstAddr, dport, pkt_Pri, 
                                            hostMarker_Pri, daddr_P, hostidx_P, 
                                            hidx_Pr, otherEntry_P, i_P, 
                                            indicies_P, portDomain_P, 
                                            sourcePort_P, destPort_P, 
                                            new_sport_P, depth_Pr, pkt_Priv, 
                                            conn_Pr, hostMarker_Priv, daddr_Pr, 
                                            hostidx_Pr, hidx_Pri, 
                                            otherEntry_Pr, i_Pr, indicies_Pr, 
                                            portDomain_Pr, sourcePort_Pr, 
                                            destPort_Pr, new_sport_Pr, 
                                            pkt_PrivT, conn_Pri, 
                                            hostMarker_PrivT, daddr_Pri, 
                                            hostidx_Pri, hidx_Priv, 
                                            otherEntry_Pri, i_Pri, 
                                            indicies_Pri, portDomain_Pri, 
                                            sourcePort_Pri, destPort_Pri, 
                                            new_sport_Pri, depth_C, host_C, 
                                            hidx_Co, host_idx_Co, pidx_Co, 
                                            port_idx_Co, connhost, port, 
                                            host_Co, hidx_Con, host_idx, pidx, 
                                            port_idx, depth_Di, ip_D, host_Di, 
                                            connDomain, cidx, conn_Dis, 
                                            depth_Pu, pkt_Pu, ipkt_Pu, 
                                            entry_Pu, conn_Pub, hostMarker_Pu, 
                                            ip_idx_Pu, ipidx_Pu, ip_Pub, 
                                            host_Pub, depth_Pri, pkt_PrivTo, 
                                            conn_Priv, hostMarker_PrivTo, 
                                            daddr_Priv, hostidx_Priv, 
                                            hidx_PrivT, otherEntry_Priv, 
                                            i_Priv, indicies_Priv, 
                                            portDomain_Priv, sourcePort_Priv, 
                                            destPort_Priv, new_sport_Priv, 
                                            good, depth_E, i_E, j_, ip_E, 
                                            host_E, indecies_, depth_Ev, i_Ev, 
                                            j_E, ip_Ev, host_Ev, indecies_E, 
                                            i_C, i_Ch, depth_Pub, pkt_Pub, 
                                            ipkt_Pub, entry_Pub, conn_PubT, 
                                            hostMarker_Pub, ip_idx_Pub, 
                                            ipidx_Pub, ip_PubT, host_PubT, 
                                            depth_Priv, pkt_PrivToP, 
                                            conn_PrivT, hostMarker_PrivToP, 
                                            daddr, hostidx, hidx, otherEntry, 
                                            i_PrivT, indicies, portDomain, 
                                            sourcePort, destPort, new_sport, 
                                            depth_PubT, pkt, ipkt, entry, 
                                            conn_PubTo, hostMarker, ip_idx, 
                                            ipidx, ip_PubTo, host_PubTo, depth, 
                                            i_Eve, j, ip_Eve, host_Eve, 
                                            indecies, i, aa >>

privtopubPkt_Pri(self) == /\ pc[self] = "privtopubPkt_Pri"
                          /\ pkt_PrivT' = [pkt_PrivT EXCEPT ![self] = [saddr |->pkt_PrivT[self].daddr, sport |-> pkt_PrivT[self].dport,
                                                                       daddr |-> N, dport |-> pkt_PrivT[self].sport,
                                                                       host_marker |-> hostMarker_PrivT[self]]]
                          /\ SendQueue' = Append(SendQueue, pkt_PrivT'[self])
                          /\ pc' = [pc EXCEPT ![self] = "privtopubRet_P"]
                          /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, 
                                          Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, 
                                          Kk, Ll, Mm, Nn, Oo, Pp, Qq, Rr, Ss, 
                                          Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, H2, 
                                          MaxPorts, EP1, PortMap1, EP2, 
                                          PortMap2, TableFull, EvictionReroute, 
                                          PortScanInv, ATIPInv, MaxTableSize, 
                                          hosts, FreeHosts, UsedHosts, Ports, 
                                          ExtraPorts, ExtraExtraPorts, T, 
                                          FreeIPs, PrivIPs, PubIPs, PortSpace, 
                                          UsedIPs, Connections, RcvQueue, MAX, 
                                          Marker1, Marker2, CmdConnect, 
                                          CmdDisconnect, PortSpaceFull, stack, 
                                          depth_, host_, hidx_, host_idx_, 
                                          pidx_, port_idx_, depth_D, ip_, 
                                          host_D, connDomain_, cidx_, conn_, 
                                          host_Con, ip_C, hidx_C, host_idx_C, 
                                          pidx_C, port_idx_C, host_Dis, ip_Di, 
                                          connDomain_D, cidx_D, conn_D, host, 
                                          ip, connDomain_Di, cidx_Di, conn_Di, 
                                          depth_P, pkt_, ipkt_, entry_, conn_P, 
                                          hostMarker_, ip_idx_, ipidx_, ip_P, 
                                          host_P, pkt_P, ipkt_P, entry_P, 
                                          conn_Pu, hostMarker_P, ip_idx_P, 
                                          ipidx_P, ip_Pu, host_Pu, IP, 
                                          conn_PrivTo, sport_, dstAddr_, 
                                          dport_, pkt_Pr, hostMarker_Pr, 
                                          daddr_, hostidx_, hidx_P, 
                                          otherEntry_, i_, indicies_, 
                                          portDomain_, sourcePort_, destPort_, 
                                          new_sport_, conn, sport, dstAddr, 
                                          dport, pkt_Pri, hostMarker_Pri, 
                                          daddr_P, hostidx_P, hidx_Pr, 
                                          otherEntry_P, i_P, indicies_P, 
                                          portDomain_P, sourcePort_P, 
                                          destPort_P, new_sport_P, depth_Pr, 
                                          pkt_Priv, conn_Pr, hostMarker_Priv, 
                                          daddr_Pr, hostidx_Pr, hidx_Pri, 
                                          otherEntry_Pr, i_Pr, indicies_Pr, 
                                          portDomain_Pr, sourcePort_Pr, 
                                          destPort_Pr, new_sport_Pr, conn_Pri, 
                                          hostMarker_PrivT, daddr_Pri, 
                                          hostidx_Pri, hidx_Priv, 
                                          otherEntry_Pri, i_Pri, indicies_Pri, 
                                          portDomain_Pri, sourcePort_Pri, 
                                          destPort_Pri, new_sport_Pri, depth_C, 
                                          host_C, hidx_Co, host_idx_Co, 
                                          pidx_Co, port_idx_Co, connhost, port, 
                                          host_Co, hidx_Con, host_idx, pidx, 
                                          port_idx, depth_Di, ip_D, host_Di, 
                                          connDomain, cidx, conn_Dis, depth_Pu, 
                                          pkt_Pu, ipkt_Pu, entry_Pu, conn_Pub, 
                                          hostMarker_Pu, ip_idx_Pu, ipidx_Pu, 
                                          ip_Pub, host_Pub, depth_Pri, 
                                          pkt_PrivTo, conn_Priv, 
                                          hostMarker_PrivTo, daddr_Priv, 
                                          hostidx_Priv, hidx_PrivT, 
                                          otherEntry_Priv, i_Priv, 
                                          indicies_Priv, portDomain_Priv, 
                                          sourcePort_Priv, destPort_Priv, 
                                          new_sport_Priv, good, depth_E, i_E, 
                                          j_, ip_E, host_E, indecies_, 
                                          depth_Ev, i_Ev, j_E, ip_Ev, host_Ev, 
                                          indecies_E, i_C, i_Ch, depth_Pub, 
                                          pkt_Pub, ipkt_Pub, entry_Pub, 
                                          conn_PubT, hostMarker_Pub, 
                                          ip_idx_Pub, ipidx_Pub, ip_PubT, 
                                          host_PubT, depth_Priv, pkt_PrivToP, 
                                          conn_PrivT, hostMarker_PrivToP, 
                                          daddr, hostidx, hidx, otherEntry, 
                                          i_PrivT, indicies, portDomain, 
                                          sourcePort, destPort, new_sport, 
                                          depth_PubT, pkt, ipkt, entry, 
                                          conn_PubTo, hostMarker, ip_idx, 
                                          ipidx, ip_PubTo, host_PubTo, depth, 
                                          i_Eve, j, ip_Eve, host_Eve, indecies, 
                                          i, aa >>

privtopubRet_P(self) == /\ pc[self] = "privtopubRet_P"
                        /\ pc' = [pc EXCEPT ![self] = Head(stack[self]).pc]
                        /\ pkt_PrivT' = [pkt_PrivT EXCEPT ![self] = Head(stack[self]).pkt_PrivT]
                        /\ conn_Pri' = [conn_Pri EXCEPT ![self] = Head(stack[self]).conn_Pri]
                        /\ hostMarker_PrivT' = [hostMarker_PrivT EXCEPT ![self] = Head(stack[self]).hostMarker_PrivT]
                        /\ daddr_Pri' = [daddr_Pri EXCEPT ![self] = Head(stack[self]).daddr_Pri]
                        /\ hostidx_Pri' = [hostidx_Pri EXCEPT ![self] = Head(stack[self]).hostidx_Pri]
                        /\ hidx_Priv' = [hidx_Priv EXCEPT ![self] = Head(stack[self]).hidx_Priv]
                        /\ otherEntry_Pri' = [otherEntry_Pri EXCEPT ![self] = Head(stack[self]).otherEntry_Pri]
                        /\ i_Pri' = [i_Pri EXCEPT ![self] = Head(stack[self]).i_Pri]
                        /\ indicies_Pri' = [indicies_Pri EXCEPT ![self] = Head(stack[self]).indicies_Pri]
                        /\ portDomain_Pri' = [portDomain_Pri EXCEPT ![self] = Head(stack[self]).portDomain_Pri]
                        /\ sourcePort_Pri' = [sourcePort_Pri EXCEPT ![self] = Head(stack[self]).sourcePort_Pri]
                        /\ destPort_Pri' = [destPort_Pri EXCEPT ![self] = Head(stack[self]).destPort_Pri]
                        /\ new_sport_Pri' = [new_sport_Pri EXCEPT ![self] = Head(stack[self]).new_sport_Pri]
                        /\ stack' = [stack EXCEPT ![self] = Tail(stack[self])]
                        /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, 
                                        Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, 
                                        Ll, Mm, Nn, Oo, Pp, Qq, Rr, Ss, Tt, Uu, 
                                        Vv, Ww, Xx, Yy, Zz, H1, H2, MaxPorts, 
                                        EP1, PortMap1, EP2, PortMap2, 
                                        TableFull, EvictionReroute, 
                                        PortScanInv, ATIPInv, MaxTableSize, 
                                        hosts, FreeHosts, UsedHosts, Ports, 
                                        ExtraPorts, ExtraExtraPorts, T, 
                                        FreeIPs, PrivIPs, PubIPs, PortSpace, 
                                        UsedIPs, Connections, SendQueue, 
                                        RcvQueue, MAX, Marker1, Marker2, 
                                        CmdConnect, CmdDisconnect, 
                                        PortSpaceFull, depth_, host_, hidx_, 
                                        host_idx_, pidx_, port_idx_, depth_D, 
                                        ip_, host_D, connDomain_, cidx_, conn_, 
                                        host_Con, ip_C, hidx_C, host_idx_C, 
                                        pidx_C, port_idx_C, host_Dis, ip_Di, 
                                        connDomain_D, cidx_D, conn_D, host, ip, 
                                        connDomain_Di, cidx_Di, conn_Di, 
                                        depth_P, pkt_, ipkt_, entry_, conn_P, 
                                        hostMarker_, ip_idx_, ipidx_, ip_P, 
                                        host_P, pkt_P, ipkt_P, entry_P, 
                                        conn_Pu, hostMarker_P, ip_idx_P, 
                                        ipidx_P, ip_Pu, host_Pu, IP, 
                                        conn_PrivTo, sport_, dstAddr_, dport_, 
                                        pkt_Pr, hostMarker_Pr, daddr_, 
                                        hostidx_, hidx_P, otherEntry_, i_, 
                                        indicies_, portDomain_, sourcePort_, 
                                        destPort_, new_sport_, conn, sport, 
                                        dstAddr, dport, pkt_Pri, 
                                        hostMarker_Pri, daddr_P, hostidx_P, 
                                        hidx_Pr, otherEntry_P, i_P, indicies_P, 
                                        portDomain_P, sourcePort_P, destPort_P, 
                                        new_sport_P, depth_Pr, pkt_Priv, 
                                        conn_Pr, hostMarker_Priv, daddr_Pr, 
                                        hostidx_Pr, hidx_Pri, otherEntry_Pr, 
                                        i_Pr, indicies_Pr, portDomain_Pr, 
                                        sourcePort_Pr, destPort_Pr, 
                                        new_sport_Pr, depth_C, host_C, hidx_Co, 
                                        host_idx_Co, pidx_Co, port_idx_Co, 
                                        connhost, port, host_Co, hidx_Con, 
                                        host_idx, pidx, port_idx, depth_Di, 
                                        ip_D, host_Di, connDomain, cidx, 
                                        conn_Dis, depth_Pu, pkt_Pu, ipkt_Pu, 
                                        entry_Pu, conn_Pub, hostMarker_Pu, 
                                        ip_idx_Pu, ipidx_Pu, ip_Pub, host_Pub, 
                                        depth_Pri, pkt_PrivTo, conn_Priv, 
                                        hostMarker_PrivTo, daddr_Priv, 
                                        hostidx_Priv, hidx_PrivT, 
                                        otherEntry_Priv, i_Priv, indicies_Priv, 
                                        portDomain_Priv, sourcePort_Priv, 
                                        destPort_Priv, new_sport_Priv, good, 
                                        depth_E, i_E, j_, ip_E, host_E, 
                                        indecies_, depth_Ev, i_Ev, j_E, ip_Ev, 
                                        host_Ev, indecies_E, i_C, i_Ch, 
                                        depth_Pub, pkt_Pub, ipkt_Pub, 
                                        entry_Pub, conn_PubT, hostMarker_Pub, 
                                        ip_idx_Pub, ipidx_Pub, ip_PubT, 
                                        host_PubT, depth_Priv, pkt_PrivToP, 
                                        conn_PrivT, hostMarker_PrivToP, daddr, 
                                        hostidx, hidx, otherEntry, i_PrivT, 
                                        indicies, portDomain, sourcePort, 
                                        destPort, new_sport, depth_PubT, pkt, 
                                        ipkt, entry, conn_PubTo, hostMarker, 
                                        ip_idx, ipidx, ip_PubTo, host_PubTo, 
                                        depth, i_Eve, j, ip_Eve, host_Eve, 
                                        indecies, i, aa >>

PrivToPubMan(self) == privtopubManStart_Pri(self) \/ privtopubManConn(self)
                         \/ privtopubManDport(self)
                         \/ privtoPubManAddT_P(self)
                         \/ privtopubPkt_Pri(self) \/ privtopubRet_P(self)

connectStart(self) == /\ pc[self] = "connectStart"
                      /\ /\ depth' = [depth EXCEPT ![self] = depth_C[self]]
                         /\ stack' = [stack EXCEPT ![self] = << [ procedure |->  "EventSequenceATIP",
                                                                  pc        |->  "connectIf_",
                                                                  i_Eve     |->  i_Eve[self],
                                                                  j         |->  j[self],
                                                                  ip_Eve    |->  ip_Eve[self],
                                                                  host_Eve  |->  host_Eve[self],
                                                                  indecies  |->  indecies[self],
                                                                  depth     |->  depth[self] ] >>
                                                              \o stack[self]]
                      /\ i_Eve' = [i_Eve EXCEPT ![self] = defaultInitValue]
                      /\ j' = [j EXCEPT ![self] = defaultInitValue]
                      /\ ip_Eve' = [ip_Eve EXCEPT ![self] = defaultInitValue]
                      /\ host_Eve' = [host_Eve EXCEPT ![self] = defaultInitValue]
                      /\ indecies' = [indecies EXCEPT ![self] = defaultInitValue]
                      /\ pc' = [pc EXCEPT ![self] = "evtSeqStart"]
                      /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, Bb, 
                                      Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, Ll, 
                                      Mm, Nn, Oo, Pp, Qq, Rr, Ss, Tt, Uu, Vv, 
                                      Ww, Xx, Yy, Zz, H1, H2, MaxPorts, EP1, 
                                      PortMap1, EP2, PortMap2, TableFull, 
                                      EvictionReroute, PortScanInv, ATIPInv, 
                                      MaxTableSize, hosts, FreeHosts, 
                                      UsedHosts, Ports, ExtraPorts, 
                                      ExtraExtraPorts, T, FreeIPs, PrivIPs, 
                                      PubIPs, PortSpace, UsedIPs, Connections, 
                                      SendQueue, RcvQueue, MAX, Marker1, 
                                      Marker2, CmdConnect, CmdDisconnect, 
                                      PortSpaceFull, depth_, host_, hidx_, 
                                      host_idx_, pidx_, port_idx_, depth_D, 
                                      ip_, host_D, connDomain_, cidx_, conn_, 
                                      host_Con, ip_C, hidx_C, host_idx_C, 
                                      pidx_C, port_idx_C, host_Dis, ip_Di, 
                                      connDomain_D, cidx_D, conn_D, host, ip, 
                                      connDomain_Di, cidx_Di, conn_Di, depth_P, 
                                      pkt_, ipkt_, entry_, conn_P, hostMarker_, 
                                      ip_idx_, ipidx_, ip_P, host_P, pkt_P, 
                                      ipkt_P, entry_P, conn_Pu, hostMarker_P, 
                                      ip_idx_P, ipidx_P, ip_Pu, host_Pu, IP, 
                                      conn_PrivTo, sport_, dstAddr_, dport_, 
                                      pkt_Pr, hostMarker_Pr, daddr_, hostidx_, 
                                      hidx_P, otherEntry_, i_, indicies_, 
                                      portDomain_, sourcePort_, destPort_, 
                                      new_sport_, conn, sport, dstAddr, dport, 
                                      pkt_Pri, hostMarker_Pri, daddr_P, 
                                      hostidx_P, hidx_Pr, otherEntry_P, i_P, 
                                      indicies_P, portDomain_P, sourcePort_P, 
                                      destPort_P, new_sport_P, depth_Pr, 
                                      pkt_Priv, conn_Pr, hostMarker_Priv, 
                                      daddr_Pr, hostidx_Pr, hidx_Pri, 
                                      otherEntry_Pr, i_Pr, indicies_Pr, 
                                      portDomain_Pr, sourcePort_Pr, 
                                      destPort_Pr, new_sport_Pr, pkt_PrivT, 
                                      conn_Pri, hostMarker_PrivT, daddr_Pri, 
                                      hostidx_Pri, hidx_Priv, otherEntry_Pri, 
                                      i_Pri, indicies_Pri, portDomain_Pri, 
                                      sourcePort_Pri, destPort_Pri, 
                                      new_sport_Pri, depth_C, host_C, hidx_Co, 
                                      host_idx_Co, pidx_Co, port_idx_Co, 
                                      connhost, port, host_Co, hidx_Con, 
                                      host_idx, pidx, port_idx, depth_Di, ip_D, 
                                      host_Di, connDomain, cidx, conn_Dis, 
                                      depth_Pu, pkt_Pu, ipkt_Pu, entry_Pu, 
                                      conn_Pub, hostMarker_Pu, ip_idx_Pu, 
                                      ipidx_Pu, ip_Pub, host_Pub, depth_Pri, 
                                      pkt_PrivTo, conn_Priv, hostMarker_PrivTo, 
                                      daddr_Priv, hostidx_Priv, hidx_PrivT, 
                                      otherEntry_Priv, i_Priv, indicies_Priv, 
                                      portDomain_Priv, sourcePort_Priv, 
                                      destPort_Priv, new_sport_Priv, good, 
                                      depth_E, i_E, j_, ip_E, host_E, 
                                      indecies_, depth_Ev, i_Ev, j_E, ip_Ev, 
                                      host_Ev, indecies_E, i_C, i_Ch, 
                                      depth_Pub, pkt_Pub, ipkt_Pub, entry_Pub, 
                                      conn_PubT, hostMarker_Pub, ip_idx_Pub, 
                                      ipidx_Pub, ip_PubT, host_PubT, 
                                      depth_Priv, pkt_PrivToP, conn_PrivT, 
                                      hostMarker_PrivToP, daddr, hostidx, hidx, 
                                      otherEntry, i_PrivT, indicies, 
                                      portDomain, sourcePort, destPort, 
                                      new_sport, depth_PubT, pkt, ipkt, entry, 
                                      conn_PubTo, hostMarker, ip_idx, ipidx, 
                                      ip_PubTo, host_PubTo, i, aa >>

connectIf_(self) == /\ pc[self] = "connectIf_"
                    /\ IF Len(FreeHosts) > 0
                          THEN /\ host_idx_Co' = [host_idx_Co EXCEPT ![self] = DOMAIN FreeHosts]
                               /\ hidx_Co' = [hidx_Co EXCEPT ![self] = CHOOSE h \in host_idx_Co'[self] : TRUE]
                               /\ host_C' = [host_C EXCEPT ![self] = FreeHosts[hidx_Co'[self]]]
                               /\ FreeHosts' = SelectSeq(FreeHosts, LAMBDA a: a /= host_C'[self])
                               /\ UsedHosts' = Append(UsedHosts, host_C'[self])
                               /\ port_idx_Co' = [port_idx_Co EXCEPT ![self] = DOMAIN Ports]
                               /\ pidx_Co' = [pidx_Co EXCEPT ![self] = CHOOSE p \in port_idx_Co'[self] : TRUE]
                               /\ pkt' = [pkt EXCEPT ![self] = [ saddr |-> host_C'[self], sport |-> Ports[pidx_Co'[self]],
                                                                 daddr |-> N,    dport |-> N,
                                                                 cmd |-> CmdConnect,
                                                                 host_marker |-> host_C'[self]]]
                               /\ SendQueue' = Append(SendQueue, pkt'[self])
                          ELSE /\ TRUE
                               /\ UNCHANGED << FreeHosts, UsedHosts, SendQueue, 
                                               host_C, hidx_Co, host_idx_Co, 
                                               pidx_Co, port_idx_Co, pkt >>
                    /\ pc' = [pc EXCEPT ![self] = "connectRet_"]
                    /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, Bb, 
                                    Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, Ll, Mm, 
                                    Nn, Oo, Pp, Qq, Rr, Ss, Tt, Uu, Vv, Ww, Xx, 
                                    Yy, Zz, H1, H2, MaxPorts, EP1, PortMap1, 
                                    EP2, PortMap2, TableFull, EvictionReroute, 
                                    PortScanInv, ATIPInv, MaxTableSize, hosts, 
                                    Ports, ExtraPorts, ExtraExtraPorts, T, 
                                    FreeIPs, PrivIPs, PubIPs, PortSpace, 
                                    UsedIPs, Connections, RcvQueue, MAX, 
                                    Marker1, Marker2, CmdConnect, 
                                    CmdDisconnect, PortSpaceFull, stack, 
                                    depth_, host_, hidx_, host_idx_, pidx_, 
                                    port_idx_, depth_D, ip_, host_D, 
                                    connDomain_, cidx_, conn_, host_Con, ip_C, 
                                    hidx_C, host_idx_C, pidx_C, port_idx_C, 
                                    host_Dis, ip_Di, connDomain_D, cidx_D, 
                                    conn_D, host, ip, connDomain_Di, cidx_Di, 
                                    conn_Di, depth_P, pkt_, ipkt_, entry_, 
                                    conn_P, hostMarker_, ip_idx_, ipidx_, ip_P, 
                                    host_P, pkt_P, ipkt_P, entry_P, conn_Pu, 
                                    hostMarker_P, ip_idx_P, ipidx_P, ip_Pu, 
                                    host_Pu, IP, conn_PrivTo, sport_, dstAddr_, 
                                    dport_, pkt_Pr, hostMarker_Pr, daddr_, 
                                    hostidx_, hidx_P, otherEntry_, i_, 
                                    indicies_, portDomain_, sourcePort_, 
                                    destPort_, new_sport_, conn, sport, 
                                    dstAddr, dport, pkt_Pri, hostMarker_Pri, 
                                    daddr_P, hostidx_P, hidx_Pr, otherEntry_P, 
                                    i_P, indicies_P, portDomain_P, 
                                    sourcePort_P, destPort_P, new_sport_P, 
                                    depth_Pr, pkt_Priv, conn_Pr, 
                                    hostMarker_Priv, daddr_Pr, hostidx_Pr, 
                                    hidx_Pri, otherEntry_Pr, i_Pr, indicies_Pr, 
                                    portDomain_Pr, sourcePort_Pr, destPort_Pr, 
                                    new_sport_Pr, pkt_PrivT, conn_Pri, 
                                    hostMarker_PrivT, daddr_Pri, hostidx_Pri, 
                                    hidx_Priv, otherEntry_Pri, i_Pri, 
                                    indicies_Pri, portDomain_Pri, 
                                    sourcePort_Pri, destPort_Pri, 
                                    new_sport_Pri, depth_C, connhost, port, 
                                    host_Co, hidx_Con, host_idx, pidx, 
                                    port_idx, depth_Di, ip_D, host_Di, 
                                    connDomain, cidx, conn_Dis, depth_Pu, 
                                    pkt_Pu, ipkt_Pu, entry_Pu, conn_Pub, 
                                    hostMarker_Pu, ip_idx_Pu, ipidx_Pu, ip_Pub, 
                                    host_Pub, depth_Pri, pkt_PrivTo, conn_Priv, 
                                    hostMarker_PrivTo, daddr_Priv, 
                                    hostidx_Priv, hidx_PrivT, otherEntry_Priv, 
                                    i_Priv, indicies_Priv, portDomain_Priv, 
                                    sourcePort_Priv, destPort_Priv, 
                                    new_sport_Priv, good, depth_E, i_E, j_, 
                                    ip_E, host_E, indecies_, depth_Ev, i_Ev, 
                                    j_E, ip_Ev, host_Ev, indecies_E, i_C, i_Ch, 
                                    depth_Pub, pkt_Pub, ipkt_Pub, entry_Pub, 
                                    conn_PubT, hostMarker_Pub, ip_idx_Pub, 
                                    ipidx_Pub, ip_PubT, host_PubT, depth_Priv, 
                                    pkt_PrivToP, conn_PrivT, 
                                    hostMarker_PrivToP, daddr, hostidx, hidx, 
                                    otherEntry, i_PrivT, indicies, portDomain, 
                                    sourcePort, destPort, new_sport, 
                                    depth_PubT, ipkt, entry, conn_PubTo, 
                                    hostMarker, ip_idx, ipidx, ip_PubTo, 
                                    host_PubTo, depth, i_Eve, j, ip_Eve, 
                                    host_Eve, indecies, i, aa >>

connectRet_(self) == /\ pc[self] = "connectRet_"
                     /\ pc' = [pc EXCEPT ![self] = Head(stack[self]).pc]
                     /\ host_C' = [host_C EXCEPT ![self] = Head(stack[self]).host_C]
                     /\ hidx_Co' = [hidx_Co EXCEPT ![self] = Head(stack[self]).hidx_Co]
                     /\ host_idx_Co' = [host_idx_Co EXCEPT ![self] = Head(stack[self]).host_idx_Co]
                     /\ pidx_Co' = [pidx_Co EXCEPT ![self] = Head(stack[self]).pidx_Co]
                     /\ port_idx_Co' = [port_idx_Co EXCEPT ![self] = Head(stack[self]).port_idx_Co]
                     /\ depth_C' = [depth_C EXCEPT ![self] = Head(stack[self]).depth_C]
                     /\ stack' = [stack EXCEPT ![self] = Tail(stack[self])]
                     /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, Bb, 
                                     Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, Ll, 
                                     Mm, Nn, Oo, Pp, Qq, Rr, Ss, Tt, Uu, Vv, 
                                     Ww, Xx, Yy, Zz, H1, H2, MaxPorts, EP1, 
                                     PortMap1, EP2, PortMap2, TableFull, 
                                     EvictionReroute, PortScanInv, ATIPInv, 
                                     MaxTableSize, hosts, FreeHosts, UsedHosts, 
                                     Ports, ExtraPorts, ExtraExtraPorts, T, 
                                     FreeIPs, PrivIPs, PubIPs, PortSpace, 
                                     UsedIPs, Connections, SendQueue, RcvQueue, 
                                     MAX, Marker1, Marker2, CmdConnect, 
                                     CmdDisconnect, PortSpaceFull, depth_, 
                                     host_, hidx_, host_idx_, pidx_, port_idx_, 
                                     depth_D, ip_, host_D, connDomain_, cidx_, 
                                     conn_, host_Con, ip_C, hidx_C, host_idx_C, 
                                     pidx_C, port_idx_C, host_Dis, ip_Di, 
                                     connDomain_D, cidx_D, conn_D, host, ip, 
                                     connDomain_Di, cidx_Di, conn_Di, depth_P, 
                                     pkt_, ipkt_, entry_, conn_P, hostMarker_, 
                                     ip_idx_, ipidx_, ip_P, host_P, pkt_P, 
                                     ipkt_P, entry_P, conn_Pu, hostMarker_P, 
                                     ip_idx_P, ipidx_P, ip_Pu, host_Pu, IP, 
                                     conn_PrivTo, sport_, dstAddr_, dport_, 
                                     pkt_Pr, hostMarker_Pr, daddr_, hostidx_, 
                                     hidx_P, otherEntry_, i_, indicies_, 
                                     portDomain_, sourcePort_, destPort_, 
                                     new_sport_, conn, sport, dstAddr, dport, 
                                     pkt_Pri, hostMarker_Pri, daddr_P, 
                                     hostidx_P, hidx_Pr, otherEntry_P, i_P, 
                                     indicies_P, portDomain_P, sourcePort_P, 
                                     destPort_P, new_sport_P, depth_Pr, 
                                     pkt_Priv, conn_Pr, hostMarker_Priv, 
                                     daddr_Pr, hostidx_Pr, hidx_Pri, 
                                     otherEntry_Pr, i_Pr, indicies_Pr, 
                                     portDomain_Pr, sourcePort_Pr, destPort_Pr, 
                                     new_sport_Pr, pkt_PrivT, conn_Pri, 
                                     hostMarker_PrivT, daddr_Pri, hostidx_Pri, 
                                     hidx_Priv, otherEntry_Pri, i_Pri, 
                                     indicies_Pri, portDomain_Pri, 
                                     sourcePort_Pri, destPort_Pri, 
                                     new_sport_Pri, connhost, port, host_Co, 
                                     hidx_Con, host_idx, pidx, port_idx, 
                                     depth_Di, ip_D, host_Di, connDomain, cidx, 
                                     conn_Dis, depth_Pu, pkt_Pu, ipkt_Pu, 
                                     entry_Pu, conn_Pub, hostMarker_Pu, 
                                     ip_idx_Pu, ipidx_Pu, ip_Pub, host_Pub, 
                                     depth_Pri, pkt_PrivTo, conn_Priv, 
                                     hostMarker_PrivTo, daddr_Priv, 
                                     hostidx_Priv, hidx_PrivT, otherEntry_Priv, 
                                     i_Priv, indicies_Priv, portDomain_Priv, 
                                     sourcePort_Priv, destPort_Priv, 
                                     new_sport_Priv, good, depth_E, i_E, j_, 
                                     ip_E, host_E, indecies_, depth_Ev, i_Ev, 
                                     j_E, ip_Ev, host_Ev, indecies_E, i_C, 
                                     i_Ch, depth_Pub, pkt_Pub, ipkt_Pub, 
                                     entry_Pub, conn_PubT, hostMarker_Pub, 
                                     ip_idx_Pub, ipidx_Pub, ip_PubT, host_PubT, 
                                     depth_Priv, pkt_PrivToP, conn_PrivT, 
                                     hostMarker_PrivToP, daddr, hostidx, hidx, 
                                     otherEntry, i_PrivT, indicies, portDomain, 
                                     sourcePort, destPort, new_sport, 
                                     depth_PubT, pkt, ipkt, entry, conn_PubTo, 
                                     hostMarker, ip_idx, ipidx, ip_PubTo, 
                                     host_PubTo, depth, i_Eve, j, ip_Eve, 
                                     host_Eve, indecies, i, aa >>

Connect(self) == connectStart(self) \/ connectIf_(self)
                    \/ connectRet_(self)

connectIf(self) == /\ pc[self] = "connectIf"
                   /\ IF Len(FreeHosts) > 0
                         THEN /\ FreeHosts' = SelectSeq(FreeHosts, LAMBDA a: a /= host_Co[self])
                              /\ UsedHosts' = Append(UsedHosts, host_Co[self])
                              /\ port_idx' = [port_idx EXCEPT ![self] = DOMAIN Ports]
                              /\ pidx' = [pidx EXCEPT ![self] = CHOOSE p \in port_idx'[self] : TRUE]
                              /\ pkt' = [pkt EXCEPT ![self] = [ saddr |-> connhost[self], sport |-> port[self],
                                                                daddr |-> N,    dport |-> N,
                                                                cmd |-> CmdConnect,
                                                                host_marker |-> host_Co[self]]]
                              /\ SendQueue' = Append(SendQueue, pkt'[self])
                         ELSE /\ TRUE
                              /\ UNCHANGED << FreeHosts, UsedHosts, SendQueue, 
                                              pidx, port_idx, pkt >>
                   /\ pc' = [pc EXCEPT ![self] = "connectRet"]
                   /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, Bb, 
                                   Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, Ll, Mm, 
                                   Nn, Oo, Pp, Qq, Rr, Ss, Tt, Uu, Vv, Ww, Xx, 
                                   Yy, Zz, H1, H2, MaxPorts, EP1, PortMap1, 
                                   EP2, PortMap2, TableFull, EvictionReroute, 
                                   PortScanInv, ATIPInv, MaxTableSize, hosts, 
                                   Ports, ExtraPorts, ExtraExtraPorts, T, 
                                   FreeIPs, PrivIPs, PubIPs, PortSpace, 
                                   UsedIPs, Connections, RcvQueue, MAX, 
                                   Marker1, Marker2, CmdConnect, CmdDisconnect, 
                                   PortSpaceFull, stack, depth_, host_, hidx_, 
                                   host_idx_, pidx_, port_idx_, depth_D, ip_, 
                                   host_D, connDomain_, cidx_, conn_, host_Con, 
                                   ip_C, hidx_C, host_idx_C, pidx_C, 
                                   port_idx_C, host_Dis, ip_Di, connDomain_D, 
                                   cidx_D, conn_D, host, ip, connDomain_Di, 
                                   cidx_Di, conn_Di, depth_P, pkt_, ipkt_, 
                                   entry_, conn_P, hostMarker_, ip_idx_, 
                                   ipidx_, ip_P, host_P, pkt_P, ipkt_P, 
                                   entry_P, conn_Pu, hostMarker_P, ip_idx_P, 
                                   ipidx_P, ip_Pu, host_Pu, IP, conn_PrivTo, 
                                   sport_, dstAddr_, dport_, pkt_Pr, 
                                   hostMarker_Pr, daddr_, hostidx_, hidx_P, 
                                   otherEntry_, i_, indicies_, portDomain_, 
                                   sourcePort_, destPort_, new_sport_, conn, 
                                   sport, dstAddr, dport, pkt_Pri, 
                                   hostMarker_Pri, daddr_P, hostidx_P, hidx_Pr, 
                                   otherEntry_P, i_P, indicies_P, portDomain_P, 
                                   sourcePort_P, destPort_P, new_sport_P, 
                                   depth_Pr, pkt_Priv, conn_Pr, 
                                   hostMarker_Priv, daddr_Pr, hostidx_Pr, 
                                   hidx_Pri, otherEntry_Pr, i_Pr, indicies_Pr, 
                                   portDomain_Pr, sourcePort_Pr, destPort_Pr, 
                                   new_sport_Pr, pkt_PrivT, conn_Pri, 
                                   hostMarker_PrivT, daddr_Pri, hostidx_Pri, 
                                   hidx_Priv, otherEntry_Pri, i_Pri, 
                                   indicies_Pri, portDomain_Pri, 
                                   sourcePort_Pri, destPort_Pri, new_sport_Pri, 
                                   depth_C, host_C, hidx_Co, host_idx_Co, 
                                   pidx_Co, port_idx_Co, connhost, port, 
                                   host_Co, hidx_Con, host_idx, depth_Di, ip_D, 
                                   host_Di, connDomain, cidx, conn_Dis, 
                                   depth_Pu, pkt_Pu, ipkt_Pu, entry_Pu, 
                                   conn_Pub, hostMarker_Pu, ip_idx_Pu, 
                                   ipidx_Pu, ip_Pub, host_Pub, depth_Pri, 
                                   pkt_PrivTo, conn_Priv, hostMarker_PrivTo, 
                                   daddr_Priv, hostidx_Priv, hidx_PrivT, 
                                   otherEntry_Priv, i_Priv, indicies_Priv, 
                                   portDomain_Priv, sourcePort_Priv, 
                                   destPort_Priv, new_sport_Priv, good, 
                                   depth_E, i_E, j_, ip_E, host_E, indecies_, 
                                   depth_Ev, i_Ev, j_E, ip_Ev, host_Ev, 
                                   indecies_E, i_C, i_Ch, depth_Pub, pkt_Pub, 
                                   ipkt_Pub, entry_Pub, conn_PubT, 
                                   hostMarker_Pub, ip_idx_Pub, ipidx_Pub, 
                                   ip_PubT, host_PubT, depth_Priv, pkt_PrivToP, 
                                   conn_PrivT, hostMarker_PrivToP, daddr, 
                                   hostidx, hidx, otherEntry, i_PrivT, 
                                   indicies, portDomain, sourcePort, destPort, 
                                   new_sport, depth_PubT, ipkt, entry, 
                                   conn_PubTo, hostMarker, ip_idx, ipidx, 
                                   ip_PubTo, host_PubTo, depth, i_Eve, j, 
                                   ip_Eve, host_Eve, indecies, i, aa >>

connectRet(self) == /\ pc[self] = "connectRet"
                    /\ pc' = [pc EXCEPT ![self] = Head(stack[self]).pc]
                    /\ host_Co' = [host_Co EXCEPT ![self] = Head(stack[self]).host_Co]
                    /\ hidx_Con' = [hidx_Con EXCEPT ![self] = Head(stack[self]).hidx_Con]
                    /\ host_idx' = [host_idx EXCEPT ![self] = Head(stack[self]).host_idx]
                    /\ pidx' = [pidx EXCEPT ![self] = Head(stack[self]).pidx]
                    /\ port_idx' = [port_idx EXCEPT ![self] = Head(stack[self]).port_idx]
                    /\ connhost' = [connhost EXCEPT ![self] = Head(stack[self]).connhost]
                    /\ port' = [port EXCEPT ![self] = Head(stack[self]).port]
                    /\ stack' = [stack EXCEPT ![self] = Tail(stack[self])]
                    /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, Bb, 
                                    Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, Ll, Mm, 
                                    Nn, Oo, Pp, Qq, Rr, Ss, Tt, Uu, Vv, Ww, Xx, 
                                    Yy, Zz, H1, H2, MaxPorts, EP1, PortMap1, 
                                    EP2, PortMap2, TableFull, EvictionReroute, 
                                    PortScanInv, ATIPInv, MaxTableSize, hosts, 
                                    FreeHosts, UsedHosts, Ports, ExtraPorts, 
                                    ExtraExtraPorts, T, FreeIPs, PrivIPs, 
                                    PubIPs, PortSpace, UsedIPs, Connections, 
                                    SendQueue, RcvQueue, MAX, Marker1, Marker2, 
                                    CmdConnect, CmdDisconnect, PortSpaceFull, 
                                    depth_, host_, hidx_, host_idx_, pidx_, 
                                    port_idx_, depth_D, ip_, host_D, 
                                    connDomain_, cidx_, conn_, host_Con, ip_C, 
                                    hidx_C, host_idx_C, pidx_C, port_idx_C, 
                                    host_Dis, ip_Di, connDomain_D, cidx_D, 
                                    conn_D, host, ip, connDomain_Di, cidx_Di, 
                                    conn_Di, depth_P, pkt_, ipkt_, entry_, 
                                    conn_P, hostMarker_, ip_idx_, ipidx_, ip_P, 
                                    host_P, pkt_P, ipkt_P, entry_P, conn_Pu, 
                                    hostMarker_P, ip_idx_P, ipidx_P, ip_Pu, 
                                    host_Pu, IP, conn_PrivTo, sport_, dstAddr_, 
                                    dport_, pkt_Pr, hostMarker_Pr, daddr_, 
                                    hostidx_, hidx_P, otherEntry_, i_, 
                                    indicies_, portDomain_, sourcePort_, 
                                    destPort_, new_sport_, conn, sport, 
                                    dstAddr, dport, pkt_Pri, hostMarker_Pri, 
                                    daddr_P, hostidx_P, hidx_Pr, otherEntry_P, 
                                    i_P, indicies_P, portDomain_P, 
                                    sourcePort_P, destPort_P, new_sport_P, 
                                    depth_Pr, pkt_Priv, conn_Pr, 
                                    hostMarker_Priv, daddr_Pr, hostidx_Pr, 
                                    hidx_Pri, otherEntry_Pr, i_Pr, indicies_Pr, 
                                    portDomain_Pr, sourcePort_Pr, destPort_Pr, 
                                    new_sport_Pr, pkt_PrivT, conn_Pri, 
                                    hostMarker_PrivT, daddr_Pri, hostidx_Pri, 
                                    hidx_Priv, otherEntry_Pri, i_Pri, 
                                    indicies_Pri, portDomain_Pri, 
                                    sourcePort_Pri, destPort_Pri, 
                                    new_sport_Pri, depth_C, host_C, hidx_Co, 
                                    host_idx_Co, pidx_Co, port_idx_Co, 
                                    depth_Di, ip_D, host_Di, connDomain, cidx, 
                                    conn_Dis, depth_Pu, pkt_Pu, ipkt_Pu, 
                                    entry_Pu, conn_Pub, hostMarker_Pu, 
                                    ip_idx_Pu, ipidx_Pu, ip_Pub, host_Pub, 
                                    depth_Pri, pkt_PrivTo, conn_Priv, 
                                    hostMarker_PrivTo, daddr_Priv, 
                                    hostidx_Priv, hidx_PrivT, otherEntry_Priv, 
                                    i_Priv, indicies_Priv, portDomain_Priv, 
                                    sourcePort_Priv, destPort_Priv, 
                                    new_sport_Priv, good, depth_E, i_E, j_, 
                                    ip_E, host_E, indecies_, depth_Ev, i_Ev, 
                                    j_E, ip_Ev, host_Ev, indecies_E, i_C, i_Ch, 
                                    depth_Pub, pkt_Pub, ipkt_Pub, entry_Pub, 
                                    conn_PubT, hostMarker_Pub, ip_idx_Pub, 
                                    ipidx_Pub, ip_PubT, host_PubT, depth_Priv, 
                                    pkt_PrivToP, conn_PrivT, 
                                    hostMarker_PrivToP, daddr, hostidx, hidx, 
                                    otherEntry, i_PrivT, indicies, portDomain, 
                                    sourcePort, destPort, new_sport, 
                                    depth_PubT, pkt, ipkt, entry, conn_PubTo, 
                                    hostMarker, ip_idx, ipidx, ip_PubTo, 
                                    host_PubTo, depth, i_Eve, j, ip_Eve, 
                                    host_Eve, indecies, i, aa >>

ConnectMan3(self) == connectIf(self) \/ connectRet(self)

disconnectStart(self) == /\ pc[self] = "disconnectStart"
                         /\ /\ depth_Ev' = [depth_Ev EXCEPT ![self] = depth_Di[self]]
                            /\ stack' = [stack EXCEPT ![self] = << [ procedure |->  "EventSequence",
                                                                     pc        |->  "disconnectIf",
                                                                     i_Ev      |->  i_Ev[self],
                                                                     j_E       |->  j_E[self],
                                                                     ip_Ev     |->  ip_Ev[self],
                                                                     host_Ev   |->  host_Ev[self],
                                                                     indecies_E |->  indecies_E[self],
                                                                     depth_Ev  |->  depth_Ev[self] ] >>
                                                                 \o stack[self]]
                         /\ i_Ev' = [i_Ev EXCEPT ![self] = defaultInitValue]
                         /\ j_E' = [j_E EXCEPT ![self] = defaultInitValue]
                         /\ ip_Ev' = [ip_Ev EXCEPT ![self] = defaultInitValue]
                         /\ host_Ev' = [host_Ev EXCEPT ![self] = defaultInitValue]
                         /\ indecies_E' = [indecies_E EXCEPT ![self] = defaultInitValue]
                         /\ pc' = [pc EXCEPT ![self] = "evtSeqStart_"]
                         /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, 
                                         Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, 
                                         Kk, Ll, Mm, Nn, Oo, Pp, Qq, Rr, Ss, 
                                         Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, H2, 
                                         MaxPorts, EP1, PortMap1, EP2, 
                                         PortMap2, TableFull, EvictionReroute, 
                                         PortScanInv, ATIPInv, MaxTableSize, 
                                         hosts, FreeHosts, UsedHosts, Ports, 
                                         ExtraPorts, ExtraExtraPorts, T, 
                                         FreeIPs, PrivIPs, PubIPs, PortSpace, 
                                         UsedIPs, Connections, SendQueue, 
                                         RcvQueue, MAX, Marker1, Marker2, 
                                         CmdConnect, CmdDisconnect, 
                                         PortSpaceFull, depth_, host_, hidx_, 
                                         host_idx_, pidx_, port_idx_, depth_D, 
                                         ip_, host_D, connDomain_, cidx_, 
                                         conn_, host_Con, ip_C, hidx_C, 
                                         host_idx_C, pidx_C, port_idx_C, 
                                         host_Dis, ip_Di, connDomain_D, cidx_D, 
                                         conn_D, host, ip, connDomain_Di, 
                                         cidx_Di, conn_Di, depth_P, pkt_, 
                                         ipkt_, entry_, conn_P, hostMarker_, 
                                         ip_idx_, ipidx_, ip_P, host_P, pkt_P, 
                                         ipkt_P, entry_P, conn_Pu, 
                                         hostMarker_P, ip_idx_P, ipidx_P, 
                                         ip_Pu, host_Pu, IP, conn_PrivTo, 
                                         sport_, dstAddr_, dport_, pkt_Pr, 
                                         hostMarker_Pr, daddr_, hostidx_, 
                                         hidx_P, otherEntry_, i_, indicies_, 
                                         portDomain_, sourcePort_, destPort_, 
                                         new_sport_, conn, sport, dstAddr, 
                                         dport, pkt_Pri, hostMarker_Pri, 
                                         daddr_P, hostidx_P, hidx_Pr, 
                                         otherEntry_P, i_P, indicies_P, 
                                         portDomain_P, sourcePort_P, 
                                         destPort_P, new_sport_P, depth_Pr, 
                                         pkt_Priv, conn_Pr, hostMarker_Priv, 
                                         daddr_Pr, hostidx_Pr, hidx_Pri, 
                                         otherEntry_Pr, i_Pr, indicies_Pr, 
                                         portDomain_Pr, sourcePort_Pr, 
                                         destPort_Pr, new_sport_Pr, pkt_PrivT, 
                                         conn_Pri, hostMarker_PrivT, daddr_Pri, 
                                         hostidx_Pri, hidx_Priv, 
                                         otherEntry_Pri, i_Pri, indicies_Pri, 
                                         portDomain_Pri, sourcePort_Pri, 
                                         destPort_Pri, new_sport_Pri, depth_C, 
                                         host_C, hidx_Co, host_idx_Co, pidx_Co, 
                                         port_idx_Co, connhost, port, host_Co, 
                                         hidx_Con, host_idx, pidx, port_idx, 
                                         depth_Di, ip_D, host_Di, connDomain, 
                                         cidx, conn_Dis, depth_Pu, pkt_Pu, 
                                         ipkt_Pu, entry_Pu, conn_Pub, 
                                         hostMarker_Pu, ip_idx_Pu, ipidx_Pu, 
                                         ip_Pub, host_Pub, depth_Pri, 
                                         pkt_PrivTo, conn_Priv, 
                                         hostMarker_PrivTo, daddr_Priv, 
                                         hostidx_Priv, hidx_PrivT, 
                                         otherEntry_Priv, i_Priv, 
                                         indicies_Priv, portDomain_Priv, 
                                         sourcePort_Priv, destPort_Priv, 
                                         new_sport_Priv, good, depth_E, i_E, 
                                         j_, ip_E, host_E, indecies_, i_C, 
                                         i_Ch, depth_Pub, pkt_Pub, ipkt_Pub, 
                                         entry_Pub, conn_PubT, hostMarker_Pub, 
                                         ip_idx_Pub, ipidx_Pub, ip_PubT, 
                                         host_PubT, depth_Priv, pkt_PrivToP, 
                                         conn_PrivT, hostMarker_PrivToP, daddr, 
                                         hostidx, hidx, otherEntry, i_PrivT, 
                                         indicies, portDomain, sourcePort, 
                                         destPort, new_sport, depth_PubT, pkt, 
                                         ipkt, entry, conn_PubTo, hostMarker, 
                                         ip_idx, ipidx, ip_PubTo, host_PubTo, 
                                         depth, i_Eve, j, ip_Eve, host_Eve, 
                                         indecies, i, aa >>

disconnectIf(self) == /\ pc[self] = "disconnectIf"
                      /\ IF Len(Connections) > 0
                            THEN /\ connDomain' = [connDomain EXCEPT ![self] = DOMAIN Connections]
                                 /\ cidx' = [cidx EXCEPT ![self] = CHOOSE c \in connDomain'[self] : TRUE]
                                 /\ conn_Dis' = [conn_Dis EXCEPT ![self] = Connections[cidx'[self]]]
                                 /\ ip_D' = [ip_D EXCEPT ![self] = conn_Dis'[self][1]]
                                 /\ host_Di' = [host_Di EXCEPT ![self] = conn_Dis'[self][2]]
                                 /\ PrintT(<< "Disconnect- Before:", host_Di'[self], ip_D'[self], Connections>>)
                                 /\ Connections' = SelectSeq(Connections, LAMBDA cc: Head(cc)/=ip_D'[self])
                                 /\ UsedIPs' = SelectSeq(UsedIPs, LAMBDA ccc: ccc/=ip_D'[self])
                                 /\ FreeIPs' = Append(FreeIPs, ip_D'[self])
                                 /\ pc' = [pc EXCEPT ![self] = "disconnectPurgeOrphans1"]
                            ELSE /\ pc' = [pc EXCEPT ![self] = "disconnectRet"]
                                 /\ UNCHANGED << FreeIPs, UsedIPs, Connections, 
                                                 ip_D, host_Di, connDomain, 
                                                 cidx, conn_Dis >>
                      /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, Bb, 
                                      Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, Ll, 
                                      Mm, Nn, Oo, Pp, Qq, Rr, Ss, Tt, Uu, Vv, 
                                      Ww, Xx, Yy, Zz, H1, H2, MaxPorts, EP1, 
                                      PortMap1, EP2, PortMap2, TableFull, 
                                      EvictionReroute, PortScanInv, ATIPInv, 
                                      MaxTableSize, hosts, FreeHosts, 
                                      UsedHosts, Ports, ExtraPorts, 
                                      ExtraExtraPorts, T, PrivIPs, PubIPs, 
                                      PortSpace, SendQueue, RcvQueue, MAX, 
                                      Marker1, Marker2, CmdConnect, 
                                      CmdDisconnect, PortSpaceFull, stack, 
                                      depth_, host_, hidx_, host_idx_, pidx_, 
                                      port_idx_, depth_D, ip_, host_D, 
                                      connDomain_, cidx_, conn_, host_Con, 
                                      ip_C, hidx_C, host_idx_C, pidx_C, 
                                      port_idx_C, host_Dis, ip_Di, 
                                      connDomain_D, cidx_D, conn_D, host, ip, 
                                      connDomain_Di, cidx_Di, conn_Di, depth_P, 
                                      pkt_, ipkt_, entry_, conn_P, hostMarker_, 
                                      ip_idx_, ipidx_, ip_P, host_P, pkt_P, 
                                      ipkt_P, entry_P, conn_Pu, hostMarker_P, 
                                      ip_idx_P, ipidx_P, ip_Pu, host_Pu, IP, 
                                      conn_PrivTo, sport_, dstAddr_, dport_, 
                                      pkt_Pr, hostMarker_Pr, daddr_, hostidx_, 
                                      hidx_P, otherEntry_, i_, indicies_, 
                                      portDomain_, sourcePort_, destPort_, 
                                      new_sport_, conn, sport, dstAddr, dport, 
                                      pkt_Pri, hostMarker_Pri, daddr_P, 
                                      hostidx_P, hidx_Pr, otherEntry_P, i_P, 
                                      indicies_P, portDomain_P, sourcePort_P, 
                                      destPort_P, new_sport_P, depth_Pr, 
                                      pkt_Priv, conn_Pr, hostMarker_Priv, 
                                      daddr_Pr, hostidx_Pr, hidx_Pri, 
                                      otherEntry_Pr, i_Pr, indicies_Pr, 
                                      portDomain_Pr, sourcePort_Pr, 
                                      destPort_Pr, new_sport_Pr, pkt_PrivT, 
                                      conn_Pri, hostMarker_PrivT, daddr_Pri, 
                                      hostidx_Pri, hidx_Priv, otherEntry_Pri, 
                                      i_Pri, indicies_Pri, portDomain_Pri, 
                                      sourcePort_Pri, destPort_Pri, 
                                      new_sport_Pri, depth_C, host_C, hidx_Co, 
                                      host_idx_Co, pidx_Co, port_idx_Co, 
                                      connhost, port, host_Co, hidx_Con, 
                                      host_idx, pidx, port_idx, depth_Di, 
                                      depth_Pu, pkt_Pu, ipkt_Pu, entry_Pu, 
                                      conn_Pub, hostMarker_Pu, ip_idx_Pu, 
                                      ipidx_Pu, ip_Pub, host_Pub, depth_Pri, 
                                      pkt_PrivTo, conn_Priv, hostMarker_PrivTo, 
                                      daddr_Priv, hostidx_Priv, hidx_PrivT, 
                                      otherEntry_Priv, i_Priv, indicies_Priv, 
                                      portDomain_Priv, sourcePort_Priv, 
                                      destPort_Priv, new_sport_Priv, good, 
                                      depth_E, i_E, j_, ip_E, host_E, 
                                      indecies_, depth_Ev, i_Ev, j_E, ip_Ev, 
                                      host_Ev, indecies_E, i_C, i_Ch, 
                                      depth_Pub, pkt_Pub, ipkt_Pub, entry_Pub, 
                                      conn_PubT, hostMarker_Pub, ip_idx_Pub, 
                                      ipidx_Pub, ip_PubT, host_PubT, 
                                      depth_Priv, pkt_PrivToP, conn_PrivT, 
                                      hostMarker_PrivToP, daddr, hostidx, hidx, 
                                      otherEntry, i_PrivT, indicies, 
                                      portDomain, sourcePort, destPort, 
                                      new_sport, depth_PubT, pkt, ipkt, entry, 
                                      conn_PubTo, hostMarker, ip_idx, ipidx, 
                                      ip_PubTo, host_PubTo, depth, i_Eve, j, 
                                      ip_Eve, host_Eve, indecies, i, aa >>

disconnectPurgeOrphans1(self) == /\ pc[self] = "disconnectPurgeOrphans1"
                                 /\ T' = SelectSeq(T, LAMBDA e: e.orig.saddr /= ip_D[self])
                                 /\ pc' = [pc EXCEPT ![self] = "disconnectPurgeOrphans2"]
                                 /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, 
                                                 NN, Aa, Bb, Cc, Dd, Ee, Ff, 
                                                 Gg, Hh, Ii, Jj, Kk, Ll, Mm, 
                                                 Nn, Oo, Pp, Qq, Rr, Ss, Tt, 
                                                 Uu, Vv, Ww, Xx, Yy, Zz, H1, 
                                                 H2, MaxPorts, EP1, PortMap1, 
                                                 EP2, PortMap2, TableFull, 
                                                 EvictionReroute, PortScanInv, 
                                                 ATIPInv, MaxTableSize, hosts, 
                                                 FreeHosts, UsedHosts, Ports, 
                                                 ExtraPorts, ExtraExtraPorts, 
                                                 FreeIPs, PrivIPs, PubIPs, 
                                                 PortSpace, UsedIPs, 
                                                 Connections, SendQueue, 
                                                 RcvQueue, MAX, Marker1, 
                                                 Marker2, CmdConnect, 
                                                 CmdDisconnect, PortSpaceFull, 
                                                 stack, depth_, host_, hidx_, 
                                                 host_idx_, pidx_, port_idx_, 
                                                 depth_D, ip_, host_D, 
                                                 connDomain_, cidx_, conn_, 
                                                 host_Con, ip_C, hidx_C, 
                                                 host_idx_C, pidx_C, 
                                                 port_idx_C, host_Dis, ip_Di, 
                                                 connDomain_D, cidx_D, conn_D, 
                                                 host, ip, connDomain_Di, 
                                                 cidx_Di, conn_Di, depth_P, 
                                                 pkt_, ipkt_, entry_, conn_P, 
                                                 hostMarker_, ip_idx_, ipidx_, 
                                                 ip_P, host_P, pkt_P, ipkt_P, 
                                                 entry_P, conn_Pu, 
                                                 hostMarker_P, ip_idx_P, 
                                                 ipidx_P, ip_Pu, host_Pu, IP, 
                                                 conn_PrivTo, sport_, dstAddr_, 
                                                 dport_, pkt_Pr, hostMarker_Pr, 
                                                 daddr_, hostidx_, hidx_P, 
                                                 otherEntry_, i_, indicies_, 
                                                 portDomain_, sourcePort_, 
                                                 destPort_, new_sport_, conn, 
                                                 sport, dstAddr, dport, 
                                                 pkt_Pri, hostMarker_Pri, 
                                                 daddr_P, hostidx_P, hidx_Pr, 
                                                 otherEntry_P, i_P, indicies_P, 
                                                 portDomain_P, sourcePort_P, 
                                                 destPort_P, new_sport_P, 
                                                 depth_Pr, pkt_Priv, conn_Pr, 
                                                 hostMarker_Priv, daddr_Pr, 
                                                 hostidx_Pr, hidx_Pri, 
                                                 otherEntry_Pr, i_Pr, 
                                                 indicies_Pr, portDomain_Pr, 
                                                 sourcePort_Pr, destPort_Pr, 
                                                 new_sport_Pr, pkt_PrivT, 
                                                 conn_Pri, hostMarker_PrivT, 
                                                 daddr_Pri, hostidx_Pri, 
                                                 hidx_Priv, otherEntry_Pri, 
                                                 i_Pri, indicies_Pri, 
                                                 portDomain_Pri, 
                                                 sourcePort_Pri, destPort_Pri, 
                                                 new_sport_Pri, depth_C, 
                                                 host_C, hidx_Co, host_idx_Co, 
                                                 pidx_Co, port_idx_Co, 
                                                 connhost, port, host_Co, 
                                                 hidx_Con, host_idx, pidx, 
                                                 port_idx, depth_Di, ip_D, 
                                                 host_Di, connDomain, cidx, 
                                                 conn_Dis, depth_Pu, pkt_Pu, 
                                                 ipkt_Pu, entry_Pu, conn_Pub, 
                                                 hostMarker_Pu, ip_idx_Pu, 
                                                 ipidx_Pu, ip_Pub, host_Pub, 
                                                 depth_Pri, pkt_PrivTo, 
                                                 conn_Priv, hostMarker_PrivTo, 
                                                 daddr_Priv, hostidx_Priv, 
                                                 hidx_PrivT, otherEntry_Priv, 
                                                 i_Priv, indicies_Priv, 
                                                 portDomain_Priv, 
                                                 sourcePort_Priv, 
                                                 destPort_Priv, new_sport_Priv, 
                                                 good, depth_E, i_E, j_, ip_E, 
                                                 host_E, indecies_, depth_Ev, 
                                                 i_Ev, j_E, ip_Ev, host_Ev, 
                                                 indecies_E, i_C, i_Ch, 
                                                 depth_Pub, pkt_Pub, ipkt_Pub, 
                                                 entry_Pub, conn_PubT, 
                                                 hostMarker_Pub, ip_idx_Pub, 
                                                 ipidx_Pub, ip_PubT, host_PubT, 
                                                 depth_Priv, pkt_PrivToP, 
                                                 conn_PrivT, 
                                                 hostMarker_PrivToP, daddr, 
                                                 hostidx, hidx, otherEntry, 
                                                 i_PrivT, indicies, portDomain, 
                                                 sourcePort, destPort, 
                                                 new_sport, depth_PubT, pkt, 
                                                 ipkt, entry, conn_PubTo, 
                                                 hostMarker, ip_idx, ipidx, 
                                                 ip_PubTo, host_PubTo, depth, 
                                                 i_Eve, j, ip_Eve, host_Eve, 
                                                 indecies, i, aa >>

disconnectPurgeOrphans2(self) == /\ pc[self] = "disconnectPurgeOrphans2"
                                 /\ T' = SelectSeq(T, LAMBDA e: e.orig.saddr /= host_Di[self])
                                 /\ IF host_Di[self]=H1
                                       THEN /\ PortMap1' = <<>>
                                            /\ UNCHANGED PortMap2
                                       ELSE /\ PortMap2' = <<>>
                                            /\ UNCHANGED PortMap1
                                 /\ FreeHosts' = Append(FreeHosts, host_Di[self])
                                 /\ UsedHosts' = SelectSeq(UsedHosts, LAMBDA m: m /= host_Di[self])
                                 /\ PrintT(<< "Disconnect- After: ", host_Di[self], ip_D[self], Connections>>)
                                 /\ pc' = [pc EXCEPT ![self] = "disconnectRet"]
                                 /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, 
                                                 NN, Aa, Bb, Cc, Dd, Ee, Ff, 
                                                 Gg, Hh, Ii, Jj, Kk, Ll, Mm, 
                                                 Nn, Oo, Pp, Qq, Rr, Ss, Tt, 
                                                 Uu, Vv, Ww, Xx, Yy, Zz, H1, 
                                                 H2, MaxPorts, EP1, EP2, 
                                                 TableFull, EvictionReroute, 
                                                 PortScanInv, ATIPInv, 
                                                 MaxTableSize, hosts, Ports, 
                                                 ExtraPorts, ExtraExtraPorts, 
                                                 FreeIPs, PrivIPs, PubIPs, 
                                                 PortSpace, UsedIPs, 
                                                 Connections, SendQueue, 
                                                 RcvQueue, MAX, Marker1, 
                                                 Marker2, CmdConnect, 
                                                 CmdDisconnect, PortSpaceFull, 
                                                 stack, depth_, host_, hidx_, 
                                                 host_idx_, pidx_, port_idx_, 
                                                 depth_D, ip_, host_D, 
                                                 connDomain_, cidx_, conn_, 
                                                 host_Con, ip_C, hidx_C, 
                                                 host_idx_C, pidx_C, 
                                                 port_idx_C, host_Dis, ip_Di, 
                                                 connDomain_D, cidx_D, conn_D, 
                                                 host, ip, connDomain_Di, 
                                                 cidx_Di, conn_Di, depth_P, 
                                                 pkt_, ipkt_, entry_, conn_P, 
                                                 hostMarker_, ip_idx_, ipidx_, 
                                                 ip_P, host_P, pkt_P, ipkt_P, 
                                                 entry_P, conn_Pu, 
                                                 hostMarker_P, ip_idx_P, 
                                                 ipidx_P, ip_Pu, host_Pu, IP, 
                                                 conn_PrivTo, sport_, dstAddr_, 
                                                 dport_, pkt_Pr, hostMarker_Pr, 
                                                 daddr_, hostidx_, hidx_P, 
                                                 otherEntry_, i_, indicies_, 
                                                 portDomain_, sourcePort_, 
                                                 destPort_, new_sport_, conn, 
                                                 sport, dstAddr, dport, 
                                                 pkt_Pri, hostMarker_Pri, 
                                                 daddr_P, hostidx_P, hidx_Pr, 
                                                 otherEntry_P, i_P, indicies_P, 
                                                 portDomain_P, sourcePort_P, 
                                                 destPort_P, new_sport_P, 
                                                 depth_Pr, pkt_Priv, conn_Pr, 
                                                 hostMarker_Priv, daddr_Pr, 
                                                 hostidx_Pr, hidx_Pri, 
                                                 otherEntry_Pr, i_Pr, 
                                                 indicies_Pr, portDomain_Pr, 
                                                 sourcePort_Pr, destPort_Pr, 
                                                 new_sport_Pr, pkt_PrivT, 
                                                 conn_Pri, hostMarker_PrivT, 
                                                 daddr_Pri, hostidx_Pri, 
                                                 hidx_Priv, otherEntry_Pri, 
                                                 i_Pri, indicies_Pri, 
                                                 portDomain_Pri, 
                                                 sourcePort_Pri, destPort_Pri, 
                                                 new_sport_Pri, depth_C, 
                                                 host_C, hidx_Co, host_idx_Co, 
                                                 pidx_Co, port_idx_Co, 
                                                 connhost, port, host_Co, 
                                                 hidx_Con, host_idx, pidx, 
                                                 port_idx, depth_Di, ip_D, 
                                                 host_Di, connDomain, cidx, 
                                                 conn_Dis, depth_Pu, pkt_Pu, 
                                                 ipkt_Pu, entry_Pu, conn_Pub, 
                                                 hostMarker_Pu, ip_idx_Pu, 
                                                 ipidx_Pu, ip_Pub, host_Pub, 
                                                 depth_Pri, pkt_PrivTo, 
                                                 conn_Priv, hostMarker_PrivTo, 
                                                 daddr_Priv, hostidx_Priv, 
                                                 hidx_PrivT, otherEntry_Priv, 
                                                 i_Priv, indicies_Priv, 
                                                 portDomain_Priv, 
                                                 sourcePort_Priv, 
                                                 destPort_Priv, new_sport_Priv, 
                                                 good, depth_E, i_E, j_, ip_E, 
                                                 host_E, indecies_, depth_Ev, 
                                                 i_Ev, j_E, ip_Ev, host_Ev, 
                                                 indecies_E, i_C, i_Ch, 
                                                 depth_Pub, pkt_Pub, ipkt_Pub, 
                                                 entry_Pub, conn_PubT, 
                                                 hostMarker_Pub, ip_idx_Pub, 
                                                 ipidx_Pub, ip_PubT, host_PubT, 
                                                 depth_Priv, pkt_PrivToP, 
                                                 conn_PrivT, 
                                                 hostMarker_PrivToP, daddr, 
                                                 hostidx, hidx, otherEntry, 
                                                 i_PrivT, indicies, portDomain, 
                                                 sourcePort, destPort, 
                                                 new_sport, depth_PubT, pkt, 
                                                 ipkt, entry, conn_PubTo, 
                                                 hostMarker, ip_idx, ipidx, 
                                                 ip_PubTo, host_PubTo, depth, 
                                                 i_Eve, j, ip_Eve, host_Eve, 
                                                 indecies, i, aa >>

disconnectRet(self) == /\ pc[self] = "disconnectRet"
                       /\ pc' = [pc EXCEPT ![self] = Head(stack[self]).pc]
                       /\ ip_D' = [ip_D EXCEPT ![self] = Head(stack[self]).ip_D]
                       /\ host_Di' = [host_Di EXCEPT ![self] = Head(stack[self]).host_Di]
                       /\ connDomain' = [connDomain EXCEPT ![self] = Head(stack[self]).connDomain]
                       /\ cidx' = [cidx EXCEPT ![self] = Head(stack[self]).cidx]
                       /\ conn_Dis' = [conn_Dis EXCEPT ![self] = Head(stack[self]).conn_Dis]
                       /\ depth_Di' = [depth_Di EXCEPT ![self] = Head(stack[self]).depth_Di]
                       /\ stack' = [stack EXCEPT ![self] = Tail(stack[self])]
                       /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, 
                                       Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, 
                                       Ll, Mm, Nn, Oo, Pp, Qq, Rr, Ss, Tt, Uu, 
                                       Vv, Ww, Xx, Yy, Zz, H1, H2, MaxPorts, 
                                       EP1, PortMap1, EP2, PortMap2, TableFull, 
                                       EvictionReroute, PortScanInv, ATIPInv, 
                                       MaxTableSize, hosts, FreeHosts, 
                                       UsedHosts, Ports, ExtraPorts, 
                                       ExtraExtraPorts, T, FreeIPs, PrivIPs, 
                                       PubIPs, PortSpace, UsedIPs, Connections, 
                                       SendQueue, RcvQueue, MAX, Marker1, 
                                       Marker2, CmdConnect, CmdDisconnect, 
                                       PortSpaceFull, depth_, host_, hidx_, 
                                       host_idx_, pidx_, port_idx_, depth_D, 
                                       ip_, host_D, connDomain_, cidx_, conn_, 
                                       host_Con, ip_C, hidx_C, host_idx_C, 
                                       pidx_C, port_idx_C, host_Dis, ip_Di, 
                                       connDomain_D, cidx_D, conn_D, host, ip, 
                                       connDomain_Di, cidx_Di, conn_Di, 
                                       depth_P, pkt_, ipkt_, entry_, conn_P, 
                                       hostMarker_, ip_idx_, ipidx_, ip_P, 
                                       host_P, pkt_P, ipkt_P, entry_P, conn_Pu, 
                                       hostMarker_P, ip_idx_P, ipidx_P, ip_Pu, 
                                       host_Pu, IP, conn_PrivTo, sport_, 
                                       dstAddr_, dport_, pkt_Pr, hostMarker_Pr, 
                                       daddr_, hostidx_, hidx_P, otherEntry_, 
                                       i_, indicies_, portDomain_, sourcePort_, 
                                       destPort_, new_sport_, conn, sport, 
                                       dstAddr, dport, pkt_Pri, hostMarker_Pri, 
                                       daddr_P, hostidx_P, hidx_Pr, 
                                       otherEntry_P, i_P, indicies_P, 
                                       portDomain_P, sourcePort_P, destPort_P, 
                                       new_sport_P, depth_Pr, pkt_Priv, 
                                       conn_Pr, hostMarker_Priv, daddr_Pr, 
                                       hostidx_Pr, hidx_Pri, otherEntry_Pr, 
                                       i_Pr, indicies_Pr, portDomain_Pr, 
                                       sourcePort_Pr, destPort_Pr, 
                                       new_sport_Pr, pkt_PrivT, conn_Pri, 
                                       hostMarker_PrivT, daddr_Pri, 
                                       hostidx_Pri, hidx_Priv, otherEntry_Pri, 
                                       i_Pri, indicies_Pri, portDomain_Pri, 
                                       sourcePort_Pri, destPort_Pri, 
                                       new_sport_Pri, depth_C, host_C, hidx_Co, 
                                       host_idx_Co, pidx_Co, port_idx_Co, 
                                       connhost, port, host_Co, hidx_Con, 
                                       host_idx, pidx, port_idx, depth_Pu, 
                                       pkt_Pu, ipkt_Pu, entry_Pu, conn_Pub, 
                                       hostMarker_Pu, ip_idx_Pu, ipidx_Pu, 
                                       ip_Pub, host_Pub, depth_Pri, pkt_PrivTo, 
                                       conn_Priv, hostMarker_PrivTo, 
                                       daddr_Priv, hostidx_Priv, hidx_PrivT, 
                                       otherEntry_Priv, i_Priv, indicies_Priv, 
                                       portDomain_Priv, sourcePort_Priv, 
                                       destPort_Priv, new_sport_Priv, good, 
                                       depth_E, i_E, j_, ip_E, host_E, 
                                       indecies_, depth_Ev, i_Ev, j_E, ip_Ev, 
                                       host_Ev, indecies_E, i_C, i_Ch, 
                                       depth_Pub, pkt_Pub, ipkt_Pub, entry_Pub, 
                                       conn_PubT, hostMarker_Pub, ip_idx_Pub, 
                                       ipidx_Pub, ip_PubT, host_PubT, 
                                       depth_Priv, pkt_PrivToP, conn_PrivT, 
                                       hostMarker_PrivToP, daddr, hostidx, 
                                       hidx, otherEntry, i_PrivT, indicies, 
                                       portDomain, sourcePort, destPort, 
                                       new_sport, depth_PubT, pkt, ipkt, entry, 
                                       conn_PubTo, hostMarker, ip_idx, ipidx, 
                                       ip_PubTo, host_PubTo, depth, i_Eve, j, 
                                       ip_Eve, host_Eve, indecies, i, aa >>

Disconnect(self) == disconnectStart(self) \/ disconnectIf(self)
                       \/ disconnectPurgeOrphans1(self)
                       \/ disconnectPurgeOrphans2(self)
                       \/ disconnectRet(self)

pubtoprivStart_(self) == /\ pc[self] = "pubtoprivStart_"
                         /\ /\ depth_Ev' = [depth_Ev EXCEPT ![self] = depth_Pu[self]]
                            /\ stack' = [stack EXCEPT ![self] = << [ procedure |->  "EventSequence",
                                                                     pc        |->  "pubtoprivIf_",
                                                                     i_Ev      |->  i_Ev[self],
                                                                     j_E       |->  j_E[self],
                                                                     ip_Ev     |->  ip_Ev[self],
                                                                     host_Ev   |->  host_Ev[self],
                                                                     indecies_E |->  indecies_E[self],
                                                                     depth_Ev  |->  depth_Ev[self] ] >>
                                                                 \o stack[self]]
                         /\ i_Ev' = [i_Ev EXCEPT ![self] = defaultInitValue]
                         /\ j_E' = [j_E EXCEPT ![self] = defaultInitValue]
                         /\ ip_Ev' = [ip_Ev EXCEPT ![self] = defaultInitValue]
                         /\ host_Ev' = [host_Ev EXCEPT ![self] = defaultInitValue]
                         /\ indecies_E' = [indecies_E EXCEPT ![self] = defaultInitValue]
                         /\ pc' = [pc EXCEPT ![self] = "evtSeqStart_"]
                         /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, 
                                         Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, 
                                         Kk, Ll, Mm, Nn, Oo, Pp, Qq, Rr, Ss, 
                                         Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, H2, 
                                         MaxPorts, EP1, PortMap1, EP2, 
                                         PortMap2, TableFull, EvictionReroute, 
                                         PortScanInv, ATIPInv, MaxTableSize, 
                                         hosts, FreeHosts, UsedHosts, Ports, 
                                         ExtraPorts, ExtraExtraPorts, T, 
                                         FreeIPs, PrivIPs, PubIPs, PortSpace, 
                                         UsedIPs, Connections, SendQueue, 
                                         RcvQueue, MAX, Marker1, Marker2, 
                                         CmdConnect, CmdDisconnect, 
                                         PortSpaceFull, depth_, host_, hidx_, 
                                         host_idx_, pidx_, port_idx_, depth_D, 
                                         ip_, host_D, connDomain_, cidx_, 
                                         conn_, host_Con, ip_C, hidx_C, 
                                         host_idx_C, pidx_C, port_idx_C, 
                                         host_Dis, ip_Di, connDomain_D, cidx_D, 
                                         conn_D, host, ip, connDomain_Di, 
                                         cidx_Di, conn_Di, depth_P, pkt_, 
                                         ipkt_, entry_, conn_P, hostMarker_, 
                                         ip_idx_, ipidx_, ip_P, host_P, pkt_P, 
                                         ipkt_P, entry_P, conn_Pu, 
                                         hostMarker_P, ip_idx_P, ipidx_P, 
                                         ip_Pu, host_Pu, IP, conn_PrivTo, 
                                         sport_, dstAddr_, dport_, pkt_Pr, 
                                         hostMarker_Pr, daddr_, hostidx_, 
                                         hidx_P, otherEntry_, i_, indicies_, 
                                         portDomain_, sourcePort_, destPort_, 
                                         new_sport_, conn, sport, dstAddr, 
                                         dport, pkt_Pri, hostMarker_Pri, 
                                         daddr_P, hostidx_P, hidx_Pr, 
                                         otherEntry_P, i_P, indicies_P, 
                                         portDomain_P, sourcePort_P, 
                                         destPort_P, new_sport_P, depth_Pr, 
                                         pkt_Priv, conn_Pr, hostMarker_Priv, 
                                         daddr_Pr, hostidx_Pr, hidx_Pri, 
                                         otherEntry_Pr, i_Pr, indicies_Pr, 
                                         portDomain_Pr, sourcePort_Pr, 
                                         destPort_Pr, new_sport_Pr, pkt_PrivT, 
                                         conn_Pri, hostMarker_PrivT, daddr_Pri, 
                                         hostidx_Pri, hidx_Priv, 
                                         otherEntry_Pri, i_Pri, indicies_Pri, 
                                         portDomain_Pri, sourcePort_Pri, 
                                         destPort_Pri, new_sport_Pri, depth_C, 
                                         host_C, hidx_Co, host_idx_Co, pidx_Co, 
                                         port_idx_Co, connhost, port, host_Co, 
                                         hidx_Con, host_idx, pidx, port_idx, 
                                         depth_Di, ip_D, host_Di, connDomain, 
                                         cidx, conn_Dis, depth_Pu, pkt_Pu, 
                                         ipkt_Pu, entry_Pu, conn_Pub, 
                                         hostMarker_Pu, ip_idx_Pu, ipidx_Pu, 
                                         ip_Pub, host_Pub, depth_Pri, 
                                         pkt_PrivTo, conn_Priv, 
                                         hostMarker_PrivTo, daddr_Priv, 
                                         hostidx_Priv, hidx_PrivT, 
                                         otherEntry_Priv, i_Priv, 
                                         indicies_Priv, portDomain_Priv, 
                                         sourcePort_Priv, destPort_Priv, 
                                         new_sport_Priv, good, depth_E, i_E, 
                                         j_, ip_E, host_E, indecies_, i_C, 
                                         i_Ch, depth_Pub, pkt_Pub, ipkt_Pub, 
                                         entry_Pub, conn_PubT, hostMarker_Pub, 
                                         ip_idx_Pub, ipidx_Pub, ip_PubT, 
                                         host_PubT, depth_Priv, pkt_PrivToP, 
                                         conn_PrivT, hostMarker_PrivToP, daddr, 
                                         hostidx, hidx, otherEntry, i_PrivT, 
                                         indicies, portDomain, sourcePort, 
                                         destPort, new_sport, depth_PubT, pkt, 
                                         ipkt, entry, conn_PubTo, hostMarker, 
                                         ip_idx, ipidx, ip_PubTo, host_PubTo, 
                                         depth, i_Eve, j, ip_Eve, host_Eve, 
                                         indecies, i, aa >>

pubtoprivIf_(self) == /\ pc[self] = "pubtoprivIf_"
                      /\ IF Len(SendQueue) > 0
                            THEN /\ pkt_Pu' = [pkt_Pu EXCEPT ![self] = Head(SendQueue)]
                                 /\ PrintT(<<"PubToPriv", pkt_Pu'[self], Connections>>)
                                 /\ SendQueue' = Tail(SendQueue)
                                 /\ entry_Pu' = [entry_Pu EXCEPT ![self] = SelectSeq(T, LAMBDA e: e.reply.saddr=pkt_Pu'[self].saddr /\
                                                                                                  e.reply.sport=pkt_Pu'[self].sport /\
                                                                                                  e.reply.daddr=pkt_Pu'[self].daddr /\
                                                                                                  e.reply.dport=pkt_Pu'[self].dport)]
                                 /\ IF Len(entry_Pu'[self]) <= 0
                                       THEN /\ IF pkt_Pu'[self].dport = N
                                                  THEN /\ IF Len(FreeIPs) > 0
                                                             THEN /\ ip_idx_Pu' = [ip_idx_Pu EXCEPT ![self] = DOMAIN FreeIPs]
                                                                  /\ ipidx_Pu' = [ipidx_Pu EXCEPT ![self] = CHOOSE ipp \in ip_idx_Pu'[self] : TRUE]
                                                                  /\ ip_Pub' = [ip_Pub EXCEPT ![self] = FreeIPs[ipidx_Pu'[self]]]
                                                                  /\ FreeIPs' = SelectSeq(FreeIPs, LAMBDA d: d /= ip_Pub'[self])
                                                                  /\ UsedIPs' = Append(UsedIPs, ip_Pub'[self])
                                                                  /\ host_Pub' = [host_Pub EXCEPT ![self] = pkt_Pu'[self].saddr]
                                                                  /\ Connections' = Append(Connections, <<ip_Pub'[self], host_Pub'[self]>>)
                                                             ELSE /\ TRUE
                                                                  /\ UNCHANGED << FreeIPs, 
                                                                                  UsedIPs, 
                                                                                  Connections, 
                                                                                  ip_idx_Pu, 
                                                                                  ipidx_Pu, 
                                                                                  ip_Pub, 
                                                                                  host_Pub >>
                                                  ELSE /\ IF pkt_Pu'[self].dport = NN
                                                             THEN /\ Assert((TRUE), 
                                                                            "Failure of assertion at line 750, column 9.")
                                                             ELSE /\ Assert((TRUE), 
                                                                            "Failure of assertion at line 755, column 9.")
                                                       /\ UNCHANGED << FreeIPs, 
                                                                       UsedIPs, 
                                                                       Connections, 
                                                                       ip_idx_Pu, 
                                                                       ipidx_Pu, 
                                                                       ip_Pub, 
                                                                       host_Pub >>
                                            /\ pc' = [pc EXCEPT ![self] = "pubtoprivRet_P"]
                                       ELSE /\ pc' = [pc EXCEPT ![self] = "pubtoPrivElse_Pu"]
                                            /\ UNCHANGED << FreeIPs, UsedIPs, 
                                                            Connections, 
                                                            ip_idx_Pu, 
                                                            ipidx_Pu, ip_Pub, 
                                                            host_Pub >>
                            ELSE /\ pc' = [pc EXCEPT ![self] = "pubtoprivRet_P"]
                                 /\ UNCHANGED << FreeIPs, UsedIPs, Connections, 
                                                 SendQueue, pkt_Pu, entry_Pu, 
                                                 ip_idx_Pu, ipidx_Pu, ip_Pub, 
                                                 host_Pub >>
                      /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, Bb, 
                                      Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, Ll, 
                                      Mm, Nn, Oo, Pp, Qq, Rr, Ss, Tt, Uu, Vv, 
                                      Ww, Xx, Yy, Zz, H1, H2, MaxPorts, EP1, 
                                      PortMap1, EP2, PortMap2, TableFull, 
                                      EvictionReroute, PortScanInv, ATIPInv, 
                                      MaxTableSize, hosts, FreeHosts, 
                                      UsedHosts, Ports, ExtraPorts, 
                                      ExtraExtraPorts, T, PrivIPs, PubIPs, 
                                      PortSpace, RcvQueue, MAX, Marker1, 
                                      Marker2, CmdConnect, CmdDisconnect, 
                                      PortSpaceFull, stack, depth_, host_, 
                                      hidx_, host_idx_, pidx_, port_idx_, 
                                      depth_D, ip_, host_D, connDomain_, cidx_, 
                                      conn_, host_Con, ip_C, hidx_C, 
                                      host_idx_C, pidx_C, port_idx_C, host_Dis, 
                                      ip_Di, connDomain_D, cidx_D, conn_D, 
                                      host, ip, connDomain_Di, cidx_Di, 
                                      conn_Di, depth_P, pkt_, ipkt_, entry_, 
                                      conn_P, hostMarker_, ip_idx_, ipidx_, 
                                      ip_P, host_P, pkt_P, ipkt_P, entry_P, 
                                      conn_Pu, hostMarker_P, ip_idx_P, ipidx_P, 
                                      ip_Pu, host_Pu, IP, conn_PrivTo, sport_, 
                                      dstAddr_, dport_, pkt_Pr, hostMarker_Pr, 
                                      daddr_, hostidx_, hidx_P, otherEntry_, 
                                      i_, indicies_, portDomain_, sourcePort_, 
                                      destPort_, new_sport_, conn, sport, 
                                      dstAddr, dport, pkt_Pri, hostMarker_Pri, 
                                      daddr_P, hostidx_P, hidx_Pr, 
                                      otherEntry_P, i_P, indicies_P, 
                                      portDomain_P, sourcePort_P, destPort_P, 
                                      new_sport_P, depth_Pr, pkt_Priv, conn_Pr, 
                                      hostMarker_Priv, daddr_Pr, hostidx_Pr, 
                                      hidx_Pri, otherEntry_Pr, i_Pr, 
                                      indicies_Pr, portDomain_Pr, 
                                      sourcePort_Pr, destPort_Pr, new_sport_Pr, 
                                      pkt_PrivT, conn_Pri, hostMarker_PrivT, 
                                      daddr_Pri, hostidx_Pri, hidx_Priv, 
                                      otherEntry_Pri, i_Pri, indicies_Pri, 
                                      portDomain_Pri, sourcePort_Pri, 
                                      destPort_Pri, new_sport_Pri, depth_C, 
                                      host_C, hidx_Co, host_idx_Co, pidx_Co, 
                                      port_idx_Co, connhost, port, host_Co, 
                                      hidx_Con, host_idx, pidx, port_idx, 
                                      depth_Di, ip_D, host_Di, connDomain, 
                                      cidx, conn_Dis, depth_Pu, ipkt_Pu, 
                                      conn_Pub, hostMarker_Pu, depth_Pri, 
                                      pkt_PrivTo, conn_Priv, hostMarker_PrivTo, 
                                      daddr_Priv, hostidx_Priv, hidx_PrivT, 
                                      otherEntry_Priv, i_Priv, indicies_Priv, 
                                      portDomain_Priv, sourcePort_Priv, 
                                      destPort_Priv, new_sport_Priv, good, 
                                      depth_E, i_E, j_, ip_E, host_E, 
                                      indecies_, depth_Ev, i_Ev, j_E, ip_Ev, 
                                      host_Ev, indecies_E, i_C, i_Ch, 
                                      depth_Pub, pkt_Pub, ipkt_Pub, entry_Pub, 
                                      conn_PubT, hostMarker_Pub, ip_idx_Pub, 
                                      ipidx_Pub, ip_PubT, host_PubT, 
                                      depth_Priv, pkt_PrivToP, conn_PrivT, 
                                      hostMarker_PrivToP, daddr, hostidx, hidx, 
                                      otherEntry, i_PrivT, indicies, 
                                      portDomain, sourcePort, destPort, 
                                      new_sport, depth_PubT, pkt, ipkt, entry, 
                                      conn_PubTo, hostMarker, ip_idx, ipidx, 
                                      ip_PubTo, host_PubTo, depth, i_Eve, j, 
                                      ip_Eve, host_Eve, indecies, i, aa >>

pubtoPrivElse_Pu(self) == /\ pc[self] = "pubtoPrivElse_Pu"
                          /\ entry_Pu' = [entry_Pu EXCEPT ![self] = Head(entry_Pu[self])]
                          /\ IF entry_Pu'[self].reply.dport=N
                                THEN /\ PrintT(<<"PubToPriv - PortShadow: ", entry_Pu'[self], pkt_Pu[self]>>)
                                     /\ ATIPInv' = TRUE
                                ELSE /\ TRUE
                                     /\ UNCHANGED ATIPInv
                          /\ IF entry_Pu'[self].host_marker/=pkt_Pu[self].host_marker
                                THEN /\ IF pkt_Pu[self].host_marker = H1
                                           THEN /\ Marker1' = entry_Pu'[self].host_marker
                                                /\ IF entry_Pu'[self].host_marker = H2
                                                      THEN /\ EvictionReroute' = TRUE
                                                      ELSE /\ TRUE
                                                           /\ UNCHANGED EvictionReroute
                                                /\ UNCHANGED Marker2
                                           ELSE /\ Marker2' = entry_Pu'[self].host_marker
                                                /\ IF entry_Pu'[self].host_marker = H1
                                                      THEN /\ EvictionReroute' = TRUE
                                                      ELSE /\ TRUE
                                                           /\ UNCHANGED EvictionReroute
                                                /\ UNCHANGED Marker1
                                     /\ PrintT(<<"PubToPriv-Eviction Error: pkt", pkt_Pu[self], " entry", entry_Pu'[self], "Connections:", Connections, "T: ", T>>)
                                ELSE /\ TRUE
                                     /\ UNCHANGED << EvictionReroute, Marker1, 
                                                     Marker2 >>
                          /\ conn_Pub' = [conn_Pub EXCEPT ![self] = SelectSeq(Connections, LAMBDA e: entry_Pu'[self].orig.saddr = Head(e))]
                          /\ IF Len(conn_Pub'[self]) > 0
                                THEN /\ pc' = [pc EXCEPT ![self] = "pubtoprivConngt1_P"]
                                ELSE /\ pc' = [pc EXCEPT ![self] = "pubtoprivRet_P"]
                          /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, 
                                          Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, 
                                          Kk, Ll, Mm, Nn, Oo, Pp, Qq, Rr, Ss, 
                                          Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, H2, 
                                          MaxPorts, EP1, PortMap1, EP2, 
                                          PortMap2, TableFull, PortScanInv, 
                                          MaxTableSize, hosts, FreeHosts, 
                                          UsedHosts, Ports, ExtraPorts, 
                                          ExtraExtraPorts, T, FreeIPs, PrivIPs, 
                                          PubIPs, PortSpace, UsedIPs, 
                                          Connections, SendQueue, RcvQueue, 
                                          MAX, CmdConnect, CmdDisconnect, 
                                          PortSpaceFull, stack, depth_, host_, 
                                          hidx_, host_idx_, pidx_, port_idx_, 
                                          depth_D, ip_, host_D, connDomain_, 
                                          cidx_, conn_, host_Con, ip_C, hidx_C, 
                                          host_idx_C, pidx_C, port_idx_C, 
                                          host_Dis, ip_Di, connDomain_D, 
                                          cidx_D, conn_D, host, ip, 
                                          connDomain_Di, cidx_Di, conn_Di, 
                                          depth_P, pkt_, ipkt_, entry_, conn_P, 
                                          hostMarker_, ip_idx_, ipidx_, ip_P, 
                                          host_P, pkt_P, ipkt_P, entry_P, 
                                          conn_Pu, hostMarker_P, ip_idx_P, 
                                          ipidx_P, ip_Pu, host_Pu, IP, 
                                          conn_PrivTo, sport_, dstAddr_, 
                                          dport_, pkt_Pr, hostMarker_Pr, 
                                          daddr_, hostidx_, hidx_P, 
                                          otherEntry_, i_, indicies_, 
                                          portDomain_, sourcePort_, destPort_, 
                                          new_sport_, conn, sport, dstAddr, 
                                          dport, pkt_Pri, hostMarker_Pri, 
                                          daddr_P, hostidx_P, hidx_Pr, 
                                          otherEntry_P, i_P, indicies_P, 
                                          portDomain_P, sourcePort_P, 
                                          destPort_P, new_sport_P, depth_Pr, 
                                          pkt_Priv, conn_Pr, hostMarker_Priv, 
                                          daddr_Pr, hostidx_Pr, hidx_Pri, 
                                          otherEntry_Pr, i_Pr, indicies_Pr, 
                                          portDomain_Pr, sourcePort_Pr, 
                                          destPort_Pr, new_sport_Pr, pkt_PrivT, 
                                          conn_Pri, hostMarker_PrivT, 
                                          daddr_Pri, hostidx_Pri, hidx_Priv, 
                                          otherEntry_Pri, i_Pri, indicies_Pri, 
                                          portDomain_Pri, sourcePort_Pri, 
                                          destPort_Pri, new_sport_Pri, depth_C, 
                                          host_C, hidx_Co, host_idx_Co, 
                                          pidx_Co, port_idx_Co, connhost, port, 
                                          host_Co, hidx_Con, host_idx, pidx, 
                                          port_idx, depth_Di, ip_D, host_Di, 
                                          connDomain, cidx, conn_Dis, depth_Pu, 
                                          pkt_Pu, ipkt_Pu, hostMarker_Pu, 
                                          ip_idx_Pu, ipidx_Pu, ip_Pub, 
                                          host_Pub, depth_Pri, pkt_PrivTo, 
                                          conn_Priv, hostMarker_PrivTo, 
                                          daddr_Priv, hostidx_Priv, hidx_PrivT, 
                                          otherEntry_Priv, i_Priv, 
                                          indicies_Priv, portDomain_Priv, 
                                          sourcePort_Priv, destPort_Priv, 
                                          new_sport_Priv, good, depth_E, i_E, 
                                          j_, ip_E, host_E, indecies_, 
                                          depth_Ev, i_Ev, j_E, ip_Ev, host_Ev, 
                                          indecies_E, i_C, i_Ch, depth_Pub, 
                                          pkt_Pub, ipkt_Pub, entry_Pub, 
                                          conn_PubT, hostMarker_Pub, 
                                          ip_idx_Pub, ipidx_Pub, ip_PubT, 
                                          host_PubT, depth_Priv, pkt_PrivToP, 
                                          conn_PrivT, hostMarker_PrivToP, 
                                          daddr, hostidx, hidx, otherEntry, 
                                          i_PrivT, indicies, portDomain, 
                                          sourcePort, destPort, new_sport, 
                                          depth_PubT, pkt, ipkt, entry, 
                                          conn_PubTo, hostMarker, ip_idx, 
                                          ipidx, ip_PubTo, host_PubTo, depth, 
                                          i_Eve, j, ip_Eve, host_Eve, indecies, 
                                          i, aa >>

pubtoprivConngt1_P(self) == /\ pc[self] = "pubtoprivConngt1_P"
                            /\ conn_Pub' = [conn_Pub EXCEPT ![self] = Head(conn_Pub[self])]
                            /\ pc' = [pc EXCEPT ![self] = "pubtoprivConngt2_P"]
                            /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, 
                                            Aa, Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, 
                                            Jj, Kk, Ll, Mm, Nn, Oo, Pp, Qq, Rr, 
                                            Ss, Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, 
                                            H2, MaxPorts, EP1, PortMap1, EP2, 
                                            PortMap2, TableFull, 
                                            EvictionReroute, PortScanInv, 
                                            ATIPInv, MaxTableSize, hosts, 
                                            FreeHosts, UsedHosts, Ports, 
                                            ExtraPorts, ExtraExtraPorts, T, 
                                            FreeIPs, PrivIPs, PubIPs, 
                                            PortSpace, UsedIPs, Connections, 
                                            SendQueue, RcvQueue, MAX, Marker1, 
                                            Marker2, CmdConnect, CmdDisconnect, 
                                            PortSpaceFull, stack, depth_, 
                                            host_, hidx_, host_idx_, pidx_, 
                                            port_idx_, depth_D, ip_, host_D, 
                                            connDomain_, cidx_, conn_, 
                                            host_Con, ip_C, hidx_C, host_idx_C, 
                                            pidx_C, port_idx_C, host_Dis, 
                                            ip_Di, connDomain_D, cidx_D, 
                                            conn_D, host, ip, connDomain_Di, 
                                            cidx_Di, conn_Di, depth_P, pkt_, 
                                            ipkt_, entry_, conn_P, hostMarker_, 
                                            ip_idx_, ipidx_, ip_P, host_P, 
                                            pkt_P, ipkt_P, entry_P, conn_Pu, 
                                            hostMarker_P, ip_idx_P, ipidx_P, 
                                            ip_Pu, host_Pu, IP, conn_PrivTo, 
                                            sport_, dstAddr_, dport_, pkt_Pr, 
                                            hostMarker_Pr, daddr_, hostidx_, 
                                            hidx_P, otherEntry_, i_, indicies_, 
                                            portDomain_, sourcePort_, 
                                            destPort_, new_sport_, conn, sport, 
                                            dstAddr, dport, pkt_Pri, 
                                            hostMarker_Pri, daddr_P, hostidx_P, 
                                            hidx_Pr, otherEntry_P, i_P, 
                                            indicies_P, portDomain_P, 
                                            sourcePort_P, destPort_P, 
                                            new_sport_P, depth_Pr, pkt_Priv, 
                                            conn_Pr, hostMarker_Priv, daddr_Pr, 
                                            hostidx_Pr, hidx_Pri, 
                                            otherEntry_Pr, i_Pr, indicies_Pr, 
                                            portDomain_Pr, sourcePort_Pr, 
                                            destPort_Pr, new_sport_Pr, 
                                            pkt_PrivT, conn_Pri, 
                                            hostMarker_PrivT, daddr_Pri, 
                                            hostidx_Pri, hidx_Priv, 
                                            otherEntry_Pri, i_Pri, 
                                            indicies_Pri, portDomain_Pri, 
                                            sourcePort_Pri, destPort_Pri, 
                                            new_sport_Pri, depth_C, host_C, 
                                            hidx_Co, host_idx_Co, pidx_Co, 
                                            port_idx_Co, connhost, port, 
                                            host_Co, hidx_Con, host_idx, pidx, 
                                            port_idx, depth_Di, ip_D, host_Di, 
                                            connDomain, cidx, conn_Dis, 
                                            depth_Pu, pkt_Pu, ipkt_Pu, 
                                            entry_Pu, hostMarker_Pu, ip_idx_Pu, 
                                            ipidx_Pu, ip_Pub, host_Pub, 
                                            depth_Pri, pkt_PrivTo, conn_Priv, 
                                            hostMarker_PrivTo, daddr_Priv, 
                                            hostidx_Priv, hidx_PrivT, 
                                            otherEntry_Priv, i_Priv, 
                                            indicies_Priv, portDomain_Priv, 
                                            sourcePort_Priv, destPort_Priv, 
                                            new_sport_Priv, good, depth_E, i_E, 
                                            j_, ip_E, host_E, indecies_, 
                                            depth_Ev, i_Ev, j_E, ip_Ev, 
                                            host_Ev, indecies_E, i_C, i_Ch, 
                                            depth_Pub, pkt_Pub, ipkt_Pub, 
                                            entry_Pub, conn_PubT, 
                                            hostMarker_Pub, ip_idx_Pub, 
                                            ipidx_Pub, ip_PubT, host_PubT, 
                                            depth_Priv, pkt_PrivToP, 
                                            conn_PrivT, hostMarker_PrivToP, 
                                            daddr, hostidx, hidx, otherEntry, 
                                            i_PrivT, indicies, portDomain, 
                                            sourcePort, destPort, new_sport, 
                                            depth_PubT, pkt, ipkt, entry, 
                                            conn_PubTo, hostMarker, ip_idx, 
                                            ipidx, ip_PubTo, host_PubTo, depth, 
                                            i_Eve, j, ip_Eve, host_Eve, 
                                            indecies, i, aa >>

pubtoprivConngt2_P(self) == /\ pc[self] = "pubtoprivConngt2_P"
                            /\ hostMarker_Pu' = [hostMarker_Pu EXCEPT ![self] = conn_Pub[self][2]]
                            /\ IF hostMarker_Pu'[self] = H1
                                  THEN /\ IF entry_Pu[self].host_marker = H2
                                             THEN /\ PortScanInv' = TRUE
                                             ELSE /\ TRUE
                                                  /\ UNCHANGED PortScanInv
                                       /\ Marker1' = entry_Pu[self].host_marker
                                       /\ UNCHANGED Marker2
                                  ELSE /\ IF entry_Pu[self].host_marker = H1
                                             THEN /\ PortScanInv' = TRUE
                                             ELSE /\ TRUE
                                                  /\ UNCHANGED PortScanInv
                                       /\ Marker2' = entry_Pu[self].host_marker
                                       /\ UNCHANGED Marker1
                            /\ pc' = [pc EXCEPT ![self] = "pubtoprivRet_P"]
                            /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, 
                                            Aa, Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, 
                                            Jj, Kk, Ll, Mm, Nn, Oo, Pp, Qq, Rr, 
                                            Ss, Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, 
                                            H2, MaxPorts, EP1, PortMap1, EP2, 
                                            PortMap2, TableFull, 
                                            EvictionReroute, ATIPInv, 
                                            MaxTableSize, hosts, FreeHosts, 
                                            UsedHosts, Ports, ExtraPorts, 
                                            ExtraExtraPorts, T, FreeIPs, 
                                            PrivIPs, PubIPs, PortSpace, 
                                            UsedIPs, Connections, SendQueue, 
                                            RcvQueue, MAX, CmdConnect, 
                                            CmdDisconnect, PortSpaceFull, 
                                            stack, depth_, host_, hidx_, 
                                            host_idx_, pidx_, port_idx_, 
                                            depth_D, ip_, host_D, connDomain_, 
                                            cidx_, conn_, host_Con, ip_C, 
                                            hidx_C, host_idx_C, pidx_C, 
                                            port_idx_C, host_Dis, ip_Di, 
                                            connDomain_D, cidx_D, conn_D, host, 
                                            ip, connDomain_Di, cidx_Di, 
                                            conn_Di, depth_P, pkt_, ipkt_, 
                                            entry_, conn_P, hostMarker_, 
                                            ip_idx_, ipidx_, ip_P, host_P, 
                                            pkt_P, ipkt_P, entry_P, conn_Pu, 
                                            hostMarker_P, ip_idx_P, ipidx_P, 
                                            ip_Pu, host_Pu, IP, conn_PrivTo, 
                                            sport_, dstAddr_, dport_, pkt_Pr, 
                                            hostMarker_Pr, daddr_, hostidx_, 
                                            hidx_P, otherEntry_, i_, indicies_, 
                                            portDomain_, sourcePort_, 
                                            destPort_, new_sport_, conn, sport, 
                                            dstAddr, dport, pkt_Pri, 
                                            hostMarker_Pri, daddr_P, hostidx_P, 
                                            hidx_Pr, otherEntry_P, i_P, 
                                            indicies_P, portDomain_P, 
                                            sourcePort_P, destPort_P, 
                                            new_sport_P, depth_Pr, pkt_Priv, 
                                            conn_Pr, hostMarker_Priv, daddr_Pr, 
                                            hostidx_Pr, hidx_Pri, 
                                            otherEntry_Pr, i_Pr, indicies_Pr, 
                                            portDomain_Pr, sourcePort_Pr, 
                                            destPort_Pr, new_sport_Pr, 
                                            pkt_PrivT, conn_Pri, 
                                            hostMarker_PrivT, daddr_Pri, 
                                            hostidx_Pri, hidx_Priv, 
                                            otherEntry_Pri, i_Pri, 
                                            indicies_Pri, portDomain_Pri, 
                                            sourcePort_Pri, destPort_Pri, 
                                            new_sport_Pri, depth_C, host_C, 
                                            hidx_Co, host_idx_Co, pidx_Co, 
                                            port_idx_Co, connhost, port, 
                                            host_Co, hidx_Con, host_idx, pidx, 
                                            port_idx, depth_Di, ip_D, host_Di, 
                                            connDomain, cidx, conn_Dis, 
                                            depth_Pu, pkt_Pu, ipkt_Pu, 
                                            entry_Pu, conn_Pub, ip_idx_Pu, 
                                            ipidx_Pu, ip_Pub, host_Pub, 
                                            depth_Pri, pkt_PrivTo, conn_Priv, 
                                            hostMarker_PrivTo, daddr_Priv, 
                                            hostidx_Priv, hidx_PrivT, 
                                            otherEntry_Priv, i_Priv, 
                                            indicies_Priv, portDomain_Priv, 
                                            sourcePort_Priv, destPort_Priv, 
                                            new_sport_Priv, good, depth_E, i_E, 
                                            j_, ip_E, host_E, indecies_, 
                                            depth_Ev, i_Ev, j_E, ip_Ev, 
                                            host_Ev, indecies_E, i_C, i_Ch, 
                                            depth_Pub, pkt_Pub, ipkt_Pub, 
                                            entry_Pub, conn_PubT, 
                                            hostMarker_Pub, ip_idx_Pub, 
                                            ipidx_Pub, ip_PubT, host_PubT, 
                                            depth_Priv, pkt_PrivToP, 
                                            conn_PrivT, hostMarker_PrivToP, 
                                            daddr, hostidx, hidx, otherEntry, 
                                            i_PrivT, indicies, portDomain, 
                                            sourcePort, destPort, new_sport, 
                                            depth_PubT, pkt, ipkt, entry, 
                                            conn_PubTo, hostMarker, ip_idx, 
                                            ipidx, ip_PubTo, host_PubTo, depth, 
                                            i_Eve, j, ip_Eve, host_Eve, 
                                            indecies, i, aa >>

pubtoprivRet_P(self) == /\ pc[self] = "pubtoprivRet_P"
                        /\ pc' = [pc EXCEPT ![self] = Head(stack[self]).pc]
                        /\ pkt_Pu' = [pkt_Pu EXCEPT ![self] = Head(stack[self]).pkt_Pu]
                        /\ ipkt_Pu' = [ipkt_Pu EXCEPT ![self] = Head(stack[self]).ipkt_Pu]
                        /\ entry_Pu' = [entry_Pu EXCEPT ![self] = Head(stack[self]).entry_Pu]
                        /\ conn_Pub' = [conn_Pub EXCEPT ![self] = Head(stack[self]).conn_Pub]
                        /\ hostMarker_Pu' = [hostMarker_Pu EXCEPT ![self] = Head(stack[self]).hostMarker_Pu]
                        /\ ip_idx_Pu' = [ip_idx_Pu EXCEPT ![self] = Head(stack[self]).ip_idx_Pu]
                        /\ ipidx_Pu' = [ipidx_Pu EXCEPT ![self] = Head(stack[self]).ipidx_Pu]
                        /\ ip_Pub' = [ip_Pub EXCEPT ![self] = Head(stack[self]).ip_Pub]
                        /\ host_Pub' = [host_Pub EXCEPT ![self] = Head(stack[self]).host_Pub]
                        /\ depth_Pu' = [depth_Pu EXCEPT ![self] = Head(stack[self]).depth_Pu]
                        /\ stack' = [stack EXCEPT ![self] = Tail(stack[self])]
                        /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, 
                                        Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, 
                                        Ll, Mm, Nn, Oo, Pp, Qq, Rr, Ss, Tt, Uu, 
                                        Vv, Ww, Xx, Yy, Zz, H1, H2, MaxPorts, 
                                        EP1, PortMap1, EP2, PortMap2, 
                                        TableFull, EvictionReroute, 
                                        PortScanInv, ATIPInv, MaxTableSize, 
                                        hosts, FreeHosts, UsedHosts, Ports, 
                                        ExtraPorts, ExtraExtraPorts, T, 
                                        FreeIPs, PrivIPs, PubIPs, PortSpace, 
                                        UsedIPs, Connections, SendQueue, 
                                        RcvQueue, MAX, Marker1, Marker2, 
                                        CmdConnect, CmdDisconnect, 
                                        PortSpaceFull, depth_, host_, hidx_, 
                                        host_idx_, pidx_, port_idx_, depth_D, 
                                        ip_, host_D, connDomain_, cidx_, conn_, 
                                        host_Con, ip_C, hidx_C, host_idx_C, 
                                        pidx_C, port_idx_C, host_Dis, ip_Di, 
                                        connDomain_D, cidx_D, conn_D, host, ip, 
                                        connDomain_Di, cidx_Di, conn_Di, 
                                        depth_P, pkt_, ipkt_, entry_, conn_P, 
                                        hostMarker_, ip_idx_, ipidx_, ip_P, 
                                        host_P, pkt_P, ipkt_P, entry_P, 
                                        conn_Pu, hostMarker_P, ip_idx_P, 
                                        ipidx_P, ip_Pu, host_Pu, IP, 
                                        conn_PrivTo, sport_, dstAddr_, dport_, 
                                        pkt_Pr, hostMarker_Pr, daddr_, 
                                        hostidx_, hidx_P, otherEntry_, i_, 
                                        indicies_, portDomain_, sourcePort_, 
                                        destPort_, new_sport_, conn, sport, 
                                        dstAddr, dport, pkt_Pri, 
                                        hostMarker_Pri, daddr_P, hostidx_P, 
                                        hidx_Pr, otherEntry_P, i_P, indicies_P, 
                                        portDomain_P, sourcePort_P, destPort_P, 
                                        new_sport_P, depth_Pr, pkt_Priv, 
                                        conn_Pr, hostMarker_Priv, daddr_Pr, 
                                        hostidx_Pr, hidx_Pri, otherEntry_Pr, 
                                        i_Pr, indicies_Pr, portDomain_Pr, 
                                        sourcePort_Pr, destPort_Pr, 
                                        new_sport_Pr, pkt_PrivT, conn_Pri, 
                                        hostMarker_PrivT, daddr_Pri, 
                                        hostidx_Pri, hidx_Priv, otherEntry_Pri, 
                                        i_Pri, indicies_Pri, portDomain_Pri, 
                                        sourcePort_Pri, destPort_Pri, 
                                        new_sport_Pri, depth_C, host_C, 
                                        hidx_Co, host_idx_Co, pidx_Co, 
                                        port_idx_Co, connhost, port, host_Co, 
                                        hidx_Con, host_idx, pidx, port_idx, 
                                        depth_Di, ip_D, host_Di, connDomain, 
                                        cidx, conn_Dis, depth_Pri, pkt_PrivTo, 
                                        conn_Priv, hostMarker_PrivTo, 
                                        daddr_Priv, hostidx_Priv, hidx_PrivT, 
                                        otherEntry_Priv, i_Priv, indicies_Priv, 
                                        portDomain_Priv, sourcePort_Priv, 
                                        destPort_Priv, new_sport_Priv, good, 
                                        depth_E, i_E, j_, ip_E, host_E, 
                                        indecies_, depth_Ev, i_Ev, j_E, ip_Ev, 
                                        host_Ev, indecies_E, i_C, i_Ch, 
                                        depth_Pub, pkt_Pub, ipkt_Pub, 
                                        entry_Pub, conn_PubT, hostMarker_Pub, 
                                        ip_idx_Pub, ipidx_Pub, ip_PubT, 
                                        host_PubT, depth_Priv, pkt_PrivToP, 
                                        conn_PrivT, hostMarker_PrivToP, daddr, 
                                        hostidx, hidx, otherEntry, i_PrivT, 
                                        indicies, portDomain, sourcePort, 
                                        destPort, new_sport, depth_PubT, pkt, 
                                        ipkt, entry, conn_PubTo, hostMarker, 
                                        ip_idx, ipidx, ip_PubTo, host_PubTo, 
                                        depth, i_Eve, j, ip_Eve, host_Eve, 
                                        indecies, i, aa >>

PubToPriv(self) == pubtoprivStart_(self) \/ pubtoprivIf_(self)
                      \/ pubtoPrivElse_Pu(self) \/ pubtoprivConngt1_P(self)
                      \/ pubtoprivConngt2_P(self) \/ pubtoprivRet_P(self)

privtopubStart(self) == /\ pc[self] = "privtopubStart"
                        /\ /\ depth_Ev' = [depth_Ev EXCEPT ![self] = depth_Pri[self]]
                           /\ stack' = [stack EXCEPT ![self] = << [ procedure |->  "EventSequence",
                                                                    pc        |->  "privtopubIf",
                                                                    i_Ev      |->  i_Ev[self],
                                                                    j_E       |->  j_E[self],
                                                                    ip_Ev     |->  ip_Ev[self],
                                                                    host_Ev   |->  host_Ev[self],
                                                                    indecies_E |->  indecies_E[self],
                                                                    depth_Ev  |->  depth_Ev[self] ] >>
                                                                \o stack[self]]
                        /\ i_Ev' = [i_Ev EXCEPT ![self] = defaultInitValue]
                        /\ j_E' = [j_E EXCEPT ![self] = defaultInitValue]
                        /\ ip_Ev' = [ip_Ev EXCEPT ![self] = defaultInitValue]
                        /\ host_Ev' = [host_Ev EXCEPT ![self] = defaultInitValue]
                        /\ indecies_E' = [indecies_E EXCEPT ![self] = defaultInitValue]
                        /\ pc' = [pc EXCEPT ![self] = "evtSeqStart_"]
                        /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, 
                                        Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, 
                                        Ll, Mm, Nn, Oo, Pp, Qq, Rr, Ss, Tt, Uu, 
                                        Vv, Ww, Xx, Yy, Zz, H1, H2, MaxPorts, 
                                        EP1, PortMap1, EP2, PortMap2, 
                                        TableFull, EvictionReroute, 
                                        PortScanInv, ATIPInv, MaxTableSize, 
                                        hosts, FreeHosts, UsedHosts, Ports, 
                                        ExtraPorts, ExtraExtraPorts, T, 
                                        FreeIPs, PrivIPs, PubIPs, PortSpace, 
                                        UsedIPs, Connections, SendQueue, 
                                        RcvQueue, MAX, Marker1, Marker2, 
                                        CmdConnect, CmdDisconnect, 
                                        PortSpaceFull, depth_, host_, hidx_, 
                                        host_idx_, pidx_, port_idx_, depth_D, 
                                        ip_, host_D, connDomain_, cidx_, conn_, 
                                        host_Con, ip_C, hidx_C, host_idx_C, 
                                        pidx_C, port_idx_C, host_Dis, ip_Di, 
                                        connDomain_D, cidx_D, conn_D, host, ip, 
                                        connDomain_Di, cidx_Di, conn_Di, 
                                        depth_P, pkt_, ipkt_, entry_, conn_P, 
                                        hostMarker_, ip_idx_, ipidx_, ip_P, 
                                        host_P, pkt_P, ipkt_P, entry_P, 
                                        conn_Pu, hostMarker_P, ip_idx_P, 
                                        ipidx_P, ip_Pu, host_Pu, IP, 
                                        conn_PrivTo, sport_, dstAddr_, dport_, 
                                        pkt_Pr, hostMarker_Pr, daddr_, 
                                        hostidx_, hidx_P, otherEntry_, i_, 
                                        indicies_, portDomain_, sourcePort_, 
                                        destPort_, new_sport_, conn, sport, 
                                        dstAddr, dport, pkt_Pri, 
                                        hostMarker_Pri, daddr_P, hostidx_P, 
                                        hidx_Pr, otherEntry_P, i_P, indicies_P, 
                                        portDomain_P, sourcePort_P, destPort_P, 
                                        new_sport_P, depth_Pr, pkt_Priv, 
                                        conn_Pr, hostMarker_Priv, daddr_Pr, 
                                        hostidx_Pr, hidx_Pri, otherEntry_Pr, 
                                        i_Pr, indicies_Pr, portDomain_Pr, 
                                        sourcePort_Pr, destPort_Pr, 
                                        new_sport_Pr, pkt_PrivT, conn_Pri, 
                                        hostMarker_PrivT, daddr_Pri, 
                                        hostidx_Pri, hidx_Priv, otherEntry_Pri, 
                                        i_Pri, indicies_Pri, portDomain_Pri, 
                                        sourcePort_Pri, destPort_Pri, 
                                        new_sport_Pri, depth_C, host_C, 
                                        hidx_Co, host_idx_Co, pidx_Co, 
                                        port_idx_Co, connhost, port, host_Co, 
                                        hidx_Con, host_idx, pidx, port_idx, 
                                        depth_Di, ip_D, host_Di, connDomain, 
                                        cidx, conn_Dis, depth_Pu, pkt_Pu, 
                                        ipkt_Pu, entry_Pu, conn_Pub, 
                                        hostMarker_Pu, ip_idx_Pu, ipidx_Pu, 
                                        ip_Pub, host_Pub, depth_Pri, 
                                        pkt_PrivTo, conn_Priv, 
                                        hostMarker_PrivTo, daddr_Priv, 
                                        hostidx_Priv, hidx_PrivT, 
                                        otherEntry_Priv, i_Priv, indicies_Priv, 
                                        portDomain_Priv, sourcePort_Priv, 
                                        destPort_Priv, new_sport_Priv, good, 
                                        depth_E, i_E, j_, ip_E, host_E, 
                                        indecies_, i_C, i_Ch, depth_Pub, 
                                        pkt_Pub, ipkt_Pub, entry_Pub, 
                                        conn_PubT, hostMarker_Pub, ip_idx_Pub, 
                                        ipidx_Pub, ip_PubT, host_PubT, 
                                        depth_Priv, pkt_PrivToP, conn_PrivT, 
                                        hostMarker_PrivToP, daddr, hostidx, 
                                        hidx, otherEntry, i_PrivT, indicies, 
                                        portDomain, sourcePort, destPort, 
                                        new_sport, depth_PubT, pkt, ipkt, 
                                        entry, conn_PubTo, hostMarker, ip_idx, 
                                        ipidx, ip_PubTo, host_PubTo, depth, 
                                        i_Eve, j, ip_Eve, host_Eve, indecies, 
                                        i, aa >>

privtopubIf(self) == /\ pc[self] = "privtopubIf"
                     /\ good' = [good EXCEPT ![self] = TRUE]
                     /\ IF Len (Connections) > 0
                           THEN /\ indicies_Priv' = [indicies_Priv EXCEPT ![self] = DOMAIN Connections]
                                /\ portDomain_Priv' = [portDomain_Priv EXCEPT ![self] = DOMAIN Ports]
                                /\ sourcePort_Priv' = [sourcePort_Priv EXCEPT ![self] = CHOOSE pr \in portDomain_Priv'[self] : TRUE]
                                /\ i_Priv' = [i_Priv EXCEPT ![self] = CHOOSE f \in indicies_Priv'[self] : TRUE]
                                /\ pc' = [pc EXCEPT ![self] = "privtopubConn_P"]
                           ELSE /\ pc' = [pc EXCEPT ![self] = "privtopubRet_Pr"]
                                /\ UNCHANGED << i_Priv, indicies_Priv, 
                                                portDomain_Priv, 
                                                sourcePort_Priv >>
                     /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, Bb, 
                                     Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, Ll, 
                                     Mm, Nn, Oo, Pp, Qq, Rr, Ss, Tt, Uu, Vv, 
                                     Ww, Xx, Yy, Zz, H1, H2, MaxPorts, EP1, 
                                     PortMap1, EP2, PortMap2, TableFull, 
                                     EvictionReroute, PortScanInv, ATIPInv, 
                                     MaxTableSize, hosts, FreeHosts, UsedHosts, 
                                     Ports, ExtraPorts, ExtraExtraPorts, T, 
                                     FreeIPs, PrivIPs, PubIPs, PortSpace, 
                                     UsedIPs, Connections, SendQueue, RcvQueue, 
                                     MAX, Marker1, Marker2, CmdConnect, 
                                     CmdDisconnect, PortSpaceFull, stack, 
                                     depth_, host_, hidx_, host_idx_, pidx_, 
                                     port_idx_, depth_D, ip_, host_D, 
                                     connDomain_, cidx_, conn_, host_Con, ip_C, 
                                     hidx_C, host_idx_C, pidx_C, port_idx_C, 
                                     host_Dis, ip_Di, connDomain_D, cidx_D, 
                                     conn_D, host, ip, connDomain_Di, cidx_Di, 
                                     conn_Di, depth_P, pkt_, ipkt_, entry_, 
                                     conn_P, hostMarker_, ip_idx_, ipidx_, 
                                     ip_P, host_P, pkt_P, ipkt_P, entry_P, 
                                     conn_Pu, hostMarker_P, ip_idx_P, ipidx_P, 
                                     ip_Pu, host_Pu, IP, conn_PrivTo, sport_, 
                                     dstAddr_, dport_, pkt_Pr, hostMarker_Pr, 
                                     daddr_, hostidx_, hidx_P, otherEntry_, i_, 
                                     indicies_, portDomain_, sourcePort_, 
                                     destPort_, new_sport_, conn, sport, 
                                     dstAddr, dport, pkt_Pri, hostMarker_Pri, 
                                     daddr_P, hostidx_P, hidx_Pr, otherEntry_P, 
                                     i_P, indicies_P, portDomain_P, 
                                     sourcePort_P, destPort_P, new_sport_P, 
                                     depth_Pr, pkt_Priv, conn_Pr, 
                                     hostMarker_Priv, daddr_Pr, hostidx_Pr, 
                                     hidx_Pri, otherEntry_Pr, i_Pr, 
                                     indicies_Pr, portDomain_Pr, sourcePort_Pr, 
                                     destPort_Pr, new_sport_Pr, pkt_PrivT, 
                                     conn_Pri, hostMarker_PrivT, daddr_Pri, 
                                     hostidx_Pri, hidx_Priv, otherEntry_Pri, 
                                     i_Pri, indicies_Pri, portDomain_Pri, 
                                     sourcePort_Pri, destPort_Pri, 
                                     new_sport_Pri, depth_C, host_C, hidx_Co, 
                                     host_idx_Co, pidx_Co, port_idx_Co, 
                                     connhost, port, host_Co, hidx_Con, 
                                     host_idx, pidx, port_idx, depth_Di, ip_D, 
                                     host_Di, connDomain, cidx, conn_Dis, 
                                     depth_Pu, pkt_Pu, ipkt_Pu, entry_Pu, 
                                     conn_Pub, hostMarker_Pu, ip_idx_Pu, 
                                     ipidx_Pu, ip_Pub, host_Pub, depth_Pri, 
                                     pkt_PrivTo, conn_Priv, hostMarker_PrivTo, 
                                     daddr_Priv, hostidx_Priv, hidx_PrivT, 
                                     otherEntry_Priv, destPort_Priv, 
                                     new_sport_Priv, depth_E, i_E, j_, ip_E, 
                                     host_E, indecies_, depth_Ev, i_Ev, j_E, 
                                     ip_Ev, host_Ev, indecies_E, i_C, i_Ch, 
                                     depth_Pub, pkt_Pub, ipkt_Pub, entry_Pub, 
                                     conn_PubT, hostMarker_Pub, ip_idx_Pub, 
                                     ipidx_Pub, ip_PubT, host_PubT, depth_Priv, 
                                     pkt_PrivToP, conn_PrivT, 
                                     hostMarker_PrivToP, daddr, hostidx, hidx, 
                                     otherEntry, i_PrivT, indicies, portDomain, 
                                     sourcePort, destPort, new_sport, 
                                     depth_PubT, pkt, ipkt, entry, conn_PubTo, 
                                     hostMarker, ip_idx, ipidx, ip_PubTo, 
                                     host_PubTo, depth, i_Eve, j, ip_Eve, 
                                     host_Eve, indecies, i, aa >>

privtopubConn_P(self) == /\ pc[self] = "privtopubConn_P"
                         /\ conn_Priv' = [conn_Priv EXCEPT ![self] = Connections[i_Priv[self]]]
                         /\ sourcePort_Priv' = [sourcePort_Priv EXCEPT ![self] = Ports[sourcePort_Priv[self]]]
                         /\ portDomain_Priv' = [portDomain_Priv EXCEPT ![self] = DOMAIN Ports]
                         /\ destPort_Priv' = [destPort_Priv EXCEPT ![self] = CHOOSE h \in portDomain_Priv'[self] : TRUE]
                         /\ pc' = [pc EXCEPT ![self] = "privtopubDport_P"]
                         /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, 
                                         Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, 
                                         Kk, Ll, Mm, Nn, Oo, Pp, Qq, Rr, Ss, 
                                         Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, H2, 
                                         MaxPorts, EP1, PortMap1, EP2, 
                                         PortMap2, TableFull, EvictionReroute, 
                                         PortScanInv, ATIPInv, MaxTableSize, 
                                         hosts, FreeHosts, UsedHosts, Ports, 
                                         ExtraPorts, ExtraExtraPorts, T, 
                                         FreeIPs, PrivIPs, PubIPs, PortSpace, 
                                         UsedIPs, Connections, SendQueue, 
                                         RcvQueue, MAX, Marker1, Marker2, 
                                         CmdConnect, CmdDisconnect, 
                                         PortSpaceFull, stack, depth_, host_, 
                                         hidx_, host_idx_, pidx_, port_idx_, 
                                         depth_D, ip_, host_D, connDomain_, 
                                         cidx_, conn_, host_Con, ip_C, hidx_C, 
                                         host_idx_C, pidx_C, port_idx_C, 
                                         host_Dis, ip_Di, connDomain_D, cidx_D, 
                                         conn_D, host, ip, connDomain_Di, 
                                         cidx_Di, conn_Di, depth_P, pkt_, 
                                         ipkt_, entry_, conn_P, hostMarker_, 
                                         ip_idx_, ipidx_, ip_P, host_P, pkt_P, 
                                         ipkt_P, entry_P, conn_Pu, 
                                         hostMarker_P, ip_idx_P, ipidx_P, 
                                         ip_Pu, host_Pu, IP, conn_PrivTo, 
                                         sport_, dstAddr_, dport_, pkt_Pr, 
                                         hostMarker_Pr, daddr_, hostidx_, 
                                         hidx_P, otherEntry_, i_, indicies_, 
                                         portDomain_, sourcePort_, destPort_, 
                                         new_sport_, conn, sport, dstAddr, 
                                         dport, pkt_Pri, hostMarker_Pri, 
                                         daddr_P, hostidx_P, hidx_Pr, 
                                         otherEntry_P, i_P, indicies_P, 
                                         portDomain_P, sourcePort_P, 
                                         destPort_P, new_sport_P, depth_Pr, 
                                         pkt_Priv, conn_Pr, hostMarker_Priv, 
                                         daddr_Pr, hostidx_Pr, hidx_Pri, 
                                         otherEntry_Pr, i_Pr, indicies_Pr, 
                                         portDomain_Pr, sourcePort_Pr, 
                                         destPort_Pr, new_sport_Pr, pkt_PrivT, 
                                         conn_Pri, hostMarker_PrivT, daddr_Pri, 
                                         hostidx_Pri, hidx_Priv, 
                                         otherEntry_Pri, i_Pri, indicies_Pri, 
                                         portDomain_Pri, sourcePort_Pri, 
                                         destPort_Pri, new_sport_Pri, depth_C, 
                                         host_C, hidx_Co, host_idx_Co, pidx_Co, 
                                         port_idx_Co, connhost, port, host_Co, 
                                         hidx_Con, host_idx, pidx, port_idx, 
                                         depth_Di, ip_D, host_Di, connDomain, 
                                         cidx, conn_Dis, depth_Pu, pkt_Pu, 
                                         ipkt_Pu, entry_Pu, conn_Pub, 
                                         hostMarker_Pu, ip_idx_Pu, ipidx_Pu, 
                                         ip_Pub, host_Pub, depth_Pri, 
                                         pkt_PrivTo, hostMarker_PrivTo, 
                                         daddr_Priv, hostidx_Priv, hidx_PrivT, 
                                         otherEntry_Priv, i_Priv, 
                                         indicies_Priv, new_sport_Priv, good, 
                                         depth_E, i_E, j_, ip_E, host_E, 
                                         indecies_, depth_Ev, i_Ev, j_E, ip_Ev, 
                                         host_Ev, indecies_E, i_C, i_Ch, 
                                         depth_Pub, pkt_Pub, ipkt_Pub, 
                                         entry_Pub, conn_PubT, hostMarker_Pub, 
                                         ip_idx_Pub, ipidx_Pub, ip_PubT, 
                                         host_PubT, depth_Priv, pkt_PrivToP, 
                                         conn_PrivT, hostMarker_PrivToP, daddr, 
                                         hostidx, hidx, otherEntry, i_PrivT, 
                                         indicies, portDomain, sourcePort, 
                                         destPort, new_sport, depth_PubT, pkt, 
                                         ipkt, entry, conn_PubTo, hostMarker, 
                                         ip_idx, ipidx, ip_PubTo, host_PubTo, 
                                         depth, i_Eve, j, ip_Eve, host_Eve, 
                                         indecies, i, aa >>

privtopubDport_P(self) == /\ pc[self] = "privtopubDport_P"
                          /\ destPort_Priv' = [destPort_Priv EXCEPT ![self] = Ports[destPort_Priv[self]]]
                          /\ hostidx_Priv' = [hostidx_Priv EXCEPT ![self] = DOMAIN hosts]
                          /\ hidx_PrivT' = [hidx_PrivT EXCEPT ![self] = CHOOSE hid \in hostidx_Priv'[self] : TRUE]
                          /\ daddr_Priv' = [daddr_Priv EXCEPT ![self] = hosts[hidx_PrivT'[self]]]
                          /\ hostMarker_PrivTo' = [hostMarker_PrivTo EXCEPT ![self] = Head(Tail(conn_Priv[self]))]
                          /\ IF hostMarker_PrivTo'[self]=H1
                                THEN /\ IF Len(PortMap1) >= MaxPorts
                                           THEN /\ good' = [good EXCEPT ![self] = FALSE]
                                                /\ pc' = [pc EXCEPT ![self] = "privtopubMaxPorts1"]
                                                /\ UNCHANGED PortMap1
                                           ELSE /\ PortMap1' = Append(PortMap1, sourcePort_Priv[self])
                                                /\ pc' = [pc EXCEPT ![self] = "privtopubGood"]
                                                /\ good' = good
                                     /\ UNCHANGED PortMap2
                                ELSE /\ IF Len(PortMap2) >= MaxPorts
                                           THEN /\ good' = [good EXCEPT ![self] = FALSE]
                                                /\ pc' = [pc EXCEPT ![self] = "privtopubMaxPorts2"]
                                                /\ UNCHANGED PortMap2
                                           ELSE /\ PortMap2' = Append(PortMap2, sourcePort_Priv[self])
                                                /\ pc' = [pc EXCEPT ![self] = "privtopubGood"]
                                                /\ good' = good
                                     /\ UNCHANGED PortMap1
                          /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, 
                                          Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, 
                                          Kk, Ll, Mm, Nn, Oo, Pp, Qq, Rr, Ss, 
                                          Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, H2, 
                                          MaxPorts, EP1, EP2, TableFull, 
                                          EvictionReroute, PortScanInv, 
                                          ATIPInv, MaxTableSize, hosts, 
                                          FreeHosts, UsedHosts, Ports, 
                                          ExtraPorts, ExtraExtraPorts, T, 
                                          FreeIPs, PrivIPs, PubIPs, PortSpace, 
                                          UsedIPs, Connections, SendQueue, 
                                          RcvQueue, MAX, Marker1, Marker2, 
                                          CmdConnect, CmdDisconnect, 
                                          PortSpaceFull, stack, depth_, host_, 
                                          hidx_, host_idx_, pidx_, port_idx_, 
                                          depth_D, ip_, host_D, connDomain_, 
                                          cidx_, conn_, host_Con, ip_C, hidx_C, 
                                          host_idx_C, pidx_C, port_idx_C, 
                                          host_Dis, ip_Di, connDomain_D, 
                                          cidx_D, conn_D, host, ip, 
                                          connDomain_Di, cidx_Di, conn_Di, 
                                          depth_P, pkt_, ipkt_, entry_, conn_P, 
                                          hostMarker_, ip_idx_, ipidx_, ip_P, 
                                          host_P, pkt_P, ipkt_P, entry_P, 
                                          conn_Pu, hostMarker_P, ip_idx_P, 
                                          ipidx_P, ip_Pu, host_Pu, IP, 
                                          conn_PrivTo, sport_, dstAddr_, 
                                          dport_, pkt_Pr, hostMarker_Pr, 
                                          daddr_, hostidx_, hidx_P, 
                                          otherEntry_, i_, indicies_, 
                                          portDomain_, sourcePort_, destPort_, 
                                          new_sport_, conn, sport, dstAddr, 
                                          dport, pkt_Pri, hostMarker_Pri, 
                                          daddr_P, hostidx_P, hidx_Pr, 
                                          otherEntry_P, i_P, indicies_P, 
                                          portDomain_P, sourcePort_P, 
                                          destPort_P, new_sport_P, depth_Pr, 
                                          pkt_Priv, conn_Pr, hostMarker_Priv, 
                                          daddr_Pr, hostidx_Pr, hidx_Pri, 
                                          otherEntry_Pr, i_Pr, indicies_Pr, 
                                          portDomain_Pr, sourcePort_Pr, 
                                          destPort_Pr, new_sport_Pr, pkt_PrivT, 
                                          conn_Pri, hostMarker_PrivT, 
                                          daddr_Pri, hostidx_Pri, hidx_Priv, 
                                          otherEntry_Pri, i_Pri, indicies_Pri, 
                                          portDomain_Pri, sourcePort_Pri, 
                                          destPort_Pri, new_sport_Pri, depth_C, 
                                          host_C, hidx_Co, host_idx_Co, 
                                          pidx_Co, port_idx_Co, connhost, port, 
                                          host_Co, hidx_Con, host_idx, pidx, 
                                          port_idx, depth_Di, ip_D, host_Di, 
                                          connDomain, cidx, conn_Dis, depth_Pu, 
                                          pkt_Pu, ipkt_Pu, entry_Pu, conn_Pub, 
                                          hostMarker_Pu, ip_idx_Pu, ipidx_Pu, 
                                          ip_Pub, host_Pub, depth_Pri, 
                                          pkt_PrivTo, conn_Priv, 
                                          otherEntry_Priv, i_Priv, 
                                          indicies_Priv, portDomain_Priv, 
                                          sourcePort_Priv, new_sport_Priv, 
                                          depth_E, i_E, j_, ip_E, host_E, 
                                          indecies_, depth_Ev, i_Ev, j_E, 
                                          ip_Ev, host_Ev, indecies_E, i_C, 
                                          i_Ch, depth_Pub, pkt_Pub, ipkt_Pub, 
                                          entry_Pub, conn_PubT, hostMarker_Pub, 
                                          ip_idx_Pub, ipidx_Pub, ip_PubT, 
                                          host_PubT, depth_Priv, pkt_PrivToP, 
                                          conn_PrivT, hostMarker_PrivToP, 
                                          daddr, hostidx, hidx, otherEntry, 
                                          i_PrivT, indicies, portDomain, 
                                          sourcePort, destPort, new_sport, 
                                          depth_PubT, pkt, ipkt, entry, 
                                          conn_PubTo, hostMarker, ip_idx, 
                                          ipidx, ip_PubTo, host_PubTo, depth, 
                                          i_Eve, j, ip_Eve, host_Eve, indecies, 
                                          i, aa >>

privtopubMaxPorts1(self) == /\ pc[self] = "privtopubMaxPorts1"
                            /\ pc' = [pc EXCEPT ![self] = Head(stack[self]).pc]
                            /\ pkt_PrivTo' = [pkt_PrivTo EXCEPT ![self] = Head(stack[self]).pkt_PrivTo]
                            /\ conn_Priv' = [conn_Priv EXCEPT ![self] = Head(stack[self]).conn_Priv]
                            /\ hostMarker_PrivTo' = [hostMarker_PrivTo EXCEPT ![self] = Head(stack[self]).hostMarker_PrivTo]
                            /\ daddr_Priv' = [daddr_Priv EXCEPT ![self] = Head(stack[self]).daddr_Priv]
                            /\ hostidx_Priv' = [hostidx_Priv EXCEPT ![self] = Head(stack[self]).hostidx_Priv]
                            /\ hidx_PrivT' = [hidx_PrivT EXCEPT ![self] = Head(stack[self]).hidx_PrivT]
                            /\ otherEntry_Priv' = [otherEntry_Priv EXCEPT ![self] = Head(stack[self]).otherEntry_Priv]
                            /\ i_Priv' = [i_Priv EXCEPT ![self] = Head(stack[self]).i_Priv]
                            /\ indicies_Priv' = [indicies_Priv EXCEPT ![self] = Head(stack[self]).indicies_Priv]
                            /\ portDomain_Priv' = [portDomain_Priv EXCEPT ![self] = Head(stack[self]).portDomain_Priv]
                            /\ sourcePort_Priv' = [sourcePort_Priv EXCEPT ![self] = Head(stack[self]).sourcePort_Priv]
                            /\ destPort_Priv' = [destPort_Priv EXCEPT ![self] = Head(stack[self]).destPort_Priv]
                            /\ new_sport_Priv' = [new_sport_Priv EXCEPT ![self] = Head(stack[self]).new_sport_Priv]
                            /\ good' = [good EXCEPT ![self] = Head(stack[self]).good]
                            /\ depth_Pri' = [depth_Pri EXCEPT ![self] = Head(stack[self]).depth_Pri]
                            /\ stack' = [stack EXCEPT ![self] = Tail(stack[self])]
                            /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, 
                                            Aa, Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, 
                                            Jj, Kk, Ll, Mm, Nn, Oo, Pp, Qq, Rr, 
                                            Ss, Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, 
                                            H2, MaxPorts, EP1, PortMap1, EP2, 
                                            PortMap2, TableFull, 
                                            EvictionReroute, PortScanInv, 
                                            ATIPInv, MaxTableSize, hosts, 
                                            FreeHosts, UsedHosts, Ports, 
                                            ExtraPorts, ExtraExtraPorts, T, 
                                            FreeIPs, PrivIPs, PubIPs, 
                                            PortSpace, UsedIPs, Connections, 
                                            SendQueue, RcvQueue, MAX, Marker1, 
                                            Marker2, CmdConnect, CmdDisconnect, 
                                            PortSpaceFull, depth_, host_, 
                                            hidx_, host_idx_, pidx_, port_idx_, 
                                            depth_D, ip_, host_D, connDomain_, 
                                            cidx_, conn_, host_Con, ip_C, 
                                            hidx_C, host_idx_C, pidx_C, 
                                            port_idx_C, host_Dis, ip_Di, 
                                            connDomain_D, cidx_D, conn_D, host, 
                                            ip, connDomain_Di, cidx_Di, 
                                            conn_Di, depth_P, pkt_, ipkt_, 
                                            entry_, conn_P, hostMarker_, 
                                            ip_idx_, ipidx_, ip_P, host_P, 
                                            pkt_P, ipkt_P, entry_P, conn_Pu, 
                                            hostMarker_P, ip_idx_P, ipidx_P, 
                                            ip_Pu, host_Pu, IP, conn_PrivTo, 
                                            sport_, dstAddr_, dport_, pkt_Pr, 
                                            hostMarker_Pr, daddr_, hostidx_, 
                                            hidx_P, otherEntry_, i_, indicies_, 
                                            portDomain_, sourcePort_, 
                                            destPort_, new_sport_, conn, sport, 
                                            dstAddr, dport, pkt_Pri, 
                                            hostMarker_Pri, daddr_P, hostidx_P, 
                                            hidx_Pr, otherEntry_P, i_P, 
                                            indicies_P, portDomain_P, 
                                            sourcePort_P, destPort_P, 
                                            new_sport_P, depth_Pr, pkt_Priv, 
                                            conn_Pr, hostMarker_Priv, daddr_Pr, 
                                            hostidx_Pr, hidx_Pri, 
                                            otherEntry_Pr, i_Pr, indicies_Pr, 
                                            portDomain_Pr, sourcePort_Pr, 
                                            destPort_Pr, new_sport_Pr, 
                                            pkt_PrivT, conn_Pri, 
                                            hostMarker_PrivT, daddr_Pri, 
                                            hostidx_Pri, hidx_Priv, 
                                            otherEntry_Pri, i_Pri, 
                                            indicies_Pri, portDomain_Pri, 
                                            sourcePort_Pri, destPort_Pri, 
                                            new_sport_Pri, depth_C, host_C, 
                                            hidx_Co, host_idx_Co, pidx_Co, 
                                            port_idx_Co, connhost, port, 
                                            host_Co, hidx_Con, host_idx, pidx, 
                                            port_idx, depth_Di, ip_D, host_Di, 
                                            connDomain, cidx, conn_Dis, 
                                            depth_Pu, pkt_Pu, ipkt_Pu, 
                                            entry_Pu, conn_Pub, hostMarker_Pu, 
                                            ip_idx_Pu, ipidx_Pu, ip_Pub, 
                                            host_Pub, depth_E, i_E, j_, ip_E, 
                                            host_E, indecies_, depth_Ev, i_Ev, 
                                            j_E, ip_Ev, host_Ev, indecies_E, 
                                            i_C, i_Ch, depth_Pub, pkt_Pub, 
                                            ipkt_Pub, entry_Pub, conn_PubT, 
                                            hostMarker_Pub, ip_idx_Pub, 
                                            ipidx_Pub, ip_PubT, host_PubT, 
                                            depth_Priv, pkt_PrivToP, 
                                            conn_PrivT, hostMarker_PrivToP, 
                                            daddr, hostidx, hidx, otherEntry, 
                                            i_PrivT, indicies, portDomain, 
                                            sourcePort, destPort, new_sport, 
                                            depth_PubT, pkt, ipkt, entry, 
                                            conn_PubTo, hostMarker, ip_idx, 
                                            ipidx, ip_PubTo, host_PubTo, depth, 
                                            i_Eve, j, ip_Eve, host_Eve, 
                                            indecies, i, aa >>

privtopubMaxPorts2(self) == /\ pc[self] = "privtopubMaxPorts2"
                            /\ pc' = [pc EXCEPT ![self] = Head(stack[self]).pc]
                            /\ pkt_PrivTo' = [pkt_PrivTo EXCEPT ![self] = Head(stack[self]).pkt_PrivTo]
                            /\ conn_Priv' = [conn_Priv EXCEPT ![self] = Head(stack[self]).conn_Priv]
                            /\ hostMarker_PrivTo' = [hostMarker_PrivTo EXCEPT ![self] = Head(stack[self]).hostMarker_PrivTo]
                            /\ daddr_Priv' = [daddr_Priv EXCEPT ![self] = Head(stack[self]).daddr_Priv]
                            /\ hostidx_Priv' = [hostidx_Priv EXCEPT ![self] = Head(stack[self]).hostidx_Priv]
                            /\ hidx_PrivT' = [hidx_PrivT EXCEPT ![self] = Head(stack[self]).hidx_PrivT]
                            /\ otherEntry_Priv' = [otherEntry_Priv EXCEPT ![self] = Head(stack[self]).otherEntry_Priv]
                            /\ i_Priv' = [i_Priv EXCEPT ![self] = Head(stack[self]).i_Priv]
                            /\ indicies_Priv' = [indicies_Priv EXCEPT ![self] = Head(stack[self]).indicies_Priv]
                            /\ portDomain_Priv' = [portDomain_Priv EXCEPT ![self] = Head(stack[self]).portDomain_Priv]
                            /\ sourcePort_Priv' = [sourcePort_Priv EXCEPT ![self] = Head(stack[self]).sourcePort_Priv]
                            /\ destPort_Priv' = [destPort_Priv EXCEPT ![self] = Head(stack[self]).destPort_Priv]
                            /\ new_sport_Priv' = [new_sport_Priv EXCEPT ![self] = Head(stack[self]).new_sport_Priv]
                            /\ good' = [good EXCEPT ![self] = Head(stack[self]).good]
                            /\ depth_Pri' = [depth_Pri EXCEPT ![self] = Head(stack[self]).depth_Pri]
                            /\ stack' = [stack EXCEPT ![self] = Tail(stack[self])]
                            /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, 
                                            Aa, Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, 
                                            Jj, Kk, Ll, Mm, Nn, Oo, Pp, Qq, Rr, 
                                            Ss, Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, 
                                            H2, MaxPorts, EP1, PortMap1, EP2, 
                                            PortMap2, TableFull, 
                                            EvictionReroute, PortScanInv, 
                                            ATIPInv, MaxTableSize, hosts, 
                                            FreeHosts, UsedHosts, Ports, 
                                            ExtraPorts, ExtraExtraPorts, T, 
                                            FreeIPs, PrivIPs, PubIPs, 
                                            PortSpace, UsedIPs, Connections, 
                                            SendQueue, RcvQueue, MAX, Marker1, 
                                            Marker2, CmdConnect, CmdDisconnect, 
                                            PortSpaceFull, depth_, host_, 
                                            hidx_, host_idx_, pidx_, port_idx_, 
                                            depth_D, ip_, host_D, connDomain_, 
                                            cidx_, conn_, host_Con, ip_C, 
                                            hidx_C, host_idx_C, pidx_C, 
                                            port_idx_C, host_Dis, ip_Di, 
                                            connDomain_D, cidx_D, conn_D, host, 
                                            ip, connDomain_Di, cidx_Di, 
                                            conn_Di, depth_P, pkt_, ipkt_, 
                                            entry_, conn_P, hostMarker_, 
                                            ip_idx_, ipidx_, ip_P, host_P, 
                                            pkt_P, ipkt_P, entry_P, conn_Pu, 
                                            hostMarker_P, ip_idx_P, ipidx_P, 
                                            ip_Pu, host_Pu, IP, conn_PrivTo, 
                                            sport_, dstAddr_, dport_, pkt_Pr, 
                                            hostMarker_Pr, daddr_, hostidx_, 
                                            hidx_P, otherEntry_, i_, indicies_, 
                                            portDomain_, sourcePort_, 
                                            destPort_, new_sport_, conn, sport, 
                                            dstAddr, dport, pkt_Pri, 
                                            hostMarker_Pri, daddr_P, hostidx_P, 
                                            hidx_Pr, otherEntry_P, i_P, 
                                            indicies_P, portDomain_P, 
                                            sourcePort_P, destPort_P, 
                                            new_sport_P, depth_Pr, pkt_Priv, 
                                            conn_Pr, hostMarker_Priv, daddr_Pr, 
                                            hostidx_Pr, hidx_Pri, 
                                            otherEntry_Pr, i_Pr, indicies_Pr, 
                                            portDomain_Pr, sourcePort_Pr, 
                                            destPort_Pr, new_sport_Pr, 
                                            pkt_PrivT, conn_Pri, 
                                            hostMarker_PrivT, daddr_Pri, 
                                            hostidx_Pri, hidx_Priv, 
                                            otherEntry_Pri, i_Pri, 
                                            indicies_Pri, portDomain_Pri, 
                                            sourcePort_Pri, destPort_Pri, 
                                            new_sport_Pri, depth_C, host_C, 
                                            hidx_Co, host_idx_Co, pidx_Co, 
                                            port_idx_Co, connhost, port, 
                                            host_Co, hidx_Con, host_idx, pidx, 
                                            port_idx, depth_Di, ip_D, host_Di, 
                                            connDomain, cidx, conn_Dis, 
                                            depth_Pu, pkt_Pu, ipkt_Pu, 
                                            entry_Pu, conn_Pub, hostMarker_Pu, 
                                            ip_idx_Pu, ipidx_Pu, ip_Pub, 
                                            host_Pub, depth_E, i_E, j_, ip_E, 
                                            host_E, indecies_, depth_Ev, i_Ev, 
                                            j_E, ip_Ev, host_Ev, indecies_E, 
                                            i_C, i_Ch, depth_Pub, pkt_Pub, 
                                            ipkt_Pub, entry_Pub, conn_PubT, 
                                            hostMarker_Pub, ip_idx_Pub, 
                                            ipidx_Pub, ip_PubT, host_PubT, 
                                            depth_Priv, pkt_PrivToP, 
                                            conn_PrivT, hostMarker_PrivToP, 
                                            daddr, hostidx, hidx, otherEntry, 
                                            i_PrivT, indicies, portDomain, 
                                            sourcePort, destPort, new_sport, 
                                            depth_PubT, pkt, ipkt, entry, 
                                            conn_PubTo, hostMarker, ip_idx, 
                                            ipidx, ip_PubTo, host_PubTo, depth, 
                                            i_Eve, j, ip_Eve, host_Eve, 
                                            indecies, i, aa >>

privtopubGood(self) == /\ pc[self] = "privtopubGood"
                       /\ IF good[self]
                             THEN /\ pc' = [pc EXCEPT ![self] = "privToPubPkt1"]
                             ELSE /\ pc' = [pc EXCEPT ![self] = "privtopubRet_Pr"]
                       /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, 
                                       Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, 
                                       Ll, Mm, Nn, Oo, Pp, Qq, Rr, Ss, Tt, Uu, 
                                       Vv, Ww, Xx, Yy, Zz, H1, H2, MaxPorts, 
                                       EP1, PortMap1, EP2, PortMap2, TableFull, 
                                       EvictionReroute, PortScanInv, ATIPInv, 
                                       MaxTableSize, hosts, FreeHosts, 
                                       UsedHosts, Ports, ExtraPorts, 
                                       ExtraExtraPorts, T, FreeIPs, PrivIPs, 
                                       PubIPs, PortSpace, UsedIPs, Connections, 
                                       SendQueue, RcvQueue, MAX, Marker1, 
                                       Marker2, CmdConnect, CmdDisconnect, 
                                       PortSpaceFull, stack, depth_, host_, 
                                       hidx_, host_idx_, pidx_, port_idx_, 
                                       depth_D, ip_, host_D, connDomain_, 
                                       cidx_, conn_, host_Con, ip_C, hidx_C, 
                                       host_idx_C, pidx_C, port_idx_C, 
                                       host_Dis, ip_Di, connDomain_D, cidx_D, 
                                       conn_D, host, ip, connDomain_Di, 
                                       cidx_Di, conn_Di, depth_P, pkt_, ipkt_, 
                                       entry_, conn_P, hostMarker_, ip_idx_, 
                                       ipidx_, ip_P, host_P, pkt_P, ipkt_P, 
                                       entry_P, conn_Pu, hostMarker_P, 
                                       ip_idx_P, ipidx_P, ip_Pu, host_Pu, IP, 
                                       conn_PrivTo, sport_, dstAddr_, dport_, 
                                       pkt_Pr, hostMarker_Pr, daddr_, hostidx_, 
                                       hidx_P, otherEntry_, i_, indicies_, 
                                       portDomain_, sourcePort_, destPort_, 
                                       new_sport_, conn, sport, dstAddr, dport, 
                                       pkt_Pri, hostMarker_Pri, daddr_P, 
                                       hostidx_P, hidx_Pr, otherEntry_P, i_P, 
                                       indicies_P, portDomain_P, sourcePort_P, 
                                       destPort_P, new_sport_P, depth_Pr, 
                                       pkt_Priv, conn_Pr, hostMarker_Priv, 
                                       daddr_Pr, hostidx_Pr, hidx_Pri, 
                                       otherEntry_Pr, i_Pr, indicies_Pr, 
                                       portDomain_Pr, sourcePort_Pr, 
                                       destPort_Pr, new_sport_Pr, pkt_PrivT, 
                                       conn_Pri, hostMarker_PrivT, daddr_Pri, 
                                       hostidx_Pri, hidx_Priv, otherEntry_Pri, 
                                       i_Pri, indicies_Pri, portDomain_Pri, 
                                       sourcePort_Pri, destPort_Pri, 
                                       new_sport_Pri, depth_C, host_C, hidx_Co, 
                                       host_idx_Co, pidx_Co, port_idx_Co, 
                                       connhost, port, host_Co, hidx_Con, 
                                       host_idx, pidx, port_idx, depth_Di, 
                                       ip_D, host_Di, connDomain, cidx, 
                                       conn_Dis, depth_Pu, pkt_Pu, ipkt_Pu, 
                                       entry_Pu, conn_Pub, hostMarker_Pu, 
                                       ip_idx_Pu, ipidx_Pu, ip_Pub, host_Pub, 
                                       depth_Pri, pkt_PrivTo, conn_Priv, 
                                       hostMarker_PrivTo, daddr_Priv, 
                                       hostidx_Priv, hidx_PrivT, 
                                       otherEntry_Priv, i_Priv, indicies_Priv, 
                                       portDomain_Priv, sourcePort_Priv, 
                                       destPort_Priv, new_sport_Priv, good, 
                                       depth_E, i_E, j_, ip_E, host_E, 
                                       indecies_, depth_Ev, i_Ev, j_E, ip_Ev, 
                                       host_Ev, indecies_E, i_C, i_Ch, 
                                       depth_Pub, pkt_Pub, ipkt_Pub, entry_Pub, 
                                       conn_PubT, hostMarker_Pub, ip_idx_Pub, 
                                       ipidx_Pub, ip_PubT, host_PubT, 
                                       depth_Priv, pkt_PrivToP, conn_PrivT, 
                                       hostMarker_PrivToP, daddr, hostidx, 
                                       hidx, otherEntry, i_PrivT, indicies, 
                                       portDomain, sourcePort, destPort, 
                                       new_sport, depth_PubT, pkt, ipkt, entry, 
                                       conn_PubTo, hostMarker, ip_idx, ipidx, 
                                       ip_PubTo, host_PubTo, depth, i_Eve, j, 
                                       ip_Eve, host_Eve, indecies, i, aa >>

privToPubPkt1(self) == /\ pc[self] = "privToPubPkt1"
                       /\ IF sourcePort_Priv[self] = N
                             THEN /\ IF hostMarker_PrivTo[self]=H1
                                        THEN /\ sourcePort_Priv' = [sourcePort_Priv EXCEPT ![self] = EP1]
                                        ELSE /\ sourcePort_Priv' = [sourcePort_Priv EXCEPT ![self] = EP2]
                             ELSE /\ TRUE
                                  /\ UNCHANGED sourcePort_Priv
                       /\ pkt_PrivTo' = [pkt_PrivTo EXCEPT ![self] = [saddr |-> Head(conn_Priv[self]), sport |-> sourcePort_Priv'[self],
                                                                      daddr |-> daddr_Priv[self], dport |-> destPort_Priv[self],
                                                                      host_marker |-> hostMarker_PrivTo[self]
                                                                     ]]
                       /\ PrintT(<<"PrivToPub - pkt: ", conn_Priv[self], pkt_PrivTo'[self]>>)
                       /\ entry' = [entry EXCEPT ![self] = [host_marker |-> hostMarker_PrivTo[self],
                                                            orig |-> [saddr |-> pkt_PrivTo'[self].saddr, sport |-> pkt_PrivTo'[self].sport,
                                                                      daddr |-> pkt_PrivTo'[self].daddr, dport |-> pkt_PrivTo'[self].dport],
                                                            reply |-> [saddr |-> pkt_PrivTo'[self].daddr, sport |-> pkt_PrivTo'[self].dport,
                                                                       daddr |-> N,  dport |-> pkt_PrivTo'[self].sport ]]]
                       /\ otherEntry_Priv' = [otherEntry_Priv EXCEPT ![self] = SelectSeq(T, LAMBDA k: k.reply.saddr=pkt_PrivTo'[self].daddr /\ k.reply.sport=pkt_PrivTo'[self].dport /\
                                                                                                      k.reply.daddr=N /\ k.reply.dport=pkt_PrivTo'[self].sport /\
                                                                                                      k.host_marker /= hostMarker_PrivTo[self])]
                       /\ IF Len(otherEntry_Priv'[self]) > 0
                             THEN /\ PrintT("Evict")
                                  /\ IF Len(ExtraPorts) > 0
                                        THEN /\ new_sport_Priv' = [new_sport_Priv EXCEPT ![self] = Head(ExtraPorts)]
                                             /\ ExtraPorts' = Tail(ExtraPorts)
                                             /\ pc' = [pc EXCEPT ![self] = "privToPubNewPort"]
                                             /\ UNCHANGED PortSpaceFull
                                        ELSE /\ PortSpaceFull' = TRUE
                                             /\ pc' = [pc EXCEPT ![self] = "privToPubAppendT"]
                                             /\ UNCHANGED << ExtraPorts, 
                                                             new_sport_Priv >>
                             ELSE /\ pc' = [pc EXCEPT ![self] = "privToPubAppendT"]
                                  /\ UNCHANGED << ExtraPorts, PortSpaceFull, 
                                                  new_sport_Priv >>
                       /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, 
                                       Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, 
                                       Ll, Mm, Nn, Oo, Pp, Qq, Rr, Ss, Tt, Uu, 
                                       Vv, Ww, Xx, Yy, Zz, H1, H2, MaxPorts, 
                                       EP1, PortMap1, EP2, PortMap2, TableFull, 
                                       EvictionReroute, PortScanInv, ATIPInv, 
                                       MaxTableSize, hosts, FreeHosts, 
                                       UsedHosts, Ports, ExtraExtraPorts, T, 
                                       FreeIPs, PrivIPs, PubIPs, PortSpace, 
                                       UsedIPs, Connections, SendQueue, 
                                       RcvQueue, MAX, Marker1, Marker2, 
                                       CmdConnect, CmdDisconnect, stack, 
                                       depth_, host_, hidx_, host_idx_, pidx_, 
                                       port_idx_, depth_D, ip_, host_D, 
                                       connDomain_, cidx_, conn_, host_Con, 
                                       ip_C, hidx_C, host_idx_C, pidx_C, 
                                       port_idx_C, host_Dis, ip_Di, 
                                       connDomain_D, cidx_D, conn_D, host, ip, 
                                       connDomain_Di, cidx_Di, conn_Di, 
                                       depth_P, pkt_, ipkt_, entry_, conn_P, 
                                       hostMarker_, ip_idx_, ipidx_, ip_P, 
                                       host_P, pkt_P, ipkt_P, entry_P, conn_Pu, 
                                       hostMarker_P, ip_idx_P, ipidx_P, ip_Pu, 
                                       host_Pu, IP, conn_PrivTo, sport_, 
                                       dstAddr_, dport_, pkt_Pr, hostMarker_Pr, 
                                       daddr_, hostidx_, hidx_P, otherEntry_, 
                                       i_, indicies_, portDomain_, sourcePort_, 
                                       destPort_, new_sport_, conn, sport, 
                                       dstAddr, dport, pkt_Pri, hostMarker_Pri, 
                                       daddr_P, hostidx_P, hidx_Pr, 
                                       otherEntry_P, i_P, indicies_P, 
                                       portDomain_P, sourcePort_P, destPort_P, 
                                       new_sport_P, depth_Pr, pkt_Priv, 
                                       conn_Pr, hostMarker_Priv, daddr_Pr, 
                                       hostidx_Pr, hidx_Pri, otherEntry_Pr, 
                                       i_Pr, indicies_Pr, portDomain_Pr, 
                                       sourcePort_Pr, destPort_Pr, 
                                       new_sport_Pr, pkt_PrivT, conn_Pri, 
                                       hostMarker_PrivT, daddr_Pri, 
                                       hostidx_Pri, hidx_Priv, otherEntry_Pri, 
                                       i_Pri, indicies_Pri, portDomain_Pri, 
                                       sourcePort_Pri, destPort_Pri, 
                                       new_sport_Pri, depth_C, host_C, hidx_Co, 
                                       host_idx_Co, pidx_Co, port_idx_Co, 
                                       connhost, port, host_Co, hidx_Con, 
                                       host_idx, pidx, port_idx, depth_Di, 
                                       ip_D, host_Di, connDomain, cidx, 
                                       conn_Dis, depth_Pu, pkt_Pu, ipkt_Pu, 
                                       entry_Pu, conn_Pub, hostMarker_Pu, 
                                       ip_idx_Pu, ipidx_Pu, ip_Pub, host_Pub, 
                                       depth_Pri, conn_Priv, hostMarker_PrivTo, 
                                       daddr_Priv, hostidx_Priv, hidx_PrivT, 
                                       i_Priv, indicies_Priv, portDomain_Priv, 
                                       destPort_Priv, good, depth_E, i_E, j_, 
                                       ip_E, host_E, indecies_, depth_Ev, i_Ev, 
                                       j_E, ip_Ev, host_Ev, indecies_E, i_C, 
                                       i_Ch, depth_Pub, pkt_Pub, ipkt_Pub, 
                                       entry_Pub, conn_PubT, hostMarker_Pub, 
                                       ip_idx_Pub, ipidx_Pub, ip_PubT, 
                                       host_PubT, depth_Priv, pkt_PrivToP, 
                                       conn_PrivT, hostMarker_PrivToP, daddr, 
                                       hostidx, hidx, otherEntry, i_PrivT, 
                                       indicies, portDomain, sourcePort, 
                                       destPort, new_sport, depth_PubT, pkt, 
                                       ipkt, conn_PubTo, hostMarker, ip_idx, 
                                       ipidx, ip_PubTo, host_PubTo, depth, 
                                       i_Eve, j, ip_Eve, host_Eve, indecies, i, 
                                       aa >>

privToPubNewPort(self) == /\ pc[self] = "privToPubNewPort"
                          /\ entry' = [entry EXCEPT ![self] =                  [host_marker |-> hostMarker_PrivTo[self],
                                                              orig |-> [saddr |-> pkt_PrivTo[self].saddr, sport |-> pkt_PrivTo[self].sport,
                                                                        daddr |-> pkt_PrivTo[self].daddr, dport |-> pkt_PrivTo[self].dport],
                                                              reply |-> [saddr |-> pkt_PrivTo[self].daddr, sport |-> pkt_PrivTo[self].dport,
                                                                         daddr |-> N,  dport |-> new_sport_Priv[self] ]]]
                          /\ pkt_PrivTo' = [pkt_PrivTo EXCEPT ![self].sport = new_sport_Priv[self]]
                          /\ pc' = [pc EXCEPT ![self] = "privToPubAppendT"]
                          /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, 
                                          Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, 
                                          Kk, Ll, Mm, Nn, Oo, Pp, Qq, Rr, Ss, 
                                          Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, H2, 
                                          MaxPorts, EP1, PortMap1, EP2, 
                                          PortMap2, TableFull, EvictionReroute, 
                                          PortScanInv, ATIPInv, MaxTableSize, 
                                          hosts, FreeHosts, UsedHosts, Ports, 
                                          ExtraPorts, ExtraExtraPorts, T, 
                                          FreeIPs, PrivIPs, PubIPs, PortSpace, 
                                          UsedIPs, Connections, SendQueue, 
                                          RcvQueue, MAX, Marker1, Marker2, 
                                          CmdConnect, CmdDisconnect, 
                                          PortSpaceFull, stack, depth_, host_, 
                                          hidx_, host_idx_, pidx_, port_idx_, 
                                          depth_D, ip_, host_D, connDomain_, 
                                          cidx_, conn_, host_Con, ip_C, hidx_C, 
                                          host_idx_C, pidx_C, port_idx_C, 
                                          host_Dis, ip_Di, connDomain_D, 
                                          cidx_D, conn_D, host, ip, 
                                          connDomain_Di, cidx_Di, conn_Di, 
                                          depth_P, pkt_, ipkt_, entry_, conn_P, 
                                          hostMarker_, ip_idx_, ipidx_, ip_P, 
                                          host_P, pkt_P, ipkt_P, entry_P, 
                                          conn_Pu, hostMarker_P, ip_idx_P, 
                                          ipidx_P, ip_Pu, host_Pu, IP, 
                                          conn_PrivTo, sport_, dstAddr_, 
                                          dport_, pkt_Pr, hostMarker_Pr, 
                                          daddr_, hostidx_, hidx_P, 
                                          otherEntry_, i_, indicies_, 
                                          portDomain_, sourcePort_, destPort_, 
                                          new_sport_, conn, sport, dstAddr, 
                                          dport, pkt_Pri, hostMarker_Pri, 
                                          daddr_P, hostidx_P, hidx_Pr, 
                                          otherEntry_P, i_P, indicies_P, 
                                          portDomain_P, sourcePort_P, 
                                          destPort_P, new_sport_P, depth_Pr, 
                                          pkt_Priv, conn_Pr, hostMarker_Priv, 
                                          daddr_Pr, hostidx_Pr, hidx_Pri, 
                                          otherEntry_Pr, i_Pr, indicies_Pr, 
                                          portDomain_Pr, sourcePort_Pr, 
                                          destPort_Pr, new_sport_Pr, pkt_PrivT, 
                                          conn_Pri, hostMarker_PrivT, 
                                          daddr_Pri, hostidx_Pri, hidx_Priv, 
                                          otherEntry_Pri, i_Pri, indicies_Pri, 
                                          portDomain_Pri, sourcePort_Pri, 
                                          destPort_Pri, new_sport_Pri, depth_C, 
                                          host_C, hidx_Co, host_idx_Co, 
                                          pidx_Co, port_idx_Co, connhost, port, 
                                          host_Co, hidx_Con, host_idx, pidx, 
                                          port_idx, depth_Di, ip_D, host_Di, 
                                          connDomain, cidx, conn_Dis, depth_Pu, 
                                          pkt_Pu, ipkt_Pu, entry_Pu, conn_Pub, 
                                          hostMarker_Pu, ip_idx_Pu, ipidx_Pu, 
                                          ip_Pub, host_Pub, depth_Pri, 
                                          conn_Priv, hostMarker_PrivTo, 
                                          daddr_Priv, hostidx_Priv, hidx_PrivT, 
                                          otherEntry_Priv, i_Priv, 
                                          indicies_Priv, portDomain_Priv, 
                                          sourcePort_Priv, destPort_Priv, 
                                          new_sport_Priv, good, depth_E, i_E, 
                                          j_, ip_E, host_E, indecies_, 
                                          depth_Ev, i_Ev, j_E, ip_Ev, host_Ev, 
                                          indecies_E, i_C, i_Ch, depth_Pub, 
                                          pkt_Pub, ipkt_Pub, entry_Pub, 
                                          conn_PubT, hostMarker_Pub, 
                                          ip_idx_Pub, ipidx_Pub, ip_PubT, 
                                          host_PubT, depth_Priv, pkt_PrivToP, 
                                          conn_PrivT, hostMarker_PrivToP, 
                                          daddr, hostidx, hidx, otherEntry, 
                                          i_PrivT, indicies, portDomain, 
                                          sourcePort, destPort, new_sport, 
                                          depth_PubT, pkt, ipkt, conn_PubTo, 
                                          hostMarker, ip_idx, ipidx, ip_PubTo, 
                                          host_PubTo, depth, i_Eve, j, ip_Eve, 
                                          host_Eve, indecies, i, aa >>

privToPubAppendT(self) == /\ pc[self] = "privToPubAppendT"
                          /\ T' = Append(T, entry[self])
                          /\ IF Len(T') >= MaxTableSize
                                THEN /\ TableFull' = TRUE
                                ELSE /\ TRUE
                                     /\ UNCHANGED TableFull
                          /\ pc' = [pc EXCEPT ![self] = "privtopubPkt_Priv"]
                          /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, 
                                          Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, 
                                          Kk, Ll, Mm, Nn, Oo, Pp, Qq, Rr, Ss, 
                                          Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, H2, 
                                          MaxPorts, EP1, PortMap1, EP2, 
                                          PortMap2, EvictionReroute, 
                                          PortScanInv, ATIPInv, MaxTableSize, 
                                          hosts, FreeHosts, UsedHosts, Ports, 
                                          ExtraPorts, ExtraExtraPorts, FreeIPs, 
                                          PrivIPs, PubIPs, PortSpace, UsedIPs, 
                                          Connections, SendQueue, RcvQueue, 
                                          MAX, Marker1, Marker2, CmdConnect, 
                                          CmdDisconnect, PortSpaceFull, stack, 
                                          depth_, host_, hidx_, host_idx_, 
                                          pidx_, port_idx_, depth_D, ip_, 
                                          host_D, connDomain_, cidx_, conn_, 
                                          host_Con, ip_C, hidx_C, host_idx_C, 
                                          pidx_C, port_idx_C, host_Dis, ip_Di, 
                                          connDomain_D, cidx_D, conn_D, host, 
                                          ip, connDomain_Di, cidx_Di, conn_Di, 
                                          depth_P, pkt_, ipkt_, entry_, conn_P, 
                                          hostMarker_, ip_idx_, ipidx_, ip_P, 
                                          host_P, pkt_P, ipkt_P, entry_P, 
                                          conn_Pu, hostMarker_P, ip_idx_P, 
                                          ipidx_P, ip_Pu, host_Pu, IP, 
                                          conn_PrivTo, sport_, dstAddr_, 
                                          dport_, pkt_Pr, hostMarker_Pr, 
                                          daddr_, hostidx_, hidx_P, 
                                          otherEntry_, i_, indicies_, 
                                          portDomain_, sourcePort_, destPort_, 
                                          new_sport_, conn, sport, dstAddr, 
                                          dport, pkt_Pri, hostMarker_Pri, 
                                          daddr_P, hostidx_P, hidx_Pr, 
                                          otherEntry_P, i_P, indicies_P, 
                                          portDomain_P, sourcePort_P, 
                                          destPort_P, new_sport_P, depth_Pr, 
                                          pkt_Priv, conn_Pr, hostMarker_Priv, 
                                          daddr_Pr, hostidx_Pr, hidx_Pri, 
                                          otherEntry_Pr, i_Pr, indicies_Pr, 
                                          portDomain_Pr, sourcePort_Pr, 
                                          destPort_Pr, new_sport_Pr, pkt_PrivT, 
                                          conn_Pri, hostMarker_PrivT, 
                                          daddr_Pri, hostidx_Pri, hidx_Priv, 
                                          otherEntry_Pri, i_Pri, indicies_Pri, 
                                          portDomain_Pri, sourcePort_Pri, 
                                          destPort_Pri, new_sport_Pri, depth_C, 
                                          host_C, hidx_Co, host_idx_Co, 
                                          pidx_Co, port_idx_Co, connhost, port, 
                                          host_Co, hidx_Con, host_idx, pidx, 
                                          port_idx, depth_Di, ip_D, host_Di, 
                                          connDomain, cidx, conn_Dis, depth_Pu, 
                                          pkt_Pu, ipkt_Pu, entry_Pu, conn_Pub, 
                                          hostMarker_Pu, ip_idx_Pu, ipidx_Pu, 
                                          ip_Pub, host_Pub, depth_Pri, 
                                          pkt_PrivTo, conn_Priv, 
                                          hostMarker_PrivTo, daddr_Priv, 
                                          hostidx_Priv, hidx_PrivT, 
                                          otherEntry_Priv, i_Priv, 
                                          indicies_Priv, portDomain_Priv, 
                                          sourcePort_Priv, destPort_Priv, 
                                          new_sport_Priv, good, depth_E, i_E, 
                                          j_, ip_E, host_E, indecies_, 
                                          depth_Ev, i_Ev, j_E, ip_Ev, host_Ev, 
                                          indecies_E, i_C, i_Ch, depth_Pub, 
                                          pkt_Pub, ipkt_Pub, entry_Pub, 
                                          conn_PubT, hostMarker_Pub, 
                                          ip_idx_Pub, ipidx_Pub, ip_PubT, 
                                          host_PubT, depth_Priv, pkt_PrivToP, 
                                          conn_PrivT, hostMarker_PrivToP, 
                                          daddr, hostidx, hidx, otherEntry, 
                                          i_PrivT, indicies, portDomain, 
                                          sourcePort, destPort, new_sport, 
                                          depth_PubT, pkt, ipkt, entry, 
                                          conn_PubTo, hostMarker, ip_idx, 
                                          ipidx, ip_PubTo, host_PubTo, depth, 
                                          i_Eve, j, ip_Eve, host_Eve, indecies, 
                                          i, aa >>

privtopubPkt_Priv(self) == /\ pc[self] = "privtopubPkt_Priv"
                           /\ pkt_PrivTo' = [pkt_PrivTo EXCEPT ![self] = [saddr |->pkt_PrivTo[self].daddr, sport |-> pkt_PrivTo[self].dport,
                                                                          daddr |-> N, dport |-> pkt_PrivTo[self].sport,
                                                                          host_marker |-> hostMarker_PrivTo[self]]]
                           /\ SendQueue' = Append(SendQueue, pkt_PrivTo'[self])
                           /\ pc' = [pc EXCEPT ![self] = "privtopubRet_Pr"]
                           /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, 
                                           Aa, Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, 
                                           Jj, Kk, Ll, Mm, Nn, Oo, Pp, Qq, Rr, 
                                           Ss, Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, 
                                           H2, MaxPorts, EP1, PortMap1, EP2, 
                                           PortMap2, TableFull, 
                                           EvictionReroute, PortScanInv, 
                                           ATIPInv, MaxTableSize, hosts, 
                                           FreeHosts, UsedHosts, Ports, 
                                           ExtraPorts, ExtraExtraPorts, T, 
                                           FreeIPs, PrivIPs, PubIPs, PortSpace, 
                                           UsedIPs, Connections, RcvQueue, MAX, 
                                           Marker1, Marker2, CmdConnect, 
                                           CmdDisconnect, PortSpaceFull, stack, 
                                           depth_, host_, hidx_, host_idx_, 
                                           pidx_, port_idx_, depth_D, ip_, 
                                           host_D, connDomain_, cidx_, conn_, 
                                           host_Con, ip_C, hidx_C, host_idx_C, 
                                           pidx_C, port_idx_C, host_Dis, ip_Di, 
                                           connDomain_D, cidx_D, conn_D, host, 
                                           ip, connDomain_Di, cidx_Di, conn_Di, 
                                           depth_P, pkt_, ipkt_, entry_, 
                                           conn_P, hostMarker_, ip_idx_, 
                                           ipidx_, ip_P, host_P, pkt_P, ipkt_P, 
                                           entry_P, conn_Pu, hostMarker_P, 
                                           ip_idx_P, ipidx_P, ip_Pu, host_Pu, 
                                           IP, conn_PrivTo, sport_, dstAddr_, 
                                           dport_, pkt_Pr, hostMarker_Pr, 
                                           daddr_, hostidx_, hidx_P, 
                                           otherEntry_, i_, indicies_, 
                                           portDomain_, sourcePort_, destPort_, 
                                           new_sport_, conn, sport, dstAddr, 
                                           dport, pkt_Pri, hostMarker_Pri, 
                                           daddr_P, hostidx_P, hidx_Pr, 
                                           otherEntry_P, i_P, indicies_P, 
                                           portDomain_P, sourcePort_P, 
                                           destPort_P, new_sport_P, depth_Pr, 
                                           pkt_Priv, conn_Pr, hostMarker_Priv, 
                                           daddr_Pr, hostidx_Pr, hidx_Pri, 
                                           otherEntry_Pr, i_Pr, indicies_Pr, 
                                           portDomain_Pr, sourcePort_Pr, 
                                           destPort_Pr, new_sport_Pr, 
                                           pkt_PrivT, conn_Pri, 
                                           hostMarker_PrivT, daddr_Pri, 
                                           hostidx_Pri, hidx_Priv, 
                                           otherEntry_Pri, i_Pri, indicies_Pri, 
                                           portDomain_Pri, sourcePort_Pri, 
                                           destPort_Pri, new_sport_Pri, 
                                           depth_C, host_C, hidx_Co, 
                                           host_idx_Co, pidx_Co, port_idx_Co, 
                                           connhost, port, host_Co, hidx_Con, 
                                           host_idx, pidx, port_idx, depth_Di, 
                                           ip_D, host_Di, connDomain, cidx, 
                                           conn_Dis, depth_Pu, pkt_Pu, ipkt_Pu, 
                                           entry_Pu, conn_Pub, hostMarker_Pu, 
                                           ip_idx_Pu, ipidx_Pu, ip_Pub, 
                                           host_Pub, depth_Pri, conn_Priv, 
                                           hostMarker_PrivTo, daddr_Priv, 
                                           hostidx_Priv, hidx_PrivT, 
                                           otherEntry_Priv, i_Priv, 
                                           indicies_Priv, portDomain_Priv, 
                                           sourcePort_Priv, destPort_Priv, 
                                           new_sport_Priv, good, depth_E, i_E, 
                                           j_, ip_E, host_E, indecies_, 
                                           depth_Ev, i_Ev, j_E, ip_Ev, host_Ev, 
                                           indecies_E, i_C, i_Ch, depth_Pub, 
                                           pkt_Pub, ipkt_Pub, entry_Pub, 
                                           conn_PubT, hostMarker_Pub, 
                                           ip_idx_Pub, ipidx_Pub, ip_PubT, 
                                           host_PubT, depth_Priv, pkt_PrivToP, 
                                           conn_PrivT, hostMarker_PrivToP, 
                                           daddr, hostidx, hidx, otherEntry, 
                                           i_PrivT, indicies, portDomain, 
                                           sourcePort, destPort, new_sport, 
                                           depth_PubT, pkt, ipkt, entry, 
                                           conn_PubTo, hostMarker, ip_idx, 
                                           ipidx, ip_PubTo, host_PubTo, depth, 
                                           i_Eve, j, ip_Eve, host_Eve, 
                                           indecies, i, aa >>

privtopubRet_Pr(self) == /\ pc[self] = "privtopubRet_Pr"
                         /\ pc' = [pc EXCEPT ![self] = Head(stack[self]).pc]
                         /\ pkt_PrivTo' = [pkt_PrivTo EXCEPT ![self] = Head(stack[self]).pkt_PrivTo]
                         /\ conn_Priv' = [conn_Priv EXCEPT ![self] = Head(stack[self]).conn_Priv]
                         /\ hostMarker_PrivTo' = [hostMarker_PrivTo EXCEPT ![self] = Head(stack[self]).hostMarker_PrivTo]
                         /\ daddr_Priv' = [daddr_Priv EXCEPT ![self] = Head(stack[self]).daddr_Priv]
                         /\ hostidx_Priv' = [hostidx_Priv EXCEPT ![self] = Head(stack[self]).hostidx_Priv]
                         /\ hidx_PrivT' = [hidx_PrivT EXCEPT ![self] = Head(stack[self]).hidx_PrivT]
                         /\ otherEntry_Priv' = [otherEntry_Priv EXCEPT ![self] = Head(stack[self]).otherEntry_Priv]
                         /\ i_Priv' = [i_Priv EXCEPT ![self] = Head(stack[self]).i_Priv]
                         /\ indicies_Priv' = [indicies_Priv EXCEPT ![self] = Head(stack[self]).indicies_Priv]
                         /\ portDomain_Priv' = [portDomain_Priv EXCEPT ![self] = Head(stack[self]).portDomain_Priv]
                         /\ sourcePort_Priv' = [sourcePort_Priv EXCEPT ![self] = Head(stack[self]).sourcePort_Priv]
                         /\ destPort_Priv' = [destPort_Priv EXCEPT ![self] = Head(stack[self]).destPort_Priv]
                         /\ new_sport_Priv' = [new_sport_Priv EXCEPT ![self] = Head(stack[self]).new_sport_Priv]
                         /\ good' = [good EXCEPT ![self] = Head(stack[self]).good]
                         /\ depth_Pri' = [depth_Pri EXCEPT ![self] = Head(stack[self]).depth_Pri]
                         /\ stack' = [stack EXCEPT ![self] = Tail(stack[self])]
                         /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, 
                                         Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, 
                                         Kk, Ll, Mm, Nn, Oo, Pp, Qq, Rr, Ss, 
                                         Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, H2, 
                                         MaxPorts, EP1, PortMap1, EP2, 
                                         PortMap2, TableFull, EvictionReroute, 
                                         PortScanInv, ATIPInv, MaxTableSize, 
                                         hosts, FreeHosts, UsedHosts, Ports, 
                                         ExtraPorts, ExtraExtraPorts, T, 
                                         FreeIPs, PrivIPs, PubIPs, PortSpace, 
                                         UsedIPs, Connections, SendQueue, 
                                         RcvQueue, MAX, Marker1, Marker2, 
                                         CmdConnect, CmdDisconnect, 
                                         PortSpaceFull, depth_, host_, hidx_, 
                                         host_idx_, pidx_, port_idx_, depth_D, 
                                         ip_, host_D, connDomain_, cidx_, 
                                         conn_, host_Con, ip_C, hidx_C, 
                                         host_idx_C, pidx_C, port_idx_C, 
                                         host_Dis, ip_Di, connDomain_D, cidx_D, 
                                         conn_D, host, ip, connDomain_Di, 
                                         cidx_Di, conn_Di, depth_P, pkt_, 
                                         ipkt_, entry_, conn_P, hostMarker_, 
                                         ip_idx_, ipidx_, ip_P, host_P, pkt_P, 
                                         ipkt_P, entry_P, conn_Pu, 
                                         hostMarker_P, ip_idx_P, ipidx_P, 
                                         ip_Pu, host_Pu, IP, conn_PrivTo, 
                                         sport_, dstAddr_, dport_, pkt_Pr, 
                                         hostMarker_Pr, daddr_, hostidx_, 
                                         hidx_P, otherEntry_, i_, indicies_, 
                                         portDomain_, sourcePort_, destPort_, 
                                         new_sport_, conn, sport, dstAddr, 
                                         dport, pkt_Pri, hostMarker_Pri, 
                                         daddr_P, hostidx_P, hidx_Pr, 
                                         otherEntry_P, i_P, indicies_P, 
                                         portDomain_P, sourcePort_P, 
                                         destPort_P, new_sport_P, depth_Pr, 
                                         pkt_Priv, conn_Pr, hostMarker_Priv, 
                                         daddr_Pr, hostidx_Pr, hidx_Pri, 
                                         otherEntry_Pr, i_Pr, indicies_Pr, 
                                         portDomain_Pr, sourcePort_Pr, 
                                         destPort_Pr, new_sport_Pr, pkt_PrivT, 
                                         conn_Pri, hostMarker_PrivT, daddr_Pri, 
                                         hostidx_Pri, hidx_Priv, 
                                         otherEntry_Pri, i_Pri, indicies_Pri, 
                                         portDomain_Pri, sourcePort_Pri, 
                                         destPort_Pri, new_sport_Pri, depth_C, 
                                         host_C, hidx_Co, host_idx_Co, pidx_Co, 
                                         port_idx_Co, connhost, port, host_Co, 
                                         hidx_Con, host_idx, pidx, port_idx, 
                                         depth_Di, ip_D, host_Di, connDomain, 
                                         cidx, conn_Dis, depth_Pu, pkt_Pu, 
                                         ipkt_Pu, entry_Pu, conn_Pub, 
                                         hostMarker_Pu, ip_idx_Pu, ipidx_Pu, 
                                         ip_Pub, host_Pub, depth_E, i_E, j_, 
                                         ip_E, host_E, indecies_, depth_Ev, 
                                         i_Ev, j_E, ip_Ev, host_Ev, indecies_E, 
                                         i_C, i_Ch, depth_Pub, pkt_Pub, 
                                         ipkt_Pub, entry_Pub, conn_PubT, 
                                         hostMarker_Pub, ip_idx_Pub, ipidx_Pub, 
                                         ip_PubT, host_PubT, depth_Priv, 
                                         pkt_PrivToP, conn_PrivT, 
                                         hostMarker_PrivToP, daddr, hostidx, 
                                         hidx, otherEntry, i_PrivT, indicies, 
                                         portDomain, sourcePort, destPort, 
                                         new_sport, depth_PubT, pkt, ipkt, 
                                         entry, conn_PubTo, hostMarker, ip_idx, 
                                         ipidx, ip_PubTo, host_PubTo, depth, 
                                         i_Eve, j, ip_Eve, host_Eve, indecies, 
                                         i, aa >>

PrivToPub(self) == privtopubStart(self) \/ privtopubIf(self)
                      \/ privtopubConn_P(self) \/ privtopubDport_P(self)
                      \/ privtopubMaxPorts1(self)
                      \/ privtopubMaxPorts2(self) \/ privtopubGood(self)
                      \/ privToPubPkt1(self) \/ privToPubNewPort(self)
                      \/ privToPubAppendT(self) \/ privtopubPkt_Priv(self)
                      \/ privtopubRet_Pr(self)

evtSeqVStart(self) == /\ pc[self] = "evtSeqVStart"
                      /\ IF depth_E[self] <= 0
                            THEN /\ pc' = [pc EXCEPT ![self] = Head(stack[self]).pc]
                                 /\ i_E' = [i_E EXCEPT ![self] = Head(stack[self]).i_E]
                                 /\ j_' = [j_ EXCEPT ![self] = Head(stack[self]).j_]
                                 /\ ip_E' = [ip_E EXCEPT ![self] = Head(stack[self]).ip_E]
                                 /\ host_E' = [host_E EXCEPT ![self] = Head(stack[self]).host_E]
                                 /\ indecies_' = [indecies_ EXCEPT ![self] = Head(stack[self]).indecies_]
                                 /\ depth_E' = [depth_E EXCEPT ![self] = Head(stack[self]).depth_E]
                                 /\ stack' = [stack EXCEPT ![self] = Tail(stack[self])]
                                 /\ UNCHANGED << depth_, host_, hidx_, 
                                                 host_idx_, pidx_, port_idx_, 
                                                 depth_D, ip_, host_D, 
                                                 connDomain_, cidx_, conn_, 
                                                 depth_P, pkt_, ipkt_, entry_, 
                                                 conn_P, hostMarker_, ip_idx_, 
                                                 ipidx_, ip_P, host_P, 
                                                 depth_Pr, pkt_Priv, conn_Pr, 
                                                 hostMarker_Priv, daddr_Pr, 
                                                 hostidx_Pr, hidx_Pri, 
                                                 otherEntry_Pr, i_Pr, 
                                                 indicies_Pr, portDomain_Pr, 
                                                 sourcePort_Pr, destPort_Pr, 
                                                 new_sport_Pr >>
                            ELSE /\ \/ /\ IF Len(FreeIPs) > 0
                                             THEN /\ /\ depth_' = [depth_ EXCEPT ![self] = depth_E[self] - 1]
                                                     /\ stack' = [stack EXCEPT ![self] = << [ procedure |->  "ConnectVuln",
                                                                                              pc        |->  "evtSeqVRet",
                                                                                              host_     |->  host_[self],
                                                                                              hidx_     |->  hidx_[self],
                                                                                              host_idx_ |->  host_idx_[self],
                                                                                              pidx_     |->  pidx_[self],
                                                                                              port_idx_ |->  port_idx_[self],
                                                                                              depth_    |->  depth_[self] ] >>
                                                                                          \o stack[self]]
                                                  /\ host_' = [host_ EXCEPT ![self] = defaultInitValue]
                                                  /\ hidx_' = [hidx_ EXCEPT ![self] = defaultInitValue]
                                                  /\ host_idx_' = [host_idx_ EXCEPT ![self] = defaultInitValue]
                                                  /\ pidx_' = [pidx_ EXCEPT ![self] = defaultInitValue]
                                                  /\ port_idx_' = [port_idx_ EXCEPT ![self] = defaultInitValue]
                                                  /\ pc' = [pc EXCEPT ![self] = "connectVEvtSeqV"]
                                             ELSE /\ pc' = [pc EXCEPT ![self] = "evtSeqVRet"]
                                                  /\ UNCHANGED << stack, 
                                                                  depth_, 
                                                                  host_, hidx_, 
                                                                  host_idx_, 
                                                                  pidx_, 
                                                                  port_idx_ >>
                                       /\ UNCHANGED <<depth_D, ip_, host_D, connDomain_, cidx_, conn_, depth_P, pkt_, ipkt_, entry_, conn_P, hostMarker_, ip_idx_, ipidx_, ip_P, host_P, depth_Pr, pkt_Priv, conn_Pr, hostMarker_Priv, daddr_Pr, hostidx_Pr, hidx_Pri, otherEntry_Pr, i_Pr, indicies_Pr, portDomain_Pr, sourcePort_Pr, destPort_Pr, new_sport_Pr>>
                                    \/ /\ IF Len (Connections) > 0
                                             THEN /\ PrintT(<<"EventSequenceVuln - Disconnect", Connections>>)
                                                  /\ /\ depth_D' = [depth_D EXCEPT ![self] = depth_E[self] - 1]
                                                     /\ stack' = [stack EXCEPT ![self] = << [ procedure |->  "DisconnectVuln",
                                                                                              pc        |->  "evtSeqVRet",
                                                                                              ip_       |->  ip_[self],
                                                                                              host_D    |->  host_D[self],
                                                                                              connDomain_ |->  connDomain_[self],
                                                                                              cidx_     |->  cidx_[self],
                                                                                              conn_     |->  conn_[self],
                                                                                              depth_D   |->  depth_D[self] ] >>
                                                                                          \o stack[self]]
                                                  /\ ip_' = [ip_ EXCEPT ![self] = defaultInitValue]
                                                  /\ host_D' = [host_D EXCEPT ![self] = defaultInitValue]
                                                  /\ connDomain_' = [connDomain_ EXCEPT ![self] = defaultInitValue]
                                                  /\ cidx_' = [cidx_ EXCEPT ![self] = defaultInitValue]
                                                  /\ conn_' = [conn_ EXCEPT ![self] = defaultInitValue]
                                                  /\ pc' = [pc EXCEPT ![self] = "disconnectVEvtSV"]
                                             ELSE /\ pc' = [pc EXCEPT ![self] = "evtSeqVRet"]
                                                  /\ UNCHANGED << stack, 
                                                                  depth_D, ip_, 
                                                                  host_D, 
                                                                  connDomain_, 
                                                                  cidx_, conn_ >>
                                       /\ UNCHANGED <<depth_, host_, hidx_, host_idx_, pidx_, port_idx_, depth_P, pkt_, ipkt_, entry_, conn_P, hostMarker_, ip_idx_, ipidx_, ip_P, host_P, depth_Pr, pkt_Priv, conn_Pr, hostMarker_Priv, daddr_Pr, hostidx_Pr, hidx_Pri, otherEntry_Pr, i_Pr, indicies_Pr, portDomain_Pr, sourcePort_Pr, destPort_Pr, new_sport_Pr>>
                                    \/ /\ IF Len(Connections) > 0
                                             THEN /\ PrintT(<<"EventSequenceVuln - PrivToPubVuln:", Connections>>)
                                                  /\ /\ depth_Pr' = [depth_Pr EXCEPT ![self] = depth_E[self] - 1]
                                                     /\ stack' = [stack EXCEPT ![self] = << [ procedure |->  "PrivToPubVuln",
                                                                                              pc        |->  "evtSeqVRet",
                                                                                              pkt_Priv  |->  pkt_Priv[self],
                                                                                              conn_Pr   |->  conn_Pr[self],
                                                                                              hostMarker_Priv |->  hostMarker_Priv[self],
                                                                                              daddr_Pr  |->  daddr_Pr[self],
                                                                                              hostidx_Pr |->  hostidx_Pr[self],
                                                                                              hidx_Pri  |->  hidx_Pri[self],
                                                                                              otherEntry_Pr |->  otherEntry_Pr[self],
                                                                                              i_Pr      |->  i_Pr[self],
                                                                                              indicies_Pr |->  indicies_Pr[self],
                                                                                              portDomain_Pr |->  portDomain_Pr[self],
                                                                                              sourcePort_Pr |->  sourcePort_Pr[self],
                                                                                              destPort_Pr |->  destPort_Pr[self],
                                                                                              new_sport_Pr |->  new_sport_Pr[self],
                                                                                              depth_Pr  |->  depth_Pr[self] ] >>
                                                                                          \o stack[self]]
                                                  /\ pkt_Priv' = [pkt_Priv EXCEPT ![self] = defaultInitValue]
                                                  /\ conn_Pr' = [conn_Pr EXCEPT ![self] = defaultInitValue]
                                                  /\ hostMarker_Priv' = [hostMarker_Priv EXCEPT ![self] = defaultInitValue]
                                                  /\ daddr_Pr' = [daddr_Pr EXCEPT ![self] = defaultInitValue]
                                                  /\ hostidx_Pr' = [hostidx_Pr EXCEPT ![self] = defaultInitValue]
                                                  /\ hidx_Pri' = [hidx_Pri EXCEPT ![self] = defaultInitValue]
                                                  /\ otherEntry_Pr' = [otherEntry_Pr EXCEPT ![self] = defaultInitValue]
                                                  /\ i_Pr' = [i_Pr EXCEPT ![self] = defaultInitValue]
                                                  /\ indicies_Pr' = [indicies_Pr EXCEPT ![self] = defaultInitValue]
                                                  /\ portDomain_Pr' = [portDomain_Pr EXCEPT ![self] = defaultInitValue]
                                                  /\ sourcePort_Pr' = [sourcePort_Pr EXCEPT ![self] = defaultInitValue]
                                                  /\ destPort_Pr' = [destPort_Pr EXCEPT ![self] = defaultInitValue]
                                                  /\ new_sport_Pr' = [new_sport_Pr EXCEPT ![self] = defaultInitValue]
                                                  /\ pc' = [pc EXCEPT ![self] = "privtopubV3_"]
                                             ELSE /\ pc' = [pc EXCEPT ![self] = "evtSeqVRet"]
                                                  /\ UNCHANGED << stack, 
                                                                  depth_Pr, 
                                                                  pkt_Priv, 
                                                                  conn_Pr, 
                                                                  hostMarker_Priv, 
                                                                  daddr_Pr, 
                                                                  hostidx_Pr, 
                                                                  hidx_Pri, 
                                                                  otherEntry_Pr, 
                                                                  i_Pr, 
                                                                  indicies_Pr, 
                                                                  portDomain_Pr, 
                                                                  sourcePort_Pr, 
                                                                  destPort_Pr, 
                                                                  new_sport_Pr >>
                                       /\ UNCHANGED <<depth_, host_, hidx_, host_idx_, pidx_, port_idx_, depth_D, ip_, host_D, connDomain_, cidx_, conn_, depth_P, pkt_, ipkt_, entry_, conn_P, hostMarker_, ip_idx_, ipidx_, ip_P, host_P>>
                                    \/ /\ IF Len(SendQueue) > 0
                                             THEN /\ /\ depth_P' = [depth_P EXCEPT ![self] = depth_E[self] - 1]
                                                     /\ stack' = [stack EXCEPT ![self] = << [ procedure |->  "PubToPrivVuln",
                                                                                              pc        |->  "evtSeqVRet",
                                                                                              pkt_      |->  pkt_[self],
                                                                                              ipkt_     |->  ipkt_[self],
                                                                                              entry_    |->  entry_[self],
                                                                                              conn_P    |->  conn_P[self],
                                                                                              hostMarker_ |->  hostMarker_[self],
                                                                                              ip_idx_   |->  ip_idx_[self],
                                                                                              ipidx_    |->  ipidx_[self],
                                                                                              ip_P      |->  ip_P[self],
                                                                                              host_P    |->  host_P[self],
                                                                                              depth_P   |->  depth_P[self] ] >>
                                                                                          \o stack[self]]
                                                  /\ pkt_' = [pkt_ EXCEPT ![self] = defaultInitValue]
                                                  /\ ipkt_' = [ipkt_ EXCEPT ![self] = defaultInitValue]
                                                  /\ entry_' = [entry_ EXCEPT ![self] = defaultInitValue]
                                                  /\ conn_P' = [conn_P EXCEPT ![self] = defaultInitValue]
                                                  /\ hostMarker_' = [hostMarker_ EXCEPT ![self] = defaultInitValue]
                                                  /\ ip_idx_' = [ip_idx_ EXCEPT ![self] = defaultInitValue]
                                                  /\ ipidx_' = [ipidx_ EXCEPT ![self] = defaultInitValue]
                                                  /\ ip_P' = [ip_P EXCEPT ![self] = defaultInitValue]
                                                  /\ host_P' = [host_P EXCEPT ![self] = defaultInitValue]
                                                  /\ pc' = [pc EXCEPT ![self] = "pubtoprivVEvt3_"]
                                             ELSE /\ pc' = [pc EXCEPT ![self] = "evtSeqVRet"]
                                                  /\ UNCHANGED << stack, 
                                                                  depth_P, 
                                                                  pkt_, ipkt_, 
                                                                  entry_, 
                                                                  conn_P, 
                                                                  hostMarker_, 
                                                                  ip_idx_, 
                                                                  ipidx_, ip_P, 
                                                                  host_P >>
                                       /\ UNCHANGED <<depth_, host_, hidx_, host_idx_, pidx_, port_idx_, depth_D, ip_, host_D, connDomain_, cidx_, conn_, depth_Pr, pkt_Priv, conn_Pr, hostMarker_Priv, daddr_Pr, hostidx_Pr, hidx_Pri, otherEntry_Pr, i_Pr, indicies_Pr, portDomain_Pr, sourcePort_Pr, destPort_Pr, new_sport_Pr>>
                                 /\ UNCHANGED << depth_E, i_E, j_, ip_E, 
                                                 host_E, indecies_ >>
                      /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, Bb, 
                                      Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, Ll, 
                                      Mm, Nn, Oo, Pp, Qq, Rr, Ss, Tt, Uu, Vv, 
                                      Ww, Xx, Yy, Zz, H1, H2, MaxPorts, EP1, 
                                      PortMap1, EP2, PortMap2, TableFull, 
                                      EvictionReroute, PortScanInv, ATIPInv, 
                                      MaxTableSize, hosts, FreeHosts, 
                                      UsedHosts, Ports, ExtraPorts, 
                                      ExtraExtraPorts, T, FreeIPs, PrivIPs, 
                                      PubIPs, PortSpace, UsedIPs, Connections, 
                                      SendQueue, RcvQueue, MAX, Marker1, 
                                      Marker2, CmdConnect, CmdDisconnect, 
                                      PortSpaceFull, host_Con, ip_C, hidx_C, 
                                      host_idx_C, pidx_C, port_idx_C, host_Dis, 
                                      ip_Di, connDomain_D, cidx_D, conn_D, 
                                      host, ip, connDomain_Di, cidx_Di, 
                                      conn_Di, pkt_P, ipkt_P, entry_P, conn_Pu, 
                                      hostMarker_P, ip_idx_P, ipidx_P, ip_Pu, 
                                      host_Pu, IP, conn_PrivTo, sport_, 
                                      dstAddr_, dport_, pkt_Pr, hostMarker_Pr, 
                                      daddr_, hostidx_, hidx_P, otherEntry_, 
                                      i_, indicies_, portDomain_, sourcePort_, 
                                      destPort_, new_sport_, conn, sport, 
                                      dstAddr, dport, pkt_Pri, hostMarker_Pri, 
                                      daddr_P, hostidx_P, hidx_Pr, 
                                      otherEntry_P, i_P, indicies_P, 
                                      portDomain_P, sourcePort_P, destPort_P, 
                                      new_sport_P, pkt_PrivT, conn_Pri, 
                                      hostMarker_PrivT, daddr_Pri, hostidx_Pri, 
                                      hidx_Priv, otherEntry_Pri, i_Pri, 
                                      indicies_Pri, portDomain_Pri, 
                                      sourcePort_Pri, destPort_Pri, 
                                      new_sport_Pri, depth_C, host_C, hidx_Co, 
                                      host_idx_Co, pidx_Co, port_idx_Co, 
                                      connhost, port, host_Co, hidx_Con, 
                                      host_idx, pidx, port_idx, depth_Di, ip_D, 
                                      host_Di, connDomain, cidx, conn_Dis, 
                                      depth_Pu, pkt_Pu, ipkt_Pu, entry_Pu, 
                                      conn_Pub, hostMarker_Pu, ip_idx_Pu, 
                                      ipidx_Pu, ip_Pub, host_Pub, depth_Pri, 
                                      pkt_PrivTo, conn_Priv, hostMarker_PrivTo, 
                                      daddr_Priv, hostidx_Priv, hidx_PrivT, 
                                      otherEntry_Priv, i_Priv, indicies_Priv, 
                                      portDomain_Priv, sourcePort_Priv, 
                                      destPort_Priv, new_sport_Priv, good, 
                                      depth_Ev, i_Ev, j_E, ip_Ev, host_Ev, 
                                      indecies_E, i_C, i_Ch, depth_Pub, 
                                      pkt_Pub, ipkt_Pub, entry_Pub, conn_PubT, 
                                      hostMarker_Pub, ip_idx_Pub, ipidx_Pub, 
                                      ip_PubT, host_PubT, depth_Priv, 
                                      pkt_PrivToP, conn_PrivT, 
                                      hostMarker_PrivToP, daddr, hostidx, hidx, 
                                      otherEntry, i_PrivT, indicies, 
                                      portDomain, sourcePort, destPort, 
                                      new_sport, depth_PubT, pkt, ipkt, entry, 
                                      conn_PubTo, hostMarker, ip_idx, ipidx, 
                                      ip_PubTo, host_PubTo, depth, i_Eve, j, 
                                      ip_Eve, host_Eve, indecies, i, aa >>

evtSeqVRet(self) == /\ pc[self] = "evtSeqVRet"
                    /\ pc' = [pc EXCEPT ![self] = Head(stack[self]).pc]
                    /\ i_E' = [i_E EXCEPT ![self] = Head(stack[self]).i_E]
                    /\ j_' = [j_ EXCEPT ![self] = Head(stack[self]).j_]
                    /\ ip_E' = [ip_E EXCEPT ![self] = Head(stack[self]).ip_E]
                    /\ host_E' = [host_E EXCEPT ![self] = Head(stack[self]).host_E]
                    /\ indecies_' = [indecies_ EXCEPT ![self] = Head(stack[self]).indecies_]
                    /\ depth_E' = [depth_E EXCEPT ![self] = Head(stack[self]).depth_E]
                    /\ stack' = [stack EXCEPT ![self] = Tail(stack[self])]
                    /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, Bb, 
                                    Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, Ll, Mm, 
                                    Nn, Oo, Pp, Qq, Rr, Ss, Tt, Uu, Vv, Ww, Xx, 
                                    Yy, Zz, H1, H2, MaxPorts, EP1, PortMap1, 
                                    EP2, PortMap2, TableFull, EvictionReroute, 
                                    PortScanInv, ATIPInv, MaxTableSize, hosts, 
                                    FreeHosts, UsedHosts, Ports, ExtraPorts, 
                                    ExtraExtraPorts, T, FreeIPs, PrivIPs, 
                                    PubIPs, PortSpace, UsedIPs, Connections, 
                                    SendQueue, RcvQueue, MAX, Marker1, Marker2, 
                                    CmdConnect, CmdDisconnect, PortSpaceFull, 
                                    depth_, host_, hidx_, host_idx_, pidx_, 
                                    port_idx_, depth_D, ip_, host_D, 
                                    connDomain_, cidx_, conn_, host_Con, ip_C, 
                                    hidx_C, host_idx_C, pidx_C, port_idx_C, 
                                    host_Dis, ip_Di, connDomain_D, cidx_D, 
                                    conn_D, host, ip, connDomain_Di, cidx_Di, 
                                    conn_Di, depth_P, pkt_, ipkt_, entry_, 
                                    conn_P, hostMarker_, ip_idx_, ipidx_, ip_P, 
                                    host_P, pkt_P, ipkt_P, entry_P, conn_Pu, 
                                    hostMarker_P, ip_idx_P, ipidx_P, ip_Pu, 
                                    host_Pu, IP, conn_PrivTo, sport_, dstAddr_, 
                                    dport_, pkt_Pr, hostMarker_Pr, daddr_, 
                                    hostidx_, hidx_P, otherEntry_, i_, 
                                    indicies_, portDomain_, sourcePort_, 
                                    destPort_, new_sport_, conn, sport, 
                                    dstAddr, dport, pkt_Pri, hostMarker_Pri, 
                                    daddr_P, hostidx_P, hidx_Pr, otherEntry_P, 
                                    i_P, indicies_P, portDomain_P, 
                                    sourcePort_P, destPort_P, new_sport_P, 
                                    depth_Pr, pkt_Priv, conn_Pr, 
                                    hostMarker_Priv, daddr_Pr, hostidx_Pr, 
                                    hidx_Pri, otherEntry_Pr, i_Pr, indicies_Pr, 
                                    portDomain_Pr, sourcePort_Pr, destPort_Pr, 
                                    new_sport_Pr, pkt_PrivT, conn_Pri, 
                                    hostMarker_PrivT, daddr_Pri, hostidx_Pri, 
                                    hidx_Priv, otherEntry_Pri, i_Pri, 
                                    indicies_Pri, portDomain_Pri, 
                                    sourcePort_Pri, destPort_Pri, 
                                    new_sport_Pri, depth_C, host_C, hidx_Co, 
                                    host_idx_Co, pidx_Co, port_idx_Co, 
                                    connhost, port, host_Co, hidx_Con, 
                                    host_idx, pidx, port_idx, depth_Di, ip_D, 
                                    host_Di, connDomain, cidx, conn_Dis, 
                                    depth_Pu, pkt_Pu, ipkt_Pu, entry_Pu, 
                                    conn_Pub, hostMarker_Pu, ip_idx_Pu, 
                                    ipidx_Pu, ip_Pub, host_Pub, depth_Pri, 
                                    pkt_PrivTo, conn_Priv, hostMarker_PrivTo, 
                                    daddr_Priv, hostidx_Priv, hidx_PrivT, 
                                    otherEntry_Priv, i_Priv, indicies_Priv, 
                                    portDomain_Priv, sourcePort_Priv, 
                                    destPort_Priv, new_sport_Priv, good, 
                                    depth_Ev, i_Ev, j_E, ip_Ev, host_Ev, 
                                    indecies_E, i_C, i_Ch, depth_Pub, pkt_Pub, 
                                    ipkt_Pub, entry_Pub, conn_PubT, 
                                    hostMarker_Pub, ip_idx_Pub, ipidx_Pub, 
                                    ip_PubT, host_PubT, depth_Priv, 
                                    pkt_PrivToP, conn_PrivT, 
                                    hostMarker_PrivToP, daddr, hostidx, hidx, 
                                    otherEntry, i_PrivT, indicies, portDomain, 
                                    sourcePort, destPort, new_sport, 
                                    depth_PubT, pkt, ipkt, entry, conn_PubTo, 
                                    hostMarker, ip_idx, ipidx, ip_PubTo, 
                                    host_PubTo, depth, i_Eve, j, ip_Eve, 
                                    host_Eve, indecies, i, aa >>

EventSequenceVuln(self) == evtSeqVStart(self) \/ evtSeqVRet(self)

evtSeqStart_(self) == /\ pc[self] = "evtSeqStart_"
                      /\ IF depth_Ev[self] <= 0
                            THEN /\ pc' = [pc EXCEPT ![self] = "evtSeqD0_"]
                                 /\ UNCHANGED << stack, depth_C, host_C, 
                                                 hidx_Co, host_idx_Co, pidx_Co, 
                                                 port_idx_Co, depth_Di, ip_D, 
                                                 host_Di, connDomain, cidx, 
                                                 conn_Dis, depth_Pu, pkt_Pu, 
                                                 ipkt_Pu, entry_Pu, conn_Pub, 
                                                 hostMarker_Pu, ip_idx_Pu, 
                                                 ipidx_Pu, ip_Pub, host_Pub, 
                                                 depth_Pri, pkt_PrivTo, 
                                                 conn_Priv, hostMarker_PrivTo, 
                                                 daddr_Priv, hostidx_Priv, 
                                                 hidx_PrivT, otherEntry_Priv, 
                                                 i_Priv, indicies_Priv, 
                                                 portDomain_Priv, 
                                                 sourcePort_Priv, 
                                                 destPort_Priv, new_sport_Priv, 
                                                 good >>
                            ELSE /\ \/ /\ IF Len(FreeIPs) > 0
                                             THEN /\ /\ depth_C' = [depth_C EXCEPT ![self] = depth_Ev[self] - 1]
                                                     /\ stack' = [stack EXCEPT ![self] = << [ procedure |->  "Connect",
                                                                                              pc        |->  "evtSeqRet_",
                                                                                              host_C    |->  host_C[self],
                                                                                              hidx_Co   |->  hidx_Co[self],
                                                                                              host_idx_Co |->  host_idx_Co[self],
                                                                                              pidx_Co   |->  pidx_Co[self],
                                                                                              port_idx_Co |->  port_idx_Co[self],
                                                                                              depth_C   |->  depth_C[self] ] >>
                                                                                          \o stack[self]]
                                                  /\ host_C' = [host_C EXCEPT ![self] = defaultInitValue]
                                                  /\ hidx_Co' = [hidx_Co EXCEPT ![self] = defaultInitValue]
                                                  /\ host_idx_Co' = [host_idx_Co EXCEPT ![self] = defaultInitValue]
                                                  /\ pidx_Co' = [pidx_Co EXCEPT ![self] = defaultInitValue]
                                                  /\ port_idx_Co' = [port_idx_Co EXCEPT ![self] = defaultInitValue]
                                                  /\ pc' = [pc EXCEPT ![self] = "connectStart"]
                                             ELSE /\ pc' = [pc EXCEPT ![self] = "evtSeqRet_"]
                                                  /\ UNCHANGED << stack, 
                                                                  depth_C, 
                                                                  host_C, 
                                                                  hidx_Co, 
                                                                  host_idx_Co, 
                                                                  pidx_Co, 
                                                                  port_idx_Co >>
                                       /\ UNCHANGED <<depth_Di, ip_D, host_Di, connDomain, cidx, conn_Dis, depth_Pu, pkt_Pu, ipkt_Pu, entry_Pu, conn_Pub, hostMarker_Pu, ip_idx_Pu, ipidx_Pu, ip_Pub, host_Pub, depth_Pri, pkt_PrivTo, conn_Priv, hostMarker_PrivTo, daddr_Priv, hostidx_Priv, hidx_PrivT, otherEntry_Priv, i_Priv, indicies_Priv, portDomain_Priv, sourcePort_Priv, destPort_Priv, new_sport_Priv, good>>
                                    \/ /\ IF Len (Connections) > 0
                                             THEN /\ /\ depth_Di' = [depth_Di EXCEPT ![self] = depth_Ev[self] - 1]
                                                     /\ stack' = [stack EXCEPT ![self] = << [ procedure |->  "Disconnect",
                                                                                              pc        |->  "evtSeqRet_",
                                                                                              ip_D      |->  ip_D[self],
                                                                                              host_Di   |->  host_Di[self],
                                                                                              connDomain |->  connDomain[self],
                                                                                              cidx      |->  cidx[self],
                                                                                              conn_Dis  |->  conn_Dis[self],
                                                                                              depth_Di  |->  depth_Di[self] ] >>
                                                                                          \o stack[self]]
                                                  /\ ip_D' = [ip_D EXCEPT ![self] = defaultInitValue]
                                                  /\ host_Di' = [host_Di EXCEPT ![self] = defaultInitValue]
                                                  /\ connDomain' = [connDomain EXCEPT ![self] = defaultInitValue]
                                                  /\ cidx' = [cidx EXCEPT ![self] = defaultInitValue]
                                                  /\ conn_Dis' = [conn_Dis EXCEPT ![self] = defaultInitValue]
                                                  /\ pc' = [pc EXCEPT ![self] = "disconnectStart"]
                                             ELSE /\ pc' = [pc EXCEPT ![self] = "evtSeqRet_"]
                                                  /\ UNCHANGED << stack, 
                                                                  depth_Di, 
                                                                  ip_D, 
                                                                  host_Di, 
                                                                  connDomain, 
                                                                  cidx, 
                                                                  conn_Dis >>
                                       /\ UNCHANGED <<depth_C, host_C, hidx_Co, host_idx_Co, pidx_Co, port_idx_Co, depth_Pu, pkt_Pu, ipkt_Pu, entry_Pu, conn_Pub, hostMarker_Pu, ip_idx_Pu, ipidx_Pu, ip_Pub, host_Pub, depth_Pri, pkt_PrivTo, conn_Priv, hostMarker_PrivTo, daddr_Priv, hostidx_Priv, hidx_PrivT, otherEntry_Priv, i_Priv, indicies_Priv, portDomain_Priv, sourcePort_Priv, destPort_Priv, new_sport_Priv, good>>
                                    \/ /\ IF Len(Connections) > 0
                                             THEN /\ /\ depth_Pri' = [depth_Pri EXCEPT ![self] = depth_Ev[self] - 1]
                                                     /\ stack' = [stack EXCEPT ![self] = << [ procedure |->  "PrivToPub",
                                                                                              pc        |->  "evtSeqRet_",
                                                                                              pkt_PrivTo |->  pkt_PrivTo[self],
                                                                                              conn_Priv |->  conn_Priv[self],
                                                                                              hostMarker_PrivTo |->  hostMarker_PrivTo[self],
                                                                                              daddr_Priv |->  daddr_Priv[self],
                                                                                              hostidx_Priv |->  hostidx_Priv[self],
                                                                                              hidx_PrivT |->  hidx_PrivT[self],
                                                                                              otherEntry_Priv |->  otherEntry_Priv[self],
                                                                                              i_Priv    |->  i_Priv[self],
                                                                                              indicies_Priv |->  indicies_Priv[self],
                                                                                              portDomain_Priv |->  portDomain_Priv[self],
                                                                                              sourcePort_Priv |->  sourcePort_Priv[self],
                                                                                              destPort_Priv |->  destPort_Priv[self],
                                                                                              new_sport_Priv |->  new_sport_Priv[self],
                                                                                              good      |->  good[self],
                                                                                              depth_Pri |->  depth_Pri[self] ] >>
                                                                                          \o stack[self]]
                                                  /\ pkt_PrivTo' = [pkt_PrivTo EXCEPT ![self] = defaultInitValue]
                                                  /\ conn_Priv' = [conn_Priv EXCEPT ![self] = defaultInitValue]
                                                  /\ hostMarker_PrivTo' = [hostMarker_PrivTo EXCEPT ![self] = defaultInitValue]
                                                  /\ daddr_Priv' = [daddr_Priv EXCEPT ![self] = defaultInitValue]
                                                  /\ hostidx_Priv' = [hostidx_Priv EXCEPT ![self] = defaultInitValue]
                                                  /\ hidx_PrivT' = [hidx_PrivT EXCEPT ![self] = defaultInitValue]
                                                  /\ otherEntry_Priv' = [otherEntry_Priv EXCEPT ![self] = defaultInitValue]
                                                  /\ i_Priv' = [i_Priv EXCEPT ![self] = defaultInitValue]
                                                  /\ indicies_Priv' = [indicies_Priv EXCEPT ![self] = defaultInitValue]
                                                  /\ portDomain_Priv' = [portDomain_Priv EXCEPT ![self] = defaultInitValue]
                                                  /\ sourcePort_Priv' = [sourcePort_Priv EXCEPT ![self] = defaultInitValue]
                                                  /\ destPort_Priv' = [destPort_Priv EXCEPT ![self] = defaultInitValue]
                                                  /\ new_sport_Priv' = [new_sport_Priv EXCEPT ![self] = defaultInitValue]
                                                  /\ good' = [good EXCEPT ![self] = defaultInitValue]
                                                  /\ pc' = [pc EXCEPT ![self] = "privtopubStart"]
                                             ELSE /\ pc' = [pc EXCEPT ![self] = "evtSeqRet_"]
                                                  /\ UNCHANGED << stack, 
                                                                  depth_Pri, 
                                                                  pkt_PrivTo, 
                                                                  conn_Priv, 
                                                                  hostMarker_PrivTo, 
                                                                  daddr_Priv, 
                                                                  hostidx_Priv, 
                                                                  hidx_PrivT, 
                                                                  otherEntry_Priv, 
                                                                  i_Priv, 
                                                                  indicies_Priv, 
                                                                  portDomain_Priv, 
                                                                  sourcePort_Priv, 
                                                                  destPort_Priv, 
                                                                  new_sport_Priv, 
                                                                  good >>
                                       /\ UNCHANGED <<depth_C, host_C, hidx_Co, host_idx_Co, pidx_Co, port_idx_Co, depth_Di, ip_D, host_Di, connDomain, cidx, conn_Dis, depth_Pu, pkt_Pu, ipkt_Pu, entry_Pu, conn_Pub, hostMarker_Pu, ip_idx_Pu, ipidx_Pu, ip_Pub, host_Pub>>
                                    \/ /\ IF Len(SendQueue) > 0
                                             THEN /\ /\ depth_Pu' = [depth_Pu EXCEPT ![self] = depth_Ev[self] - 1]
                                                     /\ stack' = [stack EXCEPT ![self] = << [ procedure |->  "PubToPriv",
                                                                                              pc        |->  "evtSeqRet_",
                                                                                              pkt_Pu    |->  pkt_Pu[self],
                                                                                              ipkt_Pu   |->  ipkt_Pu[self],
                                                                                              entry_Pu  |->  entry_Pu[self],
                                                                                              conn_Pub  |->  conn_Pub[self],
                                                                                              hostMarker_Pu |->  hostMarker_Pu[self],
                                                                                              ip_idx_Pu |->  ip_idx_Pu[self],
                                                                                              ipidx_Pu  |->  ipidx_Pu[self],
                                                                                              ip_Pub    |->  ip_Pub[self],
                                                                                              host_Pub  |->  host_Pub[self],
                                                                                              depth_Pu  |->  depth_Pu[self] ] >>
                                                                                          \o stack[self]]
                                                  /\ pkt_Pu' = [pkt_Pu EXCEPT ![self] = defaultInitValue]
                                                  /\ ipkt_Pu' = [ipkt_Pu EXCEPT ![self] = defaultInitValue]
                                                  /\ entry_Pu' = [entry_Pu EXCEPT ![self] = defaultInitValue]
                                                  /\ conn_Pub' = [conn_Pub EXCEPT ![self] = defaultInitValue]
                                                  /\ hostMarker_Pu' = [hostMarker_Pu EXCEPT ![self] = defaultInitValue]
                                                  /\ ip_idx_Pu' = [ip_idx_Pu EXCEPT ![self] = defaultInitValue]
                                                  /\ ipidx_Pu' = [ipidx_Pu EXCEPT ![self] = defaultInitValue]
                                                  /\ ip_Pub' = [ip_Pub EXCEPT ![self] = defaultInitValue]
                                                  /\ host_Pub' = [host_Pub EXCEPT ![self] = defaultInitValue]
                                                  /\ pc' = [pc EXCEPT ![self] = "pubtoprivStart_"]
                                             ELSE /\ pc' = [pc EXCEPT ![self] = "evtSeqRet_"]
                                                  /\ UNCHANGED << stack, 
                                                                  depth_Pu, 
                                                                  pkt_Pu, 
                                                                  ipkt_Pu, 
                                                                  entry_Pu, 
                                                                  conn_Pub, 
                                                                  hostMarker_Pu, 
                                                                  ip_idx_Pu, 
                                                                  ipidx_Pu, 
                                                                  ip_Pub, 
                                                                  host_Pub >>
                                       /\ UNCHANGED <<depth_C, host_C, hidx_Co, host_idx_Co, pidx_Co, port_idx_Co, depth_Di, ip_D, host_Di, connDomain, cidx, conn_Dis, depth_Pri, pkt_PrivTo, conn_Priv, hostMarker_PrivTo, daddr_Priv, hostidx_Priv, hidx_PrivT, otherEntry_Priv, i_Priv, indicies_Priv, portDomain_Priv, sourcePort_Priv, destPort_Priv, new_sport_Priv, good>>
                      /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, Bb, 
                                      Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, Ll, 
                                      Mm, Nn, Oo, Pp, Qq, Rr, Ss, Tt, Uu, Vv, 
                                      Ww, Xx, Yy, Zz, H1, H2, MaxPorts, EP1, 
                                      PortMap1, EP2, PortMap2, TableFull, 
                                      EvictionReroute, PortScanInv, ATIPInv, 
                                      MaxTableSize, hosts, FreeHosts, 
                                      UsedHosts, Ports, ExtraPorts, 
                                      ExtraExtraPorts, T, FreeIPs, PrivIPs, 
                                      PubIPs, PortSpace, UsedIPs, Connections, 
                                      SendQueue, RcvQueue, MAX, Marker1, 
                                      Marker2, CmdConnect, CmdDisconnect, 
                                      PortSpaceFull, depth_, host_, hidx_, 
                                      host_idx_, pidx_, port_idx_, depth_D, 
                                      ip_, host_D, connDomain_, cidx_, conn_, 
                                      host_Con, ip_C, hidx_C, host_idx_C, 
                                      pidx_C, port_idx_C, host_Dis, ip_Di, 
                                      connDomain_D, cidx_D, conn_D, host, ip, 
                                      connDomain_Di, cidx_Di, conn_Di, depth_P, 
                                      pkt_, ipkt_, entry_, conn_P, hostMarker_, 
                                      ip_idx_, ipidx_, ip_P, host_P, pkt_P, 
                                      ipkt_P, entry_P, conn_Pu, hostMarker_P, 
                                      ip_idx_P, ipidx_P, ip_Pu, host_Pu, IP, 
                                      conn_PrivTo, sport_, dstAddr_, dport_, 
                                      pkt_Pr, hostMarker_Pr, daddr_, hostidx_, 
                                      hidx_P, otherEntry_, i_, indicies_, 
                                      portDomain_, sourcePort_, destPort_, 
                                      new_sport_, conn, sport, dstAddr, dport, 
                                      pkt_Pri, hostMarker_Pri, daddr_P, 
                                      hostidx_P, hidx_Pr, otherEntry_P, i_P, 
                                      indicies_P, portDomain_P, sourcePort_P, 
                                      destPort_P, new_sport_P, depth_Pr, 
                                      pkt_Priv, conn_Pr, hostMarker_Priv, 
                                      daddr_Pr, hostidx_Pr, hidx_Pri, 
                                      otherEntry_Pr, i_Pr, indicies_Pr, 
                                      portDomain_Pr, sourcePort_Pr, 
                                      destPort_Pr, new_sport_Pr, pkt_PrivT, 
                                      conn_Pri, hostMarker_PrivT, daddr_Pri, 
                                      hostidx_Pri, hidx_Priv, otherEntry_Pri, 
                                      i_Pri, indicies_Pri, portDomain_Pri, 
                                      sourcePort_Pri, destPort_Pri, 
                                      new_sport_Pri, connhost, port, host_Co, 
                                      hidx_Con, host_idx, pidx, port_idx, 
                                      depth_E, i_E, j_, ip_E, host_E, 
                                      indecies_, depth_Ev, i_Ev, j_E, ip_Ev, 
                                      host_Ev, indecies_E, i_C, i_Ch, 
                                      depth_Pub, pkt_Pub, ipkt_Pub, entry_Pub, 
                                      conn_PubT, hostMarker_Pub, ip_idx_Pub, 
                                      ipidx_Pub, ip_PubT, host_PubT, 
                                      depth_Priv, pkt_PrivToP, conn_PrivT, 
                                      hostMarker_PrivToP, daddr, hostidx, hidx, 
                                      otherEntry, i_PrivT, indicies, 
                                      portDomain, sourcePort, destPort, 
                                      new_sport, depth_PubT, pkt, ipkt, entry, 
                                      conn_PubTo, hostMarker, ip_idx, ipidx, 
                                      ip_PubTo, host_PubTo, depth, i_Eve, j, 
                                      ip_Eve, host_Eve, indecies, i, aa >>

evtSeqD0_(self) == /\ pc[self] = "evtSeqD0_"
                   /\ pc' = [pc EXCEPT ![self] = Head(stack[self]).pc]
                   /\ i_Ev' = [i_Ev EXCEPT ![self] = Head(stack[self]).i_Ev]
                   /\ j_E' = [j_E EXCEPT ![self] = Head(stack[self]).j_E]
                   /\ ip_Ev' = [ip_Ev EXCEPT ![self] = Head(stack[self]).ip_Ev]
                   /\ host_Ev' = [host_Ev EXCEPT ![self] = Head(stack[self]).host_Ev]
                   /\ indecies_E' = [indecies_E EXCEPT ![self] = Head(stack[self]).indecies_E]
                   /\ depth_Ev' = [depth_Ev EXCEPT ![self] = Head(stack[self]).depth_Ev]
                   /\ stack' = [stack EXCEPT ![self] = Tail(stack[self])]
                   /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, Bb, 
                                   Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, Ll, Mm, 
                                   Nn, Oo, Pp, Qq, Rr, Ss, Tt, Uu, Vv, Ww, Xx, 
                                   Yy, Zz, H1, H2, MaxPorts, EP1, PortMap1, 
                                   EP2, PortMap2, TableFull, EvictionReroute, 
                                   PortScanInv, ATIPInv, MaxTableSize, hosts, 
                                   FreeHosts, UsedHosts, Ports, ExtraPorts, 
                                   ExtraExtraPorts, T, FreeIPs, PrivIPs, 
                                   PubIPs, PortSpace, UsedIPs, Connections, 
                                   SendQueue, RcvQueue, MAX, Marker1, Marker2, 
                                   CmdConnect, CmdDisconnect, PortSpaceFull, 
                                   depth_, host_, hidx_, host_idx_, pidx_, 
                                   port_idx_, depth_D, ip_, host_D, 
                                   connDomain_, cidx_, conn_, host_Con, ip_C, 
                                   hidx_C, host_idx_C, pidx_C, port_idx_C, 
                                   host_Dis, ip_Di, connDomain_D, cidx_D, 
                                   conn_D, host, ip, connDomain_Di, cidx_Di, 
                                   conn_Di, depth_P, pkt_, ipkt_, entry_, 
                                   conn_P, hostMarker_, ip_idx_, ipidx_, ip_P, 
                                   host_P, pkt_P, ipkt_P, entry_P, conn_Pu, 
                                   hostMarker_P, ip_idx_P, ipidx_P, ip_Pu, 
                                   host_Pu, IP, conn_PrivTo, sport_, dstAddr_, 
                                   dport_, pkt_Pr, hostMarker_Pr, daddr_, 
                                   hostidx_, hidx_P, otherEntry_, i_, 
                                   indicies_, portDomain_, sourcePort_, 
                                   destPort_, new_sport_, conn, sport, dstAddr, 
                                   dport, pkt_Pri, hostMarker_Pri, daddr_P, 
                                   hostidx_P, hidx_Pr, otherEntry_P, i_P, 
                                   indicies_P, portDomain_P, sourcePort_P, 
                                   destPort_P, new_sport_P, depth_Pr, pkt_Priv, 
                                   conn_Pr, hostMarker_Priv, daddr_Pr, 
                                   hostidx_Pr, hidx_Pri, otherEntry_Pr, i_Pr, 
                                   indicies_Pr, portDomain_Pr, sourcePort_Pr, 
                                   destPort_Pr, new_sport_Pr, pkt_PrivT, 
                                   conn_Pri, hostMarker_PrivT, daddr_Pri, 
                                   hostidx_Pri, hidx_Priv, otherEntry_Pri, 
                                   i_Pri, indicies_Pri, portDomain_Pri, 
                                   sourcePort_Pri, destPort_Pri, new_sport_Pri, 
                                   depth_C, host_C, hidx_Co, host_idx_Co, 
                                   pidx_Co, port_idx_Co, connhost, port, 
                                   host_Co, hidx_Con, host_idx, pidx, port_idx, 
                                   depth_Di, ip_D, host_Di, connDomain, cidx, 
                                   conn_Dis, depth_Pu, pkt_Pu, ipkt_Pu, 
                                   entry_Pu, conn_Pub, hostMarker_Pu, 
                                   ip_idx_Pu, ipidx_Pu, ip_Pub, host_Pub, 
                                   depth_Pri, pkt_PrivTo, conn_Priv, 
                                   hostMarker_PrivTo, daddr_Priv, hostidx_Priv, 
                                   hidx_PrivT, otherEntry_Priv, i_Priv, 
                                   indicies_Priv, portDomain_Priv, 
                                   sourcePort_Priv, destPort_Priv, 
                                   new_sport_Priv, good, depth_E, i_E, j_, 
                                   ip_E, host_E, indecies_, i_C, i_Ch, 
                                   depth_Pub, pkt_Pub, ipkt_Pub, entry_Pub, 
                                   conn_PubT, hostMarker_Pub, ip_idx_Pub, 
                                   ipidx_Pub, ip_PubT, host_PubT, depth_Priv, 
                                   pkt_PrivToP, conn_PrivT, hostMarker_PrivToP, 
                                   daddr, hostidx, hidx, otherEntry, i_PrivT, 
                                   indicies, portDomain, sourcePort, destPort, 
                                   new_sport, depth_PubT, pkt, ipkt, entry, 
                                   conn_PubTo, hostMarker, ip_idx, ipidx, 
                                   ip_PubTo, host_PubTo, depth, i_Eve, j, 
                                   ip_Eve, host_Eve, indecies, i, aa >>

evtSeqRet_(self) == /\ pc[self] = "evtSeqRet_"
                    /\ pc' = [pc EXCEPT ![self] = Head(stack[self]).pc]
                    /\ i_Ev' = [i_Ev EXCEPT ![self] = Head(stack[self]).i_Ev]
                    /\ j_E' = [j_E EXCEPT ![self] = Head(stack[self]).j_E]
                    /\ ip_Ev' = [ip_Ev EXCEPT ![self] = Head(stack[self]).ip_Ev]
                    /\ host_Ev' = [host_Ev EXCEPT ![self] = Head(stack[self]).host_Ev]
                    /\ indecies_E' = [indecies_E EXCEPT ![self] = Head(stack[self]).indecies_E]
                    /\ depth_Ev' = [depth_Ev EXCEPT ![self] = Head(stack[self]).depth_Ev]
                    /\ stack' = [stack EXCEPT ![self] = Tail(stack[self])]
                    /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, Bb, 
                                    Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, Ll, Mm, 
                                    Nn, Oo, Pp, Qq, Rr, Ss, Tt, Uu, Vv, Ww, Xx, 
                                    Yy, Zz, H1, H2, MaxPorts, EP1, PortMap1, 
                                    EP2, PortMap2, TableFull, EvictionReroute, 
                                    PortScanInv, ATIPInv, MaxTableSize, hosts, 
                                    FreeHosts, UsedHosts, Ports, ExtraPorts, 
                                    ExtraExtraPorts, T, FreeIPs, PrivIPs, 
                                    PubIPs, PortSpace, UsedIPs, Connections, 
                                    SendQueue, RcvQueue, MAX, Marker1, Marker2, 
                                    CmdConnect, CmdDisconnect, PortSpaceFull, 
                                    depth_, host_, hidx_, host_idx_, pidx_, 
                                    port_idx_, depth_D, ip_, host_D, 
                                    connDomain_, cidx_, conn_, host_Con, ip_C, 
                                    hidx_C, host_idx_C, pidx_C, port_idx_C, 
                                    host_Dis, ip_Di, connDomain_D, cidx_D, 
                                    conn_D, host, ip, connDomain_Di, cidx_Di, 
                                    conn_Di, depth_P, pkt_, ipkt_, entry_, 
                                    conn_P, hostMarker_, ip_idx_, ipidx_, ip_P, 
                                    host_P, pkt_P, ipkt_P, entry_P, conn_Pu, 
                                    hostMarker_P, ip_idx_P, ipidx_P, ip_Pu, 
                                    host_Pu, IP, conn_PrivTo, sport_, dstAddr_, 
                                    dport_, pkt_Pr, hostMarker_Pr, daddr_, 
                                    hostidx_, hidx_P, otherEntry_, i_, 
                                    indicies_, portDomain_, sourcePort_, 
                                    destPort_, new_sport_, conn, sport, 
                                    dstAddr, dport, pkt_Pri, hostMarker_Pri, 
                                    daddr_P, hostidx_P, hidx_Pr, otherEntry_P, 
                                    i_P, indicies_P, portDomain_P, 
                                    sourcePort_P, destPort_P, new_sport_P, 
                                    depth_Pr, pkt_Priv, conn_Pr, 
                                    hostMarker_Priv, daddr_Pr, hostidx_Pr, 
                                    hidx_Pri, otherEntry_Pr, i_Pr, indicies_Pr, 
                                    portDomain_Pr, sourcePort_Pr, destPort_Pr, 
                                    new_sport_Pr, pkt_PrivT, conn_Pri, 
                                    hostMarker_PrivT, daddr_Pri, hostidx_Pri, 
                                    hidx_Priv, otherEntry_Pri, i_Pri, 
                                    indicies_Pri, portDomain_Pri, 
                                    sourcePort_Pri, destPort_Pri, 
                                    new_sport_Pri, depth_C, host_C, hidx_Co, 
                                    host_idx_Co, pidx_Co, port_idx_Co, 
                                    connhost, port, host_Co, hidx_Con, 
                                    host_idx, pidx, port_idx, depth_Di, ip_D, 
                                    host_Di, connDomain, cidx, conn_Dis, 
                                    depth_Pu, pkt_Pu, ipkt_Pu, entry_Pu, 
                                    conn_Pub, hostMarker_Pu, ip_idx_Pu, 
                                    ipidx_Pu, ip_Pub, host_Pub, depth_Pri, 
                                    pkt_PrivTo, conn_Priv, hostMarker_PrivTo, 
                                    daddr_Priv, hostidx_Priv, hidx_PrivT, 
                                    otherEntry_Priv, i_Priv, indicies_Priv, 
                                    portDomain_Priv, sourcePort_Priv, 
                                    destPort_Priv, new_sport_Priv, good, 
                                    depth_E, i_E, j_, ip_E, host_E, indecies_, 
                                    i_C, i_Ch, depth_Pub, pkt_Pub, ipkt_Pub, 
                                    entry_Pub, conn_PubT, hostMarker_Pub, 
                                    ip_idx_Pub, ipidx_Pub, ip_PubT, host_PubT, 
                                    depth_Priv, pkt_PrivToP, conn_PrivT, 
                                    hostMarker_PrivToP, daddr, hostidx, hidx, 
                                    otherEntry, i_PrivT, indicies, portDomain, 
                                    sourcePort, destPort, new_sport, 
                                    depth_PubT, pkt, ipkt, entry, conn_PubTo, 
                                    hostMarker, ip_idx, ipidx, ip_PubTo, 
                                    host_PubTo, depth, i_Eve, j, ip_Eve, 
                                    host_Eve, indecies, i, aa >>

EventSequence(self) == evtSeqStart_(self) \/ evtSeqD0_(self)
                          \/ evtSeqRet_(self)

checkModelStart_(self) == /\ pc[self] = "checkModelStart_"
                          /\ i_C' = [i_C EXCEPT ![self] = 0]
                          /\ pc' = [pc EXCEPT ![self] = "checkModelWhile_"]
                          /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, 
                                          Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, 
                                          Kk, Ll, Mm, Nn, Oo, Pp, Qq, Rr, Ss, 
                                          Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, H2, 
                                          MaxPorts, EP1, PortMap1, EP2, 
                                          PortMap2, TableFull, EvictionReroute, 
                                          PortScanInv, ATIPInv, MaxTableSize, 
                                          hosts, FreeHosts, UsedHosts, Ports, 
                                          ExtraPorts, ExtraExtraPorts, T, 
                                          FreeIPs, PrivIPs, PubIPs, PortSpace, 
                                          UsedIPs, Connections, SendQueue, 
                                          RcvQueue, MAX, Marker1, Marker2, 
                                          CmdConnect, CmdDisconnect, 
                                          PortSpaceFull, stack, depth_, host_, 
                                          hidx_, host_idx_, pidx_, port_idx_, 
                                          depth_D, ip_, host_D, connDomain_, 
                                          cidx_, conn_, host_Con, ip_C, hidx_C, 
                                          host_idx_C, pidx_C, port_idx_C, 
                                          host_Dis, ip_Di, connDomain_D, 
                                          cidx_D, conn_D, host, ip, 
                                          connDomain_Di, cidx_Di, conn_Di, 
                                          depth_P, pkt_, ipkt_, entry_, conn_P, 
                                          hostMarker_, ip_idx_, ipidx_, ip_P, 
                                          host_P, pkt_P, ipkt_P, entry_P, 
                                          conn_Pu, hostMarker_P, ip_idx_P, 
                                          ipidx_P, ip_Pu, host_Pu, IP, 
                                          conn_PrivTo, sport_, dstAddr_, 
                                          dport_, pkt_Pr, hostMarker_Pr, 
                                          daddr_, hostidx_, hidx_P, 
                                          otherEntry_, i_, indicies_, 
                                          portDomain_, sourcePort_, destPort_, 
                                          new_sport_, conn, sport, dstAddr, 
                                          dport, pkt_Pri, hostMarker_Pri, 
                                          daddr_P, hostidx_P, hidx_Pr, 
                                          otherEntry_P, i_P, indicies_P, 
                                          portDomain_P, sourcePort_P, 
                                          destPort_P, new_sport_P, depth_Pr, 
                                          pkt_Priv, conn_Pr, hostMarker_Priv, 
                                          daddr_Pr, hostidx_Pr, hidx_Pri, 
                                          otherEntry_Pr, i_Pr, indicies_Pr, 
                                          portDomain_Pr, sourcePort_Pr, 
                                          destPort_Pr, new_sport_Pr, pkt_PrivT, 
                                          conn_Pri, hostMarker_PrivT, 
                                          daddr_Pri, hostidx_Pri, hidx_Priv, 
                                          otherEntry_Pri, i_Pri, indicies_Pri, 
                                          portDomain_Pri, sourcePort_Pri, 
                                          destPort_Pri, new_sport_Pri, depth_C, 
                                          host_C, hidx_Co, host_idx_Co, 
                                          pidx_Co, port_idx_Co, connhost, port, 
                                          host_Co, hidx_Con, host_idx, pidx, 
                                          port_idx, depth_Di, ip_D, host_Di, 
                                          connDomain, cidx, conn_Dis, depth_Pu, 
                                          pkt_Pu, ipkt_Pu, entry_Pu, conn_Pub, 
                                          hostMarker_Pu, ip_idx_Pu, ipidx_Pu, 
                                          ip_Pub, host_Pub, depth_Pri, 
                                          pkt_PrivTo, conn_Priv, 
                                          hostMarker_PrivTo, daddr_Priv, 
                                          hostidx_Priv, hidx_PrivT, 
                                          otherEntry_Priv, i_Priv, 
                                          indicies_Priv, portDomain_Priv, 
                                          sourcePort_Priv, destPort_Priv, 
                                          new_sport_Priv, good, depth_E, i_E, 
                                          j_, ip_E, host_E, indecies_, 
                                          depth_Ev, i_Ev, j_E, ip_Ev, host_Ev, 
                                          indecies_E, i_Ch, depth_Pub, pkt_Pub, 
                                          ipkt_Pub, entry_Pub, conn_PubT, 
                                          hostMarker_Pub, ip_idx_Pub, 
                                          ipidx_Pub, ip_PubT, host_PubT, 
                                          depth_Priv, pkt_PrivToP, conn_PrivT, 
                                          hostMarker_PrivToP, daddr, hostidx, 
                                          hidx, otherEntry, i_PrivT, indicies, 
                                          portDomain, sourcePort, destPort, 
                                          new_sport, depth_PubT, pkt, ipkt, 
                                          entry, conn_PubTo, hostMarker, 
                                          ip_idx, ipidx, ip_PubTo, host_PubTo, 
                                          depth, i_Eve, j, ip_Eve, host_Eve, 
                                          indecies, i, aa >>

checkModelWhile_(self) == /\ pc[self] = "checkModelWhile_"
                          /\ IF i_C[self] < MAX
                                THEN /\ /\ depth_Ev' = [depth_Ev EXCEPT ![self] = MAX]
                                        /\ stack' = [stack EXCEPT ![self] = << [ procedure |->  "EventSequence",
                                                                                 pc        |->  "checkModelInc_",
                                                                                 i_Ev      |->  i_Ev[self],
                                                                                 j_E       |->  j_E[self],
                                                                                 ip_Ev     |->  ip_Ev[self],
                                                                                 host_Ev   |->  host_Ev[self],
                                                                                 indecies_E |->  indecies_E[self],
                                                                                 depth_Ev  |->  depth_Ev[self] ] >>
                                                                             \o stack[self]]
                                     /\ i_Ev' = [i_Ev EXCEPT ![self] = defaultInitValue]
                                     /\ j_E' = [j_E EXCEPT ![self] = defaultInitValue]
                                     /\ ip_Ev' = [ip_Ev EXCEPT ![self] = defaultInitValue]
                                     /\ host_Ev' = [host_Ev EXCEPT ![self] = defaultInitValue]
                                     /\ indecies_E' = [indecies_E EXCEPT ![self] = defaultInitValue]
                                     /\ pc' = [pc EXCEPT ![self] = "evtSeqStart_"]
                                ELSE /\ pc' = [pc EXCEPT ![self] = "checkModelRet_"]
                                     /\ UNCHANGED << stack, depth_Ev, i_Ev, 
                                                     j_E, ip_Ev, host_Ev, 
                                                     indecies_E >>
                          /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, 
                                          Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, 
                                          Kk, Ll, Mm, Nn, Oo, Pp, Qq, Rr, Ss, 
                                          Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, H2, 
                                          MaxPorts, EP1, PortMap1, EP2, 
                                          PortMap2, TableFull, EvictionReroute, 
                                          PortScanInv, ATIPInv, MaxTableSize, 
                                          hosts, FreeHosts, UsedHosts, Ports, 
                                          ExtraPorts, ExtraExtraPorts, T, 
                                          FreeIPs, PrivIPs, PubIPs, PortSpace, 
                                          UsedIPs, Connections, SendQueue, 
                                          RcvQueue, MAX, Marker1, Marker2, 
                                          CmdConnect, CmdDisconnect, 
                                          PortSpaceFull, depth_, host_, hidx_, 
                                          host_idx_, pidx_, port_idx_, depth_D, 
                                          ip_, host_D, connDomain_, cidx_, 
                                          conn_, host_Con, ip_C, hidx_C, 
                                          host_idx_C, pidx_C, port_idx_C, 
                                          host_Dis, ip_Di, connDomain_D, 
                                          cidx_D, conn_D, host, ip, 
                                          connDomain_Di, cidx_Di, conn_Di, 
                                          depth_P, pkt_, ipkt_, entry_, conn_P, 
                                          hostMarker_, ip_idx_, ipidx_, ip_P, 
                                          host_P, pkt_P, ipkt_P, entry_P, 
                                          conn_Pu, hostMarker_P, ip_idx_P, 
                                          ipidx_P, ip_Pu, host_Pu, IP, 
                                          conn_PrivTo, sport_, dstAddr_, 
                                          dport_, pkt_Pr, hostMarker_Pr, 
                                          daddr_, hostidx_, hidx_P, 
                                          otherEntry_, i_, indicies_, 
                                          portDomain_, sourcePort_, destPort_, 
                                          new_sport_, conn, sport, dstAddr, 
                                          dport, pkt_Pri, hostMarker_Pri, 
                                          daddr_P, hostidx_P, hidx_Pr, 
                                          otherEntry_P, i_P, indicies_P, 
                                          portDomain_P, sourcePort_P, 
                                          destPort_P, new_sport_P, depth_Pr, 
                                          pkt_Priv, conn_Pr, hostMarker_Priv, 
                                          daddr_Pr, hostidx_Pr, hidx_Pri, 
                                          otherEntry_Pr, i_Pr, indicies_Pr, 
                                          portDomain_Pr, sourcePort_Pr, 
                                          destPort_Pr, new_sport_Pr, pkt_PrivT, 
                                          conn_Pri, hostMarker_PrivT, 
                                          daddr_Pri, hostidx_Pri, hidx_Priv, 
                                          otherEntry_Pri, i_Pri, indicies_Pri, 
                                          portDomain_Pri, sourcePort_Pri, 
                                          destPort_Pri, new_sport_Pri, depth_C, 
                                          host_C, hidx_Co, host_idx_Co, 
                                          pidx_Co, port_idx_Co, connhost, port, 
                                          host_Co, hidx_Con, host_idx, pidx, 
                                          port_idx, depth_Di, ip_D, host_Di, 
                                          connDomain, cidx, conn_Dis, depth_Pu, 
                                          pkt_Pu, ipkt_Pu, entry_Pu, conn_Pub, 
                                          hostMarker_Pu, ip_idx_Pu, ipidx_Pu, 
                                          ip_Pub, host_Pub, depth_Pri, 
                                          pkt_PrivTo, conn_Priv, 
                                          hostMarker_PrivTo, daddr_Priv, 
                                          hostidx_Priv, hidx_PrivT, 
                                          otherEntry_Priv, i_Priv, 
                                          indicies_Priv, portDomain_Priv, 
                                          sourcePort_Priv, destPort_Priv, 
                                          new_sport_Priv, good, depth_E, i_E, 
                                          j_, ip_E, host_E, indecies_, i_C, 
                                          i_Ch, depth_Pub, pkt_Pub, ipkt_Pub, 
                                          entry_Pub, conn_PubT, hostMarker_Pub, 
                                          ip_idx_Pub, ipidx_Pub, ip_PubT, 
                                          host_PubT, depth_Priv, pkt_PrivToP, 
                                          conn_PrivT, hostMarker_PrivToP, 
                                          daddr, hostidx, hidx, otherEntry, 
                                          i_PrivT, indicies, portDomain, 
                                          sourcePort, destPort, new_sport, 
                                          depth_PubT, pkt, ipkt, entry, 
                                          conn_PubTo, hostMarker, ip_idx, 
                                          ipidx, ip_PubTo, host_PubTo, depth, 
                                          i_Eve, j, ip_Eve, host_Eve, indecies, 
                                          i, aa >>

checkModelInc_(self) == /\ pc[self] = "checkModelInc_"
                        /\ i_C' = [i_C EXCEPT ![self] = i_C[self] + 1]
                        /\ pc' = [pc EXCEPT ![self] = "checkModelWhile_"]
                        /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, 
                                        Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, 
                                        Ll, Mm, Nn, Oo, Pp, Qq, Rr, Ss, Tt, Uu, 
                                        Vv, Ww, Xx, Yy, Zz, H1, H2, MaxPorts, 
                                        EP1, PortMap1, EP2, PortMap2, 
                                        TableFull, EvictionReroute, 
                                        PortScanInv, ATIPInv, MaxTableSize, 
                                        hosts, FreeHosts, UsedHosts, Ports, 
                                        ExtraPorts, ExtraExtraPorts, T, 
                                        FreeIPs, PrivIPs, PubIPs, PortSpace, 
                                        UsedIPs, Connections, SendQueue, 
                                        RcvQueue, MAX, Marker1, Marker2, 
                                        CmdConnect, CmdDisconnect, 
                                        PortSpaceFull, stack, depth_, host_, 
                                        hidx_, host_idx_, pidx_, port_idx_, 
                                        depth_D, ip_, host_D, connDomain_, 
                                        cidx_, conn_, host_Con, ip_C, hidx_C, 
                                        host_idx_C, pidx_C, port_idx_C, 
                                        host_Dis, ip_Di, connDomain_D, cidx_D, 
                                        conn_D, host, ip, connDomain_Di, 
                                        cidx_Di, conn_Di, depth_P, pkt_, ipkt_, 
                                        entry_, conn_P, hostMarker_, ip_idx_, 
                                        ipidx_, ip_P, host_P, pkt_P, ipkt_P, 
                                        entry_P, conn_Pu, hostMarker_P, 
                                        ip_idx_P, ipidx_P, ip_Pu, host_Pu, IP, 
                                        conn_PrivTo, sport_, dstAddr_, dport_, 
                                        pkt_Pr, hostMarker_Pr, daddr_, 
                                        hostidx_, hidx_P, otherEntry_, i_, 
                                        indicies_, portDomain_, sourcePort_, 
                                        destPort_, new_sport_, conn, sport, 
                                        dstAddr, dport, pkt_Pri, 
                                        hostMarker_Pri, daddr_P, hostidx_P, 
                                        hidx_Pr, otherEntry_P, i_P, indicies_P, 
                                        portDomain_P, sourcePort_P, destPort_P, 
                                        new_sport_P, depth_Pr, pkt_Priv, 
                                        conn_Pr, hostMarker_Priv, daddr_Pr, 
                                        hostidx_Pr, hidx_Pri, otherEntry_Pr, 
                                        i_Pr, indicies_Pr, portDomain_Pr, 
                                        sourcePort_Pr, destPort_Pr, 
                                        new_sport_Pr, pkt_PrivT, conn_Pri, 
                                        hostMarker_PrivT, daddr_Pri, 
                                        hostidx_Pri, hidx_Priv, otherEntry_Pri, 
                                        i_Pri, indicies_Pri, portDomain_Pri, 
                                        sourcePort_Pri, destPort_Pri, 
                                        new_sport_Pri, depth_C, host_C, 
                                        hidx_Co, host_idx_Co, pidx_Co, 
                                        port_idx_Co, connhost, port, host_Co, 
                                        hidx_Con, host_idx, pidx, port_idx, 
                                        depth_Di, ip_D, host_Di, connDomain, 
                                        cidx, conn_Dis, depth_Pu, pkt_Pu, 
                                        ipkt_Pu, entry_Pu, conn_Pub, 
                                        hostMarker_Pu, ip_idx_Pu, ipidx_Pu, 
                                        ip_Pub, host_Pub, depth_Pri, 
                                        pkt_PrivTo, conn_Priv, 
                                        hostMarker_PrivTo, daddr_Priv, 
                                        hostidx_Priv, hidx_PrivT, 
                                        otherEntry_Priv, i_Priv, indicies_Priv, 
                                        portDomain_Priv, sourcePort_Priv, 
                                        destPort_Priv, new_sport_Priv, good, 
                                        depth_E, i_E, j_, ip_E, host_E, 
                                        indecies_, depth_Ev, i_Ev, j_E, ip_Ev, 
                                        host_Ev, indecies_E, i_Ch, depth_Pub, 
                                        pkt_Pub, ipkt_Pub, entry_Pub, 
                                        conn_PubT, hostMarker_Pub, ip_idx_Pub, 
                                        ipidx_Pub, ip_PubT, host_PubT, 
                                        depth_Priv, pkt_PrivToP, conn_PrivT, 
                                        hostMarker_PrivToP, daddr, hostidx, 
                                        hidx, otherEntry, i_PrivT, indicies, 
                                        portDomain, sourcePort, destPort, 
                                        new_sport, depth_PubT, pkt, ipkt, 
                                        entry, conn_PubTo, hostMarker, ip_idx, 
                                        ipidx, ip_PubTo, host_PubTo, depth, 
                                        i_Eve, j, ip_Eve, host_Eve, indecies, 
                                        i, aa >>

checkModelRet_(self) == /\ pc[self] = "checkModelRet_"
                        /\ pc' = [pc EXCEPT ![self] = Head(stack[self]).pc]
                        /\ i_C' = [i_C EXCEPT ![self] = Head(stack[self]).i_C]
                        /\ stack' = [stack EXCEPT ![self] = Tail(stack[self])]
                        /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, 
                                        Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, 
                                        Ll, Mm, Nn, Oo, Pp, Qq, Rr, Ss, Tt, Uu, 
                                        Vv, Ww, Xx, Yy, Zz, H1, H2, MaxPorts, 
                                        EP1, PortMap1, EP2, PortMap2, 
                                        TableFull, EvictionReroute, 
                                        PortScanInv, ATIPInv, MaxTableSize, 
                                        hosts, FreeHosts, UsedHosts, Ports, 
                                        ExtraPorts, ExtraExtraPorts, T, 
                                        FreeIPs, PrivIPs, PubIPs, PortSpace, 
                                        UsedIPs, Connections, SendQueue, 
                                        RcvQueue, MAX, Marker1, Marker2, 
                                        CmdConnect, CmdDisconnect, 
                                        PortSpaceFull, depth_, host_, hidx_, 
                                        host_idx_, pidx_, port_idx_, depth_D, 
                                        ip_, host_D, connDomain_, cidx_, conn_, 
                                        host_Con, ip_C, hidx_C, host_idx_C, 
                                        pidx_C, port_idx_C, host_Dis, ip_Di, 
                                        connDomain_D, cidx_D, conn_D, host, ip, 
                                        connDomain_Di, cidx_Di, conn_Di, 
                                        depth_P, pkt_, ipkt_, entry_, conn_P, 
                                        hostMarker_, ip_idx_, ipidx_, ip_P, 
                                        host_P, pkt_P, ipkt_P, entry_P, 
                                        conn_Pu, hostMarker_P, ip_idx_P, 
                                        ipidx_P, ip_Pu, host_Pu, IP, 
                                        conn_PrivTo, sport_, dstAddr_, dport_, 
                                        pkt_Pr, hostMarker_Pr, daddr_, 
                                        hostidx_, hidx_P, otherEntry_, i_, 
                                        indicies_, portDomain_, sourcePort_, 
                                        destPort_, new_sport_, conn, sport, 
                                        dstAddr, dport, pkt_Pri, 
                                        hostMarker_Pri, daddr_P, hostidx_P, 
                                        hidx_Pr, otherEntry_P, i_P, indicies_P, 
                                        portDomain_P, sourcePort_P, destPort_P, 
                                        new_sport_P, depth_Pr, pkt_Priv, 
                                        conn_Pr, hostMarker_Priv, daddr_Pr, 
                                        hostidx_Pr, hidx_Pri, otherEntry_Pr, 
                                        i_Pr, indicies_Pr, portDomain_Pr, 
                                        sourcePort_Pr, destPort_Pr, 
                                        new_sport_Pr, pkt_PrivT, conn_Pri, 
                                        hostMarker_PrivT, daddr_Pri, 
                                        hostidx_Pri, hidx_Priv, otherEntry_Pri, 
                                        i_Pri, indicies_Pri, portDomain_Pri, 
                                        sourcePort_Pri, destPort_Pri, 
                                        new_sport_Pri, depth_C, host_C, 
                                        hidx_Co, host_idx_Co, pidx_Co, 
                                        port_idx_Co, connhost, port, host_Co, 
                                        hidx_Con, host_idx, pidx, port_idx, 
                                        depth_Di, ip_D, host_Di, connDomain, 
                                        cidx, conn_Dis, depth_Pu, pkt_Pu, 
                                        ipkt_Pu, entry_Pu, conn_Pub, 
                                        hostMarker_Pu, ip_idx_Pu, ipidx_Pu, 
                                        ip_Pub, host_Pub, depth_Pri, 
                                        pkt_PrivTo, conn_Priv, 
                                        hostMarker_PrivTo, daddr_Priv, 
                                        hostidx_Priv, hidx_PrivT, 
                                        otherEntry_Priv, i_Priv, indicies_Priv, 
                                        portDomain_Priv, sourcePort_Priv, 
                                        destPort_Priv, new_sport_Priv, good, 
                                        depth_E, i_E, j_, ip_E, host_E, 
                                        indecies_, depth_Ev, i_Ev, j_E, ip_Ev, 
                                        host_Ev, indecies_E, i_Ch, depth_Pub, 
                                        pkt_Pub, ipkt_Pub, entry_Pub, 
                                        conn_PubT, hostMarker_Pub, ip_idx_Pub, 
                                        ipidx_Pub, ip_PubT, host_PubT, 
                                        depth_Priv, pkt_PrivToP, conn_PrivT, 
                                        hostMarker_PrivToP, daddr, hostidx, 
                                        hidx, otherEntry, i_PrivT, indicies, 
                                        portDomain, sourcePort, destPort, 
                                        new_sport, depth_PubT, pkt, ipkt, 
                                        entry, conn_PubTo, hostMarker, ip_idx, 
                                        ipidx, ip_PubTo, host_PubTo, depth, 
                                        i_Eve, j, ip_Eve, host_Eve, indecies, 
                                        i, aa >>

CheckModel(self) == checkModelStart_(self) \/ checkModelWhile_(self)
                       \/ checkModelInc_(self) \/ checkModelRet_(self)

checkModelVulnStart(self) == /\ pc[self] = "checkModelVulnStart"
                             /\ i_Ch' = [i_Ch EXCEPT ![self] = 0]
                             /\ pc' = [pc EXCEPT ![self] = "checkModelVulnWhile"]
                             /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, 
                                             Aa, Bb, Cc, Dd, Ee, Ff, Gg, Hh, 
                                             Ii, Jj, Kk, Ll, Mm, Nn, Oo, Pp, 
                                             Qq, Rr, Ss, Tt, Uu, Vv, Ww, Xx, 
                                             Yy, Zz, H1, H2, MaxPorts, EP1, 
                                             PortMap1, EP2, PortMap2, 
                                             TableFull, EvictionReroute, 
                                             PortScanInv, ATIPInv, 
                                             MaxTableSize, hosts, FreeHosts, 
                                             UsedHosts, Ports, ExtraPorts, 
                                             ExtraExtraPorts, T, FreeIPs, 
                                             PrivIPs, PubIPs, PortSpace, 
                                             UsedIPs, Connections, SendQueue, 
                                             RcvQueue, MAX, Marker1, Marker2, 
                                             CmdConnect, CmdDisconnect, 
                                             PortSpaceFull, stack, depth_, 
                                             host_, hidx_, host_idx_, pidx_, 
                                             port_idx_, depth_D, ip_, host_D, 
                                             connDomain_, cidx_, conn_, 
                                             host_Con, ip_C, hidx_C, 
                                             host_idx_C, pidx_C, port_idx_C, 
                                             host_Dis, ip_Di, connDomain_D, 
                                             cidx_D, conn_D, host, ip, 
                                             connDomain_Di, cidx_Di, conn_Di, 
                                             depth_P, pkt_, ipkt_, entry_, 
                                             conn_P, hostMarker_, ip_idx_, 
                                             ipidx_, ip_P, host_P, pkt_P, 
                                             ipkt_P, entry_P, conn_Pu, 
                                             hostMarker_P, ip_idx_P, ipidx_P, 
                                             ip_Pu, host_Pu, IP, conn_PrivTo, 
                                             sport_, dstAddr_, dport_, pkt_Pr, 
                                             hostMarker_Pr, daddr_, hostidx_, 
                                             hidx_P, otherEntry_, i_, 
                                             indicies_, portDomain_, 
                                             sourcePort_, destPort_, 
                                             new_sport_, conn, sport, dstAddr, 
                                             dport, pkt_Pri, hostMarker_Pri, 
                                             daddr_P, hostidx_P, hidx_Pr, 
                                             otherEntry_P, i_P, indicies_P, 
                                             portDomain_P, sourcePort_P, 
                                             destPort_P, new_sport_P, depth_Pr, 
                                             pkt_Priv, conn_Pr, 
                                             hostMarker_Priv, daddr_Pr, 
                                             hostidx_Pr, hidx_Pri, 
                                             otherEntry_Pr, i_Pr, indicies_Pr, 
                                             portDomain_Pr, sourcePort_Pr, 
                                             destPort_Pr, new_sport_Pr, 
                                             pkt_PrivT, conn_Pri, 
                                             hostMarker_PrivT, daddr_Pri, 
                                             hostidx_Pri, hidx_Priv, 
                                             otherEntry_Pri, i_Pri, 
                                             indicies_Pri, portDomain_Pri, 
                                             sourcePort_Pri, destPort_Pri, 
                                             new_sport_Pri, depth_C, host_C, 
                                             hidx_Co, host_idx_Co, pidx_Co, 
                                             port_idx_Co, connhost, port, 
                                             host_Co, hidx_Con, host_idx, pidx, 
                                             port_idx, depth_Di, ip_D, host_Di, 
                                             connDomain, cidx, conn_Dis, 
                                             depth_Pu, pkt_Pu, ipkt_Pu, 
                                             entry_Pu, conn_Pub, hostMarker_Pu, 
                                             ip_idx_Pu, ipidx_Pu, ip_Pub, 
                                             host_Pub, depth_Pri, pkt_PrivTo, 
                                             conn_Priv, hostMarker_PrivTo, 
                                             daddr_Priv, hostidx_Priv, 
                                             hidx_PrivT, otherEntry_Priv, 
                                             i_Priv, indicies_Priv, 
                                             portDomain_Priv, sourcePort_Priv, 
                                             destPort_Priv, new_sport_Priv, 
                                             good, depth_E, i_E, j_, ip_E, 
                                             host_E, indecies_, depth_Ev, i_Ev, 
                                             j_E, ip_Ev, host_Ev, indecies_E, 
                                             i_C, depth_Pub, pkt_Pub, ipkt_Pub, 
                                             entry_Pub, conn_PubT, 
                                             hostMarker_Pub, ip_idx_Pub, 
                                             ipidx_Pub, ip_PubT, host_PubT, 
                                             depth_Priv, pkt_PrivToP, 
                                             conn_PrivT, hostMarker_PrivToP, 
                                             daddr, hostidx, hidx, otherEntry, 
                                             i_PrivT, indicies, portDomain, 
                                             sourcePort, destPort, new_sport, 
                                             depth_PubT, pkt, ipkt, entry, 
                                             conn_PubTo, hostMarker, ip_idx, 
                                             ipidx, ip_PubTo, host_PubTo, 
                                             depth, i_Eve, j, ip_Eve, host_Eve, 
                                             indecies, i, aa >>

checkModelVulnWhile(self) == /\ pc[self] = "checkModelVulnWhile"
                             /\ IF i_Ch[self] < MAX
                                   THEN /\ /\ depth_E' = [depth_E EXCEPT ![self] = MAX]
                                           /\ stack' = [stack EXCEPT ![self] = << [ procedure |->  "EventSequenceVuln",
                                                                                    pc        |->  "checkModelVulnInc",
                                                                                    i_E       |->  i_E[self],
                                                                                    j_        |->  j_[self],
                                                                                    ip_E      |->  ip_E[self],
                                                                                    host_E    |->  host_E[self],
                                                                                    indecies_ |->  indecies_[self],
                                                                                    depth_E   |->  depth_E[self] ] >>
                                                                                \o stack[self]]
                                        /\ i_E' = [i_E EXCEPT ![self] = defaultInitValue]
                                        /\ j_' = [j_ EXCEPT ![self] = defaultInitValue]
                                        /\ ip_E' = [ip_E EXCEPT ![self] = defaultInitValue]
                                        /\ host_E' = [host_E EXCEPT ![self] = defaultInitValue]
                                        /\ indecies_' = [indecies_ EXCEPT ![self] = defaultInitValue]
                                        /\ pc' = [pc EXCEPT ![self] = "evtSeqVStart"]
                                   ELSE /\ pc' = [pc EXCEPT ![self] = "checkModelVulnRet"]
                                        /\ UNCHANGED << stack, depth_E, i_E, 
                                                        j_, ip_E, host_E, 
                                                        indecies_ >>
                             /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, 
                                             Aa, Bb, Cc, Dd, Ee, Ff, Gg, Hh, 
                                             Ii, Jj, Kk, Ll, Mm, Nn, Oo, Pp, 
                                             Qq, Rr, Ss, Tt, Uu, Vv, Ww, Xx, 
                                             Yy, Zz, H1, H2, MaxPorts, EP1, 
                                             PortMap1, EP2, PortMap2, 
                                             TableFull, EvictionReroute, 
                                             PortScanInv, ATIPInv, 
                                             MaxTableSize, hosts, FreeHosts, 
                                             UsedHosts, Ports, ExtraPorts, 
                                             ExtraExtraPorts, T, FreeIPs, 
                                             PrivIPs, PubIPs, PortSpace, 
                                             UsedIPs, Connections, SendQueue, 
                                             RcvQueue, MAX, Marker1, Marker2, 
                                             CmdConnect, CmdDisconnect, 
                                             PortSpaceFull, depth_, host_, 
                                             hidx_, host_idx_, pidx_, 
                                             port_idx_, depth_D, ip_, host_D, 
                                             connDomain_, cidx_, conn_, 
                                             host_Con, ip_C, hidx_C, 
                                             host_idx_C, pidx_C, port_idx_C, 
                                             host_Dis, ip_Di, connDomain_D, 
                                             cidx_D, conn_D, host, ip, 
                                             connDomain_Di, cidx_Di, conn_Di, 
                                             depth_P, pkt_, ipkt_, entry_, 
                                             conn_P, hostMarker_, ip_idx_, 
                                             ipidx_, ip_P, host_P, pkt_P, 
                                             ipkt_P, entry_P, conn_Pu, 
                                             hostMarker_P, ip_idx_P, ipidx_P, 
                                             ip_Pu, host_Pu, IP, conn_PrivTo, 
                                             sport_, dstAddr_, dport_, pkt_Pr, 
                                             hostMarker_Pr, daddr_, hostidx_, 
                                             hidx_P, otherEntry_, i_, 
                                             indicies_, portDomain_, 
                                             sourcePort_, destPort_, 
                                             new_sport_, conn, sport, dstAddr, 
                                             dport, pkt_Pri, hostMarker_Pri, 
                                             daddr_P, hostidx_P, hidx_Pr, 
                                             otherEntry_P, i_P, indicies_P, 
                                             portDomain_P, sourcePort_P, 
                                             destPort_P, new_sport_P, depth_Pr, 
                                             pkt_Priv, conn_Pr, 
                                             hostMarker_Priv, daddr_Pr, 
                                             hostidx_Pr, hidx_Pri, 
                                             otherEntry_Pr, i_Pr, indicies_Pr, 
                                             portDomain_Pr, sourcePort_Pr, 
                                             destPort_Pr, new_sport_Pr, 
                                             pkt_PrivT, conn_Pri, 
                                             hostMarker_PrivT, daddr_Pri, 
                                             hostidx_Pri, hidx_Priv, 
                                             otherEntry_Pri, i_Pri, 
                                             indicies_Pri, portDomain_Pri, 
                                             sourcePort_Pri, destPort_Pri, 
                                             new_sport_Pri, depth_C, host_C, 
                                             hidx_Co, host_idx_Co, pidx_Co, 
                                             port_idx_Co, connhost, port, 
                                             host_Co, hidx_Con, host_idx, pidx, 
                                             port_idx, depth_Di, ip_D, host_Di, 
                                             connDomain, cidx, conn_Dis, 
                                             depth_Pu, pkt_Pu, ipkt_Pu, 
                                             entry_Pu, conn_Pub, hostMarker_Pu, 
                                             ip_idx_Pu, ipidx_Pu, ip_Pub, 
                                             host_Pub, depth_Pri, pkt_PrivTo, 
                                             conn_Priv, hostMarker_PrivTo, 
                                             daddr_Priv, hostidx_Priv, 
                                             hidx_PrivT, otherEntry_Priv, 
                                             i_Priv, indicies_Priv, 
                                             portDomain_Priv, sourcePort_Priv, 
                                             destPort_Priv, new_sport_Priv, 
                                             good, depth_Ev, i_Ev, j_E, ip_Ev, 
                                             host_Ev, indecies_E, i_C, i_Ch, 
                                             depth_Pub, pkt_Pub, ipkt_Pub, 
                                             entry_Pub, conn_PubT, 
                                             hostMarker_Pub, ip_idx_Pub, 
                                             ipidx_Pub, ip_PubT, host_PubT, 
                                             depth_Priv, pkt_PrivToP, 
                                             conn_PrivT, hostMarker_PrivToP, 
                                             daddr, hostidx, hidx, otherEntry, 
                                             i_PrivT, indicies, portDomain, 
                                             sourcePort, destPort, new_sport, 
                                             depth_PubT, pkt, ipkt, entry, 
                                             conn_PubTo, hostMarker, ip_idx, 
                                             ipidx, ip_PubTo, host_PubTo, 
                                             depth, i_Eve, j, ip_Eve, host_Eve, 
                                             indecies, i, aa >>

checkModelVulnInc(self) == /\ pc[self] = "checkModelVulnInc"
                           /\ i_Ch' = [i_Ch EXCEPT ![self] = i_Ch[self] + 1]
                           /\ pc' = [pc EXCEPT ![self] = "checkModelVulnWhile"]
                           /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, 
                                           Aa, Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, 
                                           Jj, Kk, Ll, Mm, Nn, Oo, Pp, Qq, Rr, 
                                           Ss, Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, 
                                           H2, MaxPorts, EP1, PortMap1, EP2, 
                                           PortMap2, TableFull, 
                                           EvictionReroute, PortScanInv, 
                                           ATIPInv, MaxTableSize, hosts, 
                                           FreeHosts, UsedHosts, Ports, 
                                           ExtraPorts, ExtraExtraPorts, T, 
                                           FreeIPs, PrivIPs, PubIPs, PortSpace, 
                                           UsedIPs, Connections, SendQueue, 
                                           RcvQueue, MAX, Marker1, Marker2, 
                                           CmdConnect, CmdDisconnect, 
                                           PortSpaceFull, stack, depth_, host_, 
                                           hidx_, host_idx_, pidx_, port_idx_, 
                                           depth_D, ip_, host_D, connDomain_, 
                                           cidx_, conn_, host_Con, ip_C, 
                                           hidx_C, host_idx_C, pidx_C, 
                                           port_idx_C, host_Dis, ip_Di, 
                                           connDomain_D, cidx_D, conn_D, host, 
                                           ip, connDomain_Di, cidx_Di, conn_Di, 
                                           depth_P, pkt_, ipkt_, entry_, 
                                           conn_P, hostMarker_, ip_idx_, 
                                           ipidx_, ip_P, host_P, pkt_P, ipkt_P, 
                                           entry_P, conn_Pu, hostMarker_P, 
                                           ip_idx_P, ipidx_P, ip_Pu, host_Pu, 
                                           IP, conn_PrivTo, sport_, dstAddr_, 
                                           dport_, pkt_Pr, hostMarker_Pr, 
                                           daddr_, hostidx_, hidx_P, 
                                           otherEntry_, i_, indicies_, 
                                           portDomain_, sourcePort_, destPort_, 
                                           new_sport_, conn, sport, dstAddr, 
                                           dport, pkt_Pri, hostMarker_Pri, 
                                           daddr_P, hostidx_P, hidx_Pr, 
                                           otherEntry_P, i_P, indicies_P, 
                                           portDomain_P, sourcePort_P, 
                                           destPort_P, new_sport_P, depth_Pr, 
                                           pkt_Priv, conn_Pr, hostMarker_Priv, 
                                           daddr_Pr, hostidx_Pr, hidx_Pri, 
                                           otherEntry_Pr, i_Pr, indicies_Pr, 
                                           portDomain_Pr, sourcePort_Pr, 
                                           destPort_Pr, new_sport_Pr, 
                                           pkt_PrivT, conn_Pri, 
                                           hostMarker_PrivT, daddr_Pri, 
                                           hostidx_Pri, hidx_Priv, 
                                           otherEntry_Pri, i_Pri, indicies_Pri, 
                                           portDomain_Pri, sourcePort_Pri, 
                                           destPort_Pri, new_sport_Pri, 
                                           depth_C, host_C, hidx_Co, 
                                           host_idx_Co, pidx_Co, port_idx_Co, 
                                           connhost, port, host_Co, hidx_Con, 
                                           host_idx, pidx, port_idx, depth_Di, 
                                           ip_D, host_Di, connDomain, cidx, 
                                           conn_Dis, depth_Pu, pkt_Pu, ipkt_Pu, 
                                           entry_Pu, conn_Pub, hostMarker_Pu, 
                                           ip_idx_Pu, ipidx_Pu, ip_Pub, 
                                           host_Pub, depth_Pri, pkt_PrivTo, 
                                           conn_Priv, hostMarker_PrivTo, 
                                           daddr_Priv, hostidx_Priv, 
                                           hidx_PrivT, otherEntry_Priv, i_Priv, 
                                           indicies_Priv, portDomain_Priv, 
                                           sourcePort_Priv, destPort_Priv, 
                                           new_sport_Priv, good, depth_E, i_E, 
                                           j_, ip_E, host_E, indecies_, 
                                           depth_Ev, i_Ev, j_E, ip_Ev, host_Ev, 
                                           indecies_E, i_C, depth_Pub, pkt_Pub, 
                                           ipkt_Pub, entry_Pub, conn_PubT, 
                                           hostMarker_Pub, ip_idx_Pub, 
                                           ipidx_Pub, ip_PubT, host_PubT, 
                                           depth_Priv, pkt_PrivToP, conn_PrivT, 
                                           hostMarker_PrivToP, daddr, hostidx, 
                                           hidx, otherEntry, i_PrivT, indicies, 
                                           portDomain, sourcePort, destPort, 
                                           new_sport, depth_PubT, pkt, ipkt, 
                                           entry, conn_PubTo, hostMarker, 
                                           ip_idx, ipidx, ip_PubTo, host_PubTo, 
                                           depth, i_Eve, j, ip_Eve, host_Eve, 
                                           indecies, i, aa >>

checkModelVulnRet(self) == /\ pc[self] = "checkModelVulnRet"
                           /\ pc' = [pc EXCEPT ![self] = Head(stack[self]).pc]
                           /\ i_Ch' = [i_Ch EXCEPT ![self] = Head(stack[self]).i_Ch]
                           /\ stack' = [stack EXCEPT ![self] = Tail(stack[self])]
                           /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, 
                                           Aa, Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, 
                                           Jj, Kk, Ll, Mm, Nn, Oo, Pp, Qq, Rr, 
                                           Ss, Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, 
                                           H2, MaxPorts, EP1, PortMap1, EP2, 
                                           PortMap2, TableFull, 
                                           EvictionReroute, PortScanInv, 
                                           ATIPInv, MaxTableSize, hosts, 
                                           FreeHosts, UsedHosts, Ports, 
                                           ExtraPorts, ExtraExtraPorts, T, 
                                           FreeIPs, PrivIPs, PubIPs, PortSpace, 
                                           UsedIPs, Connections, SendQueue, 
                                           RcvQueue, MAX, Marker1, Marker2, 
                                           CmdConnect, CmdDisconnect, 
                                           PortSpaceFull, depth_, host_, hidx_, 
                                           host_idx_, pidx_, port_idx_, 
                                           depth_D, ip_, host_D, connDomain_, 
                                           cidx_, conn_, host_Con, ip_C, 
                                           hidx_C, host_idx_C, pidx_C, 
                                           port_idx_C, host_Dis, ip_Di, 
                                           connDomain_D, cidx_D, conn_D, host, 
                                           ip, connDomain_Di, cidx_Di, conn_Di, 
                                           depth_P, pkt_, ipkt_, entry_, 
                                           conn_P, hostMarker_, ip_idx_, 
                                           ipidx_, ip_P, host_P, pkt_P, ipkt_P, 
                                           entry_P, conn_Pu, hostMarker_P, 
                                           ip_idx_P, ipidx_P, ip_Pu, host_Pu, 
                                           IP, conn_PrivTo, sport_, dstAddr_, 
                                           dport_, pkt_Pr, hostMarker_Pr, 
                                           daddr_, hostidx_, hidx_P, 
                                           otherEntry_, i_, indicies_, 
                                           portDomain_, sourcePort_, destPort_, 
                                           new_sport_, conn, sport, dstAddr, 
                                           dport, pkt_Pri, hostMarker_Pri, 
                                           daddr_P, hostidx_P, hidx_Pr, 
                                           otherEntry_P, i_P, indicies_P, 
                                           portDomain_P, sourcePort_P, 
                                           destPort_P, new_sport_P, depth_Pr, 
                                           pkt_Priv, conn_Pr, hostMarker_Priv, 
                                           daddr_Pr, hostidx_Pr, hidx_Pri, 
                                           otherEntry_Pr, i_Pr, indicies_Pr, 
                                           portDomain_Pr, sourcePort_Pr, 
                                           destPort_Pr, new_sport_Pr, 
                                           pkt_PrivT, conn_Pri, 
                                           hostMarker_PrivT, daddr_Pri, 
                                           hostidx_Pri, hidx_Priv, 
                                           otherEntry_Pri, i_Pri, indicies_Pri, 
                                           portDomain_Pri, sourcePort_Pri, 
                                           destPort_Pri, new_sport_Pri, 
                                           depth_C, host_C, hidx_Co, 
                                           host_idx_Co, pidx_Co, port_idx_Co, 
                                           connhost, port, host_Co, hidx_Con, 
                                           host_idx, pidx, port_idx, depth_Di, 
                                           ip_D, host_Di, connDomain, cidx, 
                                           conn_Dis, depth_Pu, pkt_Pu, ipkt_Pu, 
                                           entry_Pu, conn_Pub, hostMarker_Pu, 
                                           ip_idx_Pu, ipidx_Pu, ip_Pub, 
                                           host_Pub, depth_Pri, pkt_PrivTo, 
                                           conn_Priv, hostMarker_PrivTo, 
                                           daddr_Priv, hostidx_Priv, 
                                           hidx_PrivT, otherEntry_Priv, i_Priv, 
                                           indicies_Priv, portDomain_Priv, 
                                           sourcePort_Priv, destPort_Priv, 
                                           new_sport_Priv, good, depth_E, i_E, 
                                           j_, ip_E, host_E, indecies_, 
                                           depth_Ev, i_Ev, j_E, ip_Ev, host_Ev, 
                                           indecies_E, i_C, depth_Pub, pkt_Pub, 
                                           ipkt_Pub, entry_Pub, conn_PubT, 
                                           hostMarker_Pub, ip_idx_Pub, 
                                           ipidx_Pub, ip_PubT, host_PubT, 
                                           depth_Priv, pkt_PrivToP, conn_PrivT, 
                                           hostMarker_PrivToP, daddr, hostidx, 
                                           hidx, otherEntry, i_PrivT, indicies, 
                                           portDomain, sourcePort, destPort, 
                                           new_sport, depth_PubT, pkt, ipkt, 
                                           entry, conn_PubTo, hostMarker, 
                                           ip_idx, ipidx, ip_PubTo, host_PubTo, 
                                           depth, i_Eve, j, ip_Eve, host_Eve, 
                                           indecies, i, aa >>

CheckModelVuln(self) == checkModelVulnStart(self)
                           \/ checkModelVulnWhile(self)
                           \/ checkModelVulnInc(self)
                           \/ checkModelVulnRet(self)

pubtoprivVEvt3(self) == /\ pc[self] = "pubtoprivVEvt3"
                        /\ /\ depth_E' = [depth_E EXCEPT ![self] = depth_Pub[self]]
                           /\ stack' = [stack EXCEPT ![self] = << [ procedure |->  "EventSequenceVuln",
                                                                    pc        |->  "pubtoprivVStart",
                                                                    i_E       |->  i_E[self],
                                                                    j_        |->  j_[self],
                                                                    ip_E      |->  ip_E[self],
                                                                    host_E    |->  host_E[self],
                                                                    indecies_ |->  indecies_[self],
                                                                    depth_E   |->  depth_E[self] ] >>
                                                                \o stack[self]]
                        /\ i_E' = [i_E EXCEPT ![self] = defaultInitValue]
                        /\ j_' = [j_ EXCEPT ![self] = defaultInitValue]
                        /\ ip_E' = [ip_E EXCEPT ![self] = defaultInitValue]
                        /\ host_E' = [host_E EXCEPT ![self] = defaultInitValue]
                        /\ indecies_' = [indecies_ EXCEPT ![self] = defaultInitValue]
                        /\ pc' = [pc EXCEPT ![self] = "evtSeqVStart"]
                        /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, 
                                        Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, 
                                        Ll, Mm, Nn, Oo, Pp, Qq, Rr, Ss, Tt, Uu, 
                                        Vv, Ww, Xx, Yy, Zz, H1, H2, MaxPorts, 
                                        EP1, PortMap1, EP2, PortMap2, 
                                        TableFull, EvictionReroute, 
                                        PortScanInv, ATIPInv, MaxTableSize, 
                                        hosts, FreeHosts, UsedHosts, Ports, 
                                        ExtraPorts, ExtraExtraPorts, T, 
                                        FreeIPs, PrivIPs, PubIPs, PortSpace, 
                                        UsedIPs, Connections, SendQueue, 
                                        RcvQueue, MAX, Marker1, Marker2, 
                                        CmdConnect, CmdDisconnect, 
                                        PortSpaceFull, depth_, host_, hidx_, 
                                        host_idx_, pidx_, port_idx_, depth_D, 
                                        ip_, host_D, connDomain_, cidx_, conn_, 
                                        host_Con, ip_C, hidx_C, host_idx_C, 
                                        pidx_C, port_idx_C, host_Dis, ip_Di, 
                                        connDomain_D, cidx_D, conn_D, host, ip, 
                                        connDomain_Di, cidx_Di, conn_Di, 
                                        depth_P, pkt_, ipkt_, entry_, conn_P, 
                                        hostMarker_, ip_idx_, ipidx_, ip_P, 
                                        host_P, pkt_P, ipkt_P, entry_P, 
                                        conn_Pu, hostMarker_P, ip_idx_P, 
                                        ipidx_P, ip_Pu, host_Pu, IP, 
                                        conn_PrivTo, sport_, dstAddr_, dport_, 
                                        pkt_Pr, hostMarker_Pr, daddr_, 
                                        hostidx_, hidx_P, otherEntry_, i_, 
                                        indicies_, portDomain_, sourcePort_, 
                                        destPort_, new_sport_, conn, sport, 
                                        dstAddr, dport, pkt_Pri, 
                                        hostMarker_Pri, daddr_P, hostidx_P, 
                                        hidx_Pr, otherEntry_P, i_P, indicies_P, 
                                        portDomain_P, sourcePort_P, destPort_P, 
                                        new_sport_P, depth_Pr, pkt_Priv, 
                                        conn_Pr, hostMarker_Priv, daddr_Pr, 
                                        hostidx_Pr, hidx_Pri, otherEntry_Pr, 
                                        i_Pr, indicies_Pr, portDomain_Pr, 
                                        sourcePort_Pr, destPort_Pr, 
                                        new_sport_Pr, pkt_PrivT, conn_Pri, 
                                        hostMarker_PrivT, daddr_Pri, 
                                        hostidx_Pri, hidx_Priv, otherEntry_Pri, 
                                        i_Pri, indicies_Pri, portDomain_Pri, 
                                        sourcePort_Pri, destPort_Pri, 
                                        new_sport_Pri, depth_C, host_C, 
                                        hidx_Co, host_idx_Co, pidx_Co, 
                                        port_idx_Co, connhost, port, host_Co, 
                                        hidx_Con, host_idx, pidx, port_idx, 
                                        depth_Di, ip_D, host_Di, connDomain, 
                                        cidx, conn_Dis, depth_Pu, pkt_Pu, 
                                        ipkt_Pu, entry_Pu, conn_Pub, 
                                        hostMarker_Pu, ip_idx_Pu, ipidx_Pu, 
                                        ip_Pub, host_Pub, depth_Pri, 
                                        pkt_PrivTo, conn_Priv, 
                                        hostMarker_PrivTo, daddr_Priv, 
                                        hostidx_Priv, hidx_PrivT, 
                                        otherEntry_Priv, i_Priv, indicies_Priv, 
                                        portDomain_Priv, sourcePort_Priv, 
                                        destPort_Priv, new_sport_Priv, good, 
                                        depth_Ev, i_Ev, j_E, ip_Ev, host_Ev, 
                                        indecies_E, i_C, i_Ch, depth_Pub, 
                                        pkt_Pub, ipkt_Pub, entry_Pub, 
                                        conn_PubT, hostMarker_Pub, ip_idx_Pub, 
                                        ipidx_Pub, ip_PubT, host_PubT, 
                                        depth_Priv, pkt_PrivToP, conn_PrivT, 
                                        hostMarker_PrivToP, daddr, hostidx, 
                                        hidx, otherEntry, i_PrivT, indicies, 
                                        portDomain, sourcePort, destPort, 
                                        new_sport, depth_PubT, pkt, ipkt, 
                                        entry, conn_PubTo, hostMarker, ip_idx, 
                                        ipidx, ip_PubTo, host_PubTo, depth, 
                                        i_Eve, j, ip_Eve, host_Eve, indecies, 
                                        i, aa >>

pubtoprivVStart(self) == /\ pc[self] = "pubtoprivVStart"
                         /\ IF Len(SendQueue) > 0
                               THEN /\ pkt_Pub' = [pkt_Pub EXCEPT ![self] = Head(SendQueue)]
                                    /\ PrintT(<<"PubToPrivMan - Len(SendQueue) > 0:", pkt_Pub'[self], Connections, T>>)
                                    /\ SendQueue' = Tail(SendQueue)
                                    /\ IF Len(T) > 0
                                          THEN /\ PrintT(<<"PubToPrivMan - Len(T) > 0:">>)
                                               /\ entry_Pub' = [entry_Pub EXCEPT ![self] = SelectSeq(T, LAMBDA e: e.reply.saddr=pkt_Pub'[self].saddr /\
                                                                                                                  e.reply.sport=pkt_Pub'[self].sport /\
                                                                                                                  e.reply.daddr=pkt_Pub'[self].daddr /\
                                                                                                                  e.reply.dport=pkt_Pub'[self].dport)]
                                               /\ IF entry_Pub'[self]=defaultInitValue
                                                     THEN /\ pc' = [pc EXCEPT ![self] = "pubtirprivVDE"]
                                                     ELSE /\ pc' = [pc EXCEPT ![self] = "pubtoprivEEmpty"]
                                          ELSE /\ pc' = [pc EXCEPT ![self] = "pubtopriVvRet"]
                                               /\ UNCHANGED entry_Pub
                               ELSE /\ pc' = [pc EXCEPT ![self] = "pubtopriVvRet"]
                                    /\ UNCHANGED << SendQueue, pkt_Pub, 
                                                    entry_Pub >>
                         /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, 
                                         Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, 
                                         Kk, Ll, Mm, Nn, Oo, Pp, Qq, Rr, Ss, 
                                         Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, H2, 
                                         MaxPorts, EP1, PortMap1, EP2, 
                                         PortMap2, TableFull, EvictionReroute, 
                                         PortScanInv, ATIPInv, MaxTableSize, 
                                         hosts, FreeHosts, UsedHosts, Ports, 
                                         ExtraPorts, ExtraExtraPorts, T, 
                                         FreeIPs, PrivIPs, PubIPs, PortSpace, 
                                         UsedIPs, Connections, RcvQueue, MAX, 
                                         Marker1, Marker2, CmdConnect, 
                                         CmdDisconnect, PortSpaceFull, stack, 
                                         depth_, host_, hidx_, host_idx_, 
                                         pidx_, port_idx_, depth_D, ip_, 
                                         host_D, connDomain_, cidx_, conn_, 
                                         host_Con, ip_C, hidx_C, host_idx_C, 
                                         pidx_C, port_idx_C, host_Dis, ip_Di, 
                                         connDomain_D, cidx_D, conn_D, host, 
                                         ip, connDomain_Di, cidx_Di, conn_Di, 
                                         depth_P, pkt_, ipkt_, entry_, conn_P, 
                                         hostMarker_, ip_idx_, ipidx_, ip_P, 
                                         host_P, pkt_P, ipkt_P, entry_P, 
                                         conn_Pu, hostMarker_P, ip_idx_P, 
                                         ipidx_P, ip_Pu, host_Pu, IP, 
                                         conn_PrivTo, sport_, dstAddr_, dport_, 
                                         pkt_Pr, hostMarker_Pr, daddr_, 
                                         hostidx_, hidx_P, otherEntry_, i_, 
                                         indicies_, portDomain_, sourcePort_, 
                                         destPort_, new_sport_, conn, sport, 
                                         dstAddr, dport, pkt_Pri, 
                                         hostMarker_Pri, daddr_P, hostidx_P, 
                                         hidx_Pr, otherEntry_P, i_P, 
                                         indicies_P, portDomain_P, 
                                         sourcePort_P, destPort_P, new_sport_P, 
                                         depth_Pr, pkt_Priv, conn_Pr, 
                                         hostMarker_Priv, daddr_Pr, hostidx_Pr, 
                                         hidx_Pri, otherEntry_Pr, i_Pr, 
                                         indicies_Pr, portDomain_Pr, 
                                         sourcePort_Pr, destPort_Pr, 
                                         new_sport_Pr, pkt_PrivT, conn_Pri, 
                                         hostMarker_PrivT, daddr_Pri, 
                                         hostidx_Pri, hidx_Priv, 
                                         otherEntry_Pri, i_Pri, indicies_Pri, 
                                         portDomain_Pri, sourcePort_Pri, 
                                         destPort_Pri, new_sport_Pri, depth_C, 
                                         host_C, hidx_Co, host_idx_Co, pidx_Co, 
                                         port_idx_Co, connhost, port, host_Co, 
                                         hidx_Con, host_idx, pidx, port_idx, 
                                         depth_Di, ip_D, host_Di, connDomain, 
                                         cidx, conn_Dis, depth_Pu, pkt_Pu, 
                                         ipkt_Pu, entry_Pu, conn_Pub, 
                                         hostMarker_Pu, ip_idx_Pu, ipidx_Pu, 
                                         ip_Pub, host_Pub, depth_Pri, 
                                         pkt_PrivTo, conn_Priv, 
                                         hostMarker_PrivTo, daddr_Priv, 
                                         hostidx_Priv, hidx_PrivT, 
                                         otherEntry_Priv, i_Priv, 
                                         indicies_Priv, portDomain_Priv, 
                                         sourcePort_Priv, destPort_Priv, 
                                         new_sport_Priv, good, depth_E, i_E, 
                                         j_, ip_E, host_E, indecies_, depth_Ev, 
                                         i_Ev, j_E, ip_Ev, host_Ev, indecies_E, 
                                         i_C, i_Ch, depth_Pub, ipkt_Pub, 
                                         conn_PubT, hostMarker_Pub, ip_idx_Pub, 
                                         ipidx_Pub, ip_PubT, host_PubT, 
                                         depth_Priv, pkt_PrivToP, conn_PrivT, 
                                         hostMarker_PrivToP, daddr, hostidx, 
                                         hidx, otherEntry, i_PrivT, indicies, 
                                         portDomain, sourcePort, destPort, 
                                         new_sport, depth_PubT, pkt, ipkt, 
                                         entry, conn_PubTo, hostMarker, ip_idx, 
                                         ipidx, ip_PubTo, host_PubTo, depth, 
                                         i_Eve, j, ip_Eve, host_Eve, indecies, 
                                         i, aa >>

pubtoprivEEmpty(self) == /\ pc[self] = "pubtoprivEEmpty"
                         /\ IF Len(entry_Pub[self]) <= 0
                               THEN /\ PrintT(<<"PubToPrivVuln - Empty Entry">>)
                                    /\ pc' = [pc EXCEPT ![self] = "pubtopriVvRet"]
                               ELSE /\ PrintT(<<"PubToPrivMan - Len(entry) > -0:", entry_Pub[self], pkt_Pub[self]>>)
                                    /\ pc' = [pc EXCEPT ![self] = "pubtoPrivElse_Pub"]
                         /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, 
                                         Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, 
                                         Kk, Ll, Mm, Nn, Oo, Pp, Qq, Rr, Ss, 
                                         Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, H2, 
                                         MaxPorts, EP1, PortMap1, EP2, 
                                         PortMap2, TableFull, EvictionReroute, 
                                         PortScanInv, ATIPInv, MaxTableSize, 
                                         hosts, FreeHosts, UsedHosts, Ports, 
                                         ExtraPorts, ExtraExtraPorts, T, 
                                         FreeIPs, PrivIPs, PubIPs, PortSpace, 
                                         UsedIPs, Connections, SendQueue, 
                                         RcvQueue, MAX, Marker1, Marker2, 
                                         CmdConnect, CmdDisconnect, 
                                         PortSpaceFull, stack, depth_, host_, 
                                         hidx_, host_idx_, pidx_, port_idx_, 
                                         depth_D, ip_, host_D, connDomain_, 
                                         cidx_, conn_, host_Con, ip_C, hidx_C, 
                                         host_idx_C, pidx_C, port_idx_C, 
                                         host_Dis, ip_Di, connDomain_D, cidx_D, 
                                         conn_D, host, ip, connDomain_Di, 
                                         cidx_Di, conn_Di, depth_P, pkt_, 
                                         ipkt_, entry_, conn_P, hostMarker_, 
                                         ip_idx_, ipidx_, ip_P, host_P, pkt_P, 
                                         ipkt_P, entry_P, conn_Pu, 
                                         hostMarker_P, ip_idx_P, ipidx_P, 
                                         ip_Pu, host_Pu, IP, conn_PrivTo, 
                                         sport_, dstAddr_, dport_, pkt_Pr, 
                                         hostMarker_Pr, daddr_, hostidx_, 
                                         hidx_P, otherEntry_, i_, indicies_, 
                                         portDomain_, sourcePort_, destPort_, 
                                         new_sport_, conn, sport, dstAddr, 
                                         dport, pkt_Pri, hostMarker_Pri, 
                                         daddr_P, hostidx_P, hidx_Pr, 
                                         otherEntry_P, i_P, indicies_P, 
                                         portDomain_P, sourcePort_P, 
                                         destPort_P, new_sport_P, depth_Pr, 
                                         pkt_Priv, conn_Pr, hostMarker_Priv, 
                                         daddr_Pr, hostidx_Pr, hidx_Pri, 
                                         otherEntry_Pr, i_Pr, indicies_Pr, 
                                         portDomain_Pr, sourcePort_Pr, 
                                         destPort_Pr, new_sport_Pr, pkt_PrivT, 
                                         conn_Pri, hostMarker_PrivT, daddr_Pri, 
                                         hostidx_Pri, hidx_Priv, 
                                         otherEntry_Pri, i_Pri, indicies_Pri, 
                                         portDomain_Pri, sourcePort_Pri, 
                                         destPort_Pri, new_sport_Pri, depth_C, 
                                         host_C, hidx_Co, host_idx_Co, pidx_Co, 
                                         port_idx_Co, connhost, port, host_Co, 
                                         hidx_Con, host_idx, pidx, port_idx, 
                                         depth_Di, ip_D, host_Di, connDomain, 
                                         cidx, conn_Dis, depth_Pu, pkt_Pu, 
                                         ipkt_Pu, entry_Pu, conn_Pub, 
                                         hostMarker_Pu, ip_idx_Pu, ipidx_Pu, 
                                         ip_Pub, host_Pub, depth_Pri, 
                                         pkt_PrivTo, conn_Priv, 
                                         hostMarker_PrivTo, daddr_Priv, 
                                         hostidx_Priv, hidx_PrivT, 
                                         otherEntry_Priv, i_Priv, 
                                         indicies_Priv, portDomain_Priv, 
                                         sourcePort_Priv, destPort_Priv, 
                                         new_sport_Priv, good, depth_E, i_E, 
                                         j_, ip_E, host_E, indecies_, depth_Ev, 
                                         i_Ev, j_E, ip_Ev, host_Ev, indecies_E, 
                                         i_C, i_Ch, depth_Pub, pkt_Pub, 
                                         ipkt_Pub, entry_Pub, conn_PubT, 
                                         hostMarker_Pub, ip_idx_Pub, ipidx_Pub, 
                                         ip_PubT, host_PubT, depth_Priv, 
                                         pkt_PrivToP, conn_PrivT, 
                                         hostMarker_PrivToP, daddr, hostidx, 
                                         hidx, otherEntry, i_PrivT, indicies, 
                                         portDomain, sourcePort, destPort, 
                                         new_sport, depth_PubT, pkt, ipkt, 
                                         entry, conn_PubTo, hostMarker, ip_idx, 
                                         ipidx, ip_PubTo, host_PubTo, depth, 
                                         i_Eve, j, ip_Eve, host_Eve, indecies, 
                                         i, aa >>

pubtoPrivElse_Pub(self) == /\ pc[self] = "pubtoPrivElse_Pub"
                           /\ entry_Pub' = [entry_Pub EXCEPT ![self] = Head(entry_Pub[self])]
                           /\ IF entry_Pub'[self].reply.dport=E
                                 THEN /\ PrintT(<<"PubToPrivMan - PortShadow: ", entry_Pub'[self], pkt_Pub[self]>>)
                                 ELSE /\ TRUE
                           /\ IF entry_Pub'[self].host_marker/=pkt_Pub[self].host_marker
                                 THEN /\ PrintT(<<"PubToPrivMan - entry.host_marker/=pkt.host_marker:", entry_Pub'[self], pkt_Pub[self]>>)
                                      /\ IF pkt_Pub[self].host_marker = H1
                                            THEN /\ Marker1' = entry_Pub'[self].host_marker
                                                 /\ UNCHANGED Marker2
                                            ELSE /\ Marker2' = entry_Pub'[self].host_marker
                                                 /\ UNCHANGED Marker1
                                      /\ PrintT(<<"PubToPrivMan-Eviction Error: pkt", pkt_Pub[self], " entry", entry_Pub'[self], "Connections:", Connections, "T: ", T>>)
                                 ELSE /\ TRUE
                                      /\ UNCHANGED << Marker1, Marker2 >>
                           /\ conn_PubT' = [conn_PubT EXCEPT ![self] = SelectSeq(Connections, LAMBDA e: entry_Pub'[self].orig.saddr = Head(e))]
                           /\ IF Len(conn_PubT'[self]) > 0
                                 THEN /\ pc' = [pc EXCEPT ![self] = "pubtoprivVConngt1"]
                                 ELSE /\ pc' = [pc EXCEPT ![self] = "pubtopriVvRet"]
                           /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, 
                                           Aa, Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, 
                                           Jj, Kk, Ll, Mm, Nn, Oo, Pp, Qq, Rr, 
                                           Ss, Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, 
                                           H2, MaxPorts, EP1, PortMap1, EP2, 
                                           PortMap2, TableFull, 
                                           EvictionReroute, PortScanInv, 
                                           ATIPInv, MaxTableSize, hosts, 
                                           FreeHosts, UsedHosts, Ports, 
                                           ExtraPorts, ExtraExtraPorts, T, 
                                           FreeIPs, PrivIPs, PubIPs, PortSpace, 
                                           UsedIPs, Connections, SendQueue, 
                                           RcvQueue, MAX, CmdConnect, 
                                           CmdDisconnect, PortSpaceFull, stack, 
                                           depth_, host_, hidx_, host_idx_, 
                                           pidx_, port_idx_, depth_D, ip_, 
                                           host_D, connDomain_, cidx_, conn_, 
                                           host_Con, ip_C, hidx_C, host_idx_C, 
                                           pidx_C, port_idx_C, host_Dis, ip_Di, 
                                           connDomain_D, cidx_D, conn_D, host, 
                                           ip, connDomain_Di, cidx_Di, conn_Di, 
                                           depth_P, pkt_, ipkt_, entry_, 
                                           conn_P, hostMarker_, ip_idx_, 
                                           ipidx_, ip_P, host_P, pkt_P, ipkt_P, 
                                           entry_P, conn_Pu, hostMarker_P, 
                                           ip_idx_P, ipidx_P, ip_Pu, host_Pu, 
                                           IP, conn_PrivTo, sport_, dstAddr_, 
                                           dport_, pkt_Pr, hostMarker_Pr, 
                                           daddr_, hostidx_, hidx_P, 
                                           otherEntry_, i_, indicies_, 
                                           portDomain_, sourcePort_, destPort_, 
                                           new_sport_, conn, sport, dstAddr, 
                                           dport, pkt_Pri, hostMarker_Pri, 
                                           daddr_P, hostidx_P, hidx_Pr, 
                                           otherEntry_P, i_P, indicies_P, 
                                           portDomain_P, sourcePort_P, 
                                           destPort_P, new_sport_P, depth_Pr, 
                                           pkt_Priv, conn_Pr, hostMarker_Priv, 
                                           daddr_Pr, hostidx_Pr, hidx_Pri, 
                                           otherEntry_Pr, i_Pr, indicies_Pr, 
                                           portDomain_Pr, sourcePort_Pr, 
                                           destPort_Pr, new_sport_Pr, 
                                           pkt_PrivT, conn_Pri, 
                                           hostMarker_PrivT, daddr_Pri, 
                                           hostidx_Pri, hidx_Priv, 
                                           otherEntry_Pri, i_Pri, indicies_Pri, 
                                           portDomain_Pri, sourcePort_Pri, 
                                           destPort_Pri, new_sport_Pri, 
                                           depth_C, host_C, hidx_Co, 
                                           host_idx_Co, pidx_Co, port_idx_Co, 
                                           connhost, port, host_Co, hidx_Con, 
                                           host_idx, pidx, port_idx, depth_Di, 
                                           ip_D, host_Di, connDomain, cidx, 
                                           conn_Dis, depth_Pu, pkt_Pu, ipkt_Pu, 
                                           entry_Pu, conn_Pub, hostMarker_Pu, 
                                           ip_idx_Pu, ipidx_Pu, ip_Pub, 
                                           host_Pub, depth_Pri, pkt_PrivTo, 
                                           conn_Priv, hostMarker_PrivTo, 
                                           daddr_Priv, hostidx_Priv, 
                                           hidx_PrivT, otherEntry_Priv, i_Priv, 
                                           indicies_Priv, portDomain_Priv, 
                                           sourcePort_Priv, destPort_Priv, 
                                           new_sport_Priv, good, depth_E, i_E, 
                                           j_, ip_E, host_E, indecies_, 
                                           depth_Ev, i_Ev, j_E, ip_Ev, host_Ev, 
                                           indecies_E, i_C, i_Ch, depth_Pub, 
                                           pkt_Pub, ipkt_Pub, hostMarker_Pub, 
                                           ip_idx_Pub, ipidx_Pub, ip_PubT, 
                                           host_PubT, depth_Priv, pkt_PrivToP, 
                                           conn_PrivT, hostMarker_PrivToP, 
                                           daddr, hostidx, hidx, otherEntry, 
                                           i_PrivT, indicies, portDomain, 
                                           sourcePort, destPort, new_sport, 
                                           depth_PubT, pkt, ipkt, entry, 
                                           conn_PubTo, hostMarker, ip_idx, 
                                           ipidx, ip_PubTo, host_PubTo, depth, 
                                           i_Eve, j, ip_Eve, host_Eve, 
                                           indecies, i, aa >>

pubtoprivVConngt1(self) == /\ pc[self] = "pubtoprivVConngt1"
                           /\ conn_PubT' = [conn_PubT EXCEPT ![self] = Head(conn_PubT[self])]
                           /\ pc' = [pc EXCEPT ![self] = "pubtoprivVConngt2"]
                           /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, 
                                           Aa, Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, 
                                           Jj, Kk, Ll, Mm, Nn, Oo, Pp, Qq, Rr, 
                                           Ss, Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, 
                                           H2, MaxPorts, EP1, PortMap1, EP2, 
                                           PortMap2, TableFull, 
                                           EvictionReroute, PortScanInv, 
                                           ATIPInv, MaxTableSize, hosts, 
                                           FreeHosts, UsedHosts, Ports, 
                                           ExtraPorts, ExtraExtraPorts, T, 
                                           FreeIPs, PrivIPs, PubIPs, PortSpace, 
                                           UsedIPs, Connections, SendQueue, 
                                           RcvQueue, MAX, Marker1, Marker2, 
                                           CmdConnect, CmdDisconnect, 
                                           PortSpaceFull, stack, depth_, host_, 
                                           hidx_, host_idx_, pidx_, port_idx_, 
                                           depth_D, ip_, host_D, connDomain_, 
                                           cidx_, conn_, host_Con, ip_C, 
                                           hidx_C, host_idx_C, pidx_C, 
                                           port_idx_C, host_Dis, ip_Di, 
                                           connDomain_D, cidx_D, conn_D, host, 
                                           ip, connDomain_Di, cidx_Di, conn_Di, 
                                           depth_P, pkt_, ipkt_, entry_, 
                                           conn_P, hostMarker_, ip_idx_, 
                                           ipidx_, ip_P, host_P, pkt_P, ipkt_P, 
                                           entry_P, conn_Pu, hostMarker_P, 
                                           ip_idx_P, ipidx_P, ip_Pu, host_Pu, 
                                           IP, conn_PrivTo, sport_, dstAddr_, 
                                           dport_, pkt_Pr, hostMarker_Pr, 
                                           daddr_, hostidx_, hidx_P, 
                                           otherEntry_, i_, indicies_, 
                                           portDomain_, sourcePort_, destPort_, 
                                           new_sport_, conn, sport, dstAddr, 
                                           dport, pkt_Pri, hostMarker_Pri, 
                                           daddr_P, hostidx_P, hidx_Pr, 
                                           otherEntry_P, i_P, indicies_P, 
                                           portDomain_P, sourcePort_P, 
                                           destPort_P, new_sport_P, depth_Pr, 
                                           pkt_Priv, conn_Pr, hostMarker_Priv, 
                                           daddr_Pr, hostidx_Pr, hidx_Pri, 
                                           otherEntry_Pr, i_Pr, indicies_Pr, 
                                           portDomain_Pr, sourcePort_Pr, 
                                           destPort_Pr, new_sport_Pr, 
                                           pkt_PrivT, conn_Pri, 
                                           hostMarker_PrivT, daddr_Pri, 
                                           hostidx_Pri, hidx_Priv, 
                                           otherEntry_Pri, i_Pri, indicies_Pri, 
                                           portDomain_Pri, sourcePort_Pri, 
                                           destPort_Pri, new_sport_Pri, 
                                           depth_C, host_C, hidx_Co, 
                                           host_idx_Co, pidx_Co, port_idx_Co, 
                                           connhost, port, host_Co, hidx_Con, 
                                           host_idx, pidx, port_idx, depth_Di, 
                                           ip_D, host_Di, connDomain, cidx, 
                                           conn_Dis, depth_Pu, pkt_Pu, ipkt_Pu, 
                                           entry_Pu, conn_Pub, hostMarker_Pu, 
                                           ip_idx_Pu, ipidx_Pu, ip_Pub, 
                                           host_Pub, depth_Pri, pkt_PrivTo, 
                                           conn_Priv, hostMarker_PrivTo, 
                                           daddr_Priv, hostidx_Priv, 
                                           hidx_PrivT, otherEntry_Priv, i_Priv, 
                                           indicies_Priv, portDomain_Priv, 
                                           sourcePort_Priv, destPort_Priv, 
                                           new_sport_Priv, good, depth_E, i_E, 
                                           j_, ip_E, host_E, indecies_, 
                                           depth_Ev, i_Ev, j_E, ip_Ev, host_Ev, 
                                           indecies_E, i_C, i_Ch, depth_Pub, 
                                           pkt_Pub, ipkt_Pub, entry_Pub, 
                                           hostMarker_Pub, ip_idx_Pub, 
                                           ipidx_Pub, ip_PubT, host_PubT, 
                                           depth_Priv, pkt_PrivToP, conn_PrivT, 
                                           hostMarker_PrivToP, daddr, hostidx, 
                                           hidx, otherEntry, i_PrivT, indicies, 
                                           portDomain, sourcePort, destPort, 
                                           new_sport, depth_PubT, pkt, ipkt, 
                                           entry, conn_PubTo, hostMarker, 
                                           ip_idx, ipidx, ip_PubTo, host_PubTo, 
                                           depth, i_Eve, j, ip_Eve, host_Eve, 
                                           indecies, i, aa >>

pubtoprivVConngt2(self) == /\ pc[self] = "pubtoprivVConngt2"
                           /\ hostMarker_Pub' = [hostMarker_Pub EXCEPT ![self] = conn_PubT[self][2]]
                           /\ IF hostMarker_Pub'[self] = H1
                                 THEN /\ IF entry_Pub[self].host_marker = H2
                                            THEN /\ PortScanInv' = TRUE
                                            ELSE /\ TRUE
                                                 /\ UNCHANGED PortScanInv
                                      /\ Marker1' = entry_Pub[self].host_marker
                                      /\ UNCHANGED Marker2
                                 ELSE /\ IF entry_Pub[self].host_marker = H1
                                            THEN /\ PortScanInv' = TRUE
                                            ELSE /\ TRUE
                                                 /\ UNCHANGED PortScanInv
                                      /\ Marker2' = entry_Pub[self].host_marker
                                      /\ UNCHANGED Marker1
                           /\ pc' = [pc EXCEPT ![self] = "pubtopriVvRet"]
                           /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, 
                                           Aa, Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, 
                                           Jj, Kk, Ll, Mm, Nn, Oo, Pp, Qq, Rr, 
                                           Ss, Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, 
                                           H2, MaxPorts, EP1, PortMap1, EP2, 
                                           PortMap2, TableFull, 
                                           EvictionReroute, ATIPInv, 
                                           MaxTableSize, hosts, FreeHosts, 
                                           UsedHosts, Ports, ExtraPorts, 
                                           ExtraExtraPorts, T, FreeIPs, 
                                           PrivIPs, PubIPs, PortSpace, UsedIPs, 
                                           Connections, SendQueue, RcvQueue, 
                                           MAX, CmdConnect, CmdDisconnect, 
                                           PortSpaceFull, stack, depth_, host_, 
                                           hidx_, host_idx_, pidx_, port_idx_, 
                                           depth_D, ip_, host_D, connDomain_, 
                                           cidx_, conn_, host_Con, ip_C, 
                                           hidx_C, host_idx_C, pidx_C, 
                                           port_idx_C, host_Dis, ip_Di, 
                                           connDomain_D, cidx_D, conn_D, host, 
                                           ip, connDomain_Di, cidx_Di, conn_Di, 
                                           depth_P, pkt_, ipkt_, entry_, 
                                           conn_P, hostMarker_, ip_idx_, 
                                           ipidx_, ip_P, host_P, pkt_P, ipkt_P, 
                                           entry_P, conn_Pu, hostMarker_P, 
                                           ip_idx_P, ipidx_P, ip_Pu, host_Pu, 
                                           IP, conn_PrivTo, sport_, dstAddr_, 
                                           dport_, pkt_Pr, hostMarker_Pr, 
                                           daddr_, hostidx_, hidx_P, 
                                           otherEntry_, i_, indicies_, 
                                           portDomain_, sourcePort_, destPort_, 
                                           new_sport_, conn, sport, dstAddr, 
                                           dport, pkt_Pri, hostMarker_Pri, 
                                           daddr_P, hostidx_P, hidx_Pr, 
                                           otherEntry_P, i_P, indicies_P, 
                                           portDomain_P, sourcePort_P, 
                                           destPort_P, new_sport_P, depth_Pr, 
                                           pkt_Priv, conn_Pr, hostMarker_Priv, 
                                           daddr_Pr, hostidx_Pr, hidx_Pri, 
                                           otherEntry_Pr, i_Pr, indicies_Pr, 
                                           portDomain_Pr, sourcePort_Pr, 
                                           destPort_Pr, new_sport_Pr, 
                                           pkt_PrivT, conn_Pri, 
                                           hostMarker_PrivT, daddr_Pri, 
                                           hostidx_Pri, hidx_Priv, 
                                           otherEntry_Pri, i_Pri, indicies_Pri, 
                                           portDomain_Pri, sourcePort_Pri, 
                                           destPort_Pri, new_sport_Pri, 
                                           depth_C, host_C, hidx_Co, 
                                           host_idx_Co, pidx_Co, port_idx_Co, 
                                           connhost, port, host_Co, hidx_Con, 
                                           host_idx, pidx, port_idx, depth_Di, 
                                           ip_D, host_Di, connDomain, cidx, 
                                           conn_Dis, depth_Pu, pkt_Pu, ipkt_Pu, 
                                           entry_Pu, conn_Pub, hostMarker_Pu, 
                                           ip_idx_Pu, ipidx_Pu, ip_Pub, 
                                           host_Pub, depth_Pri, pkt_PrivTo, 
                                           conn_Priv, hostMarker_PrivTo, 
                                           daddr_Priv, hostidx_Priv, 
                                           hidx_PrivT, otherEntry_Priv, i_Priv, 
                                           indicies_Priv, portDomain_Priv, 
                                           sourcePort_Priv, destPort_Priv, 
                                           new_sport_Priv, good, depth_E, i_E, 
                                           j_, ip_E, host_E, indecies_, 
                                           depth_Ev, i_Ev, j_E, ip_Ev, host_Ev, 
                                           indecies_E, i_C, i_Ch, depth_Pub, 
                                           pkt_Pub, ipkt_Pub, entry_Pub, 
                                           conn_PubT, ip_idx_Pub, ipidx_Pub, 
                                           ip_PubT, host_PubT, depth_Priv, 
                                           pkt_PrivToP, conn_PrivT, 
                                           hostMarker_PrivToP, daddr, hostidx, 
                                           hidx, otherEntry, i_PrivT, indicies, 
                                           portDomain, sourcePort, destPort, 
                                           new_sport, depth_PubT, pkt, ipkt, 
                                           entry, conn_PubTo, hostMarker, 
                                           ip_idx, ipidx, ip_PubTo, host_PubTo, 
                                           depth, i_Eve, j, ip_Eve, host_Eve, 
                                           indecies, i, aa >>

pubtirprivVDE(self) == /\ pc[self] = "pubtirprivVDE"
                       /\ pc' = [pc EXCEPT ![self] = Head(stack[self]).pc]
                       /\ pkt_Pub' = [pkt_Pub EXCEPT ![self] = Head(stack[self]).pkt_Pub]
                       /\ ipkt_Pub' = [ipkt_Pub EXCEPT ![self] = Head(stack[self]).ipkt_Pub]
                       /\ entry_Pub' = [entry_Pub EXCEPT ![self] = Head(stack[self]).entry_Pub]
                       /\ conn_PubT' = [conn_PubT EXCEPT ![self] = Head(stack[self]).conn_PubT]
                       /\ hostMarker_Pub' = [hostMarker_Pub EXCEPT ![self] = Head(stack[self]).hostMarker_Pub]
                       /\ ip_idx_Pub' = [ip_idx_Pub EXCEPT ![self] = Head(stack[self]).ip_idx_Pub]
                       /\ ipidx_Pub' = [ipidx_Pub EXCEPT ![self] = Head(stack[self]).ipidx_Pub]
                       /\ ip_PubT' = [ip_PubT EXCEPT ![self] = Head(stack[self]).ip_PubT]
                       /\ host_PubT' = [host_PubT EXCEPT ![self] = Head(stack[self]).host_PubT]
                       /\ depth_Pub' = [depth_Pub EXCEPT ![self] = Head(stack[self]).depth_Pub]
                       /\ stack' = [stack EXCEPT ![self] = Tail(stack[self])]
                       /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, 
                                       Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, 
                                       Ll, Mm, Nn, Oo, Pp, Qq, Rr, Ss, Tt, Uu, 
                                       Vv, Ww, Xx, Yy, Zz, H1, H2, MaxPorts, 
                                       EP1, PortMap1, EP2, PortMap2, TableFull, 
                                       EvictionReroute, PortScanInv, ATIPInv, 
                                       MaxTableSize, hosts, FreeHosts, 
                                       UsedHosts, Ports, ExtraPorts, 
                                       ExtraExtraPorts, T, FreeIPs, PrivIPs, 
                                       PubIPs, PortSpace, UsedIPs, Connections, 
                                       SendQueue, RcvQueue, MAX, Marker1, 
                                       Marker2, CmdConnect, CmdDisconnect, 
                                       PortSpaceFull, depth_, host_, hidx_, 
                                       host_idx_, pidx_, port_idx_, depth_D, 
                                       ip_, host_D, connDomain_, cidx_, conn_, 
                                       host_Con, ip_C, hidx_C, host_idx_C, 
                                       pidx_C, port_idx_C, host_Dis, ip_Di, 
                                       connDomain_D, cidx_D, conn_D, host, ip, 
                                       connDomain_Di, cidx_Di, conn_Di, 
                                       depth_P, pkt_, ipkt_, entry_, conn_P, 
                                       hostMarker_, ip_idx_, ipidx_, ip_P, 
                                       host_P, pkt_P, ipkt_P, entry_P, conn_Pu, 
                                       hostMarker_P, ip_idx_P, ipidx_P, ip_Pu, 
                                       host_Pu, IP, conn_PrivTo, sport_, 
                                       dstAddr_, dport_, pkt_Pr, hostMarker_Pr, 
                                       daddr_, hostidx_, hidx_P, otherEntry_, 
                                       i_, indicies_, portDomain_, sourcePort_, 
                                       destPort_, new_sport_, conn, sport, 
                                       dstAddr, dport, pkt_Pri, hostMarker_Pri, 
                                       daddr_P, hostidx_P, hidx_Pr, 
                                       otherEntry_P, i_P, indicies_P, 
                                       portDomain_P, sourcePort_P, destPort_P, 
                                       new_sport_P, depth_Pr, pkt_Priv, 
                                       conn_Pr, hostMarker_Priv, daddr_Pr, 
                                       hostidx_Pr, hidx_Pri, otherEntry_Pr, 
                                       i_Pr, indicies_Pr, portDomain_Pr, 
                                       sourcePort_Pr, destPort_Pr, 
                                       new_sport_Pr, pkt_PrivT, conn_Pri, 
                                       hostMarker_PrivT, daddr_Pri, 
                                       hostidx_Pri, hidx_Priv, otherEntry_Pri, 
                                       i_Pri, indicies_Pri, portDomain_Pri, 
                                       sourcePort_Pri, destPort_Pri, 
                                       new_sport_Pri, depth_C, host_C, hidx_Co, 
                                       host_idx_Co, pidx_Co, port_idx_Co, 
                                       connhost, port, host_Co, hidx_Con, 
                                       host_idx, pidx, port_idx, depth_Di, 
                                       ip_D, host_Di, connDomain, cidx, 
                                       conn_Dis, depth_Pu, pkt_Pu, ipkt_Pu, 
                                       entry_Pu, conn_Pub, hostMarker_Pu, 
                                       ip_idx_Pu, ipidx_Pu, ip_Pub, host_Pub, 
                                       depth_Pri, pkt_PrivTo, conn_Priv, 
                                       hostMarker_PrivTo, daddr_Priv, 
                                       hostidx_Priv, hidx_PrivT, 
                                       otherEntry_Priv, i_Priv, indicies_Priv, 
                                       portDomain_Priv, sourcePort_Priv, 
                                       destPort_Priv, new_sport_Priv, good, 
                                       depth_E, i_E, j_, ip_E, host_E, 
                                       indecies_, depth_Ev, i_Ev, j_E, ip_Ev, 
                                       host_Ev, indecies_E, i_C, i_Ch, 
                                       depth_Priv, pkt_PrivToP, conn_PrivT, 
                                       hostMarker_PrivToP, daddr, hostidx, 
                                       hidx, otherEntry, i_PrivT, indicies, 
                                       portDomain, sourcePort, destPort, 
                                       new_sport, depth_PubT, pkt, ipkt, entry, 
                                       conn_PubTo, hostMarker, ip_idx, ipidx, 
                                       ip_PubTo, host_PubTo, depth, i_Eve, j, 
                                       ip_Eve, host_Eve, indecies, i, aa >>

pubtopriVvRet(self) == /\ pc[self] = "pubtopriVvRet"
                       /\ pc' = [pc EXCEPT ![self] = Head(stack[self]).pc]
                       /\ pkt_Pub' = [pkt_Pub EXCEPT ![self] = Head(stack[self]).pkt_Pub]
                       /\ ipkt_Pub' = [ipkt_Pub EXCEPT ![self] = Head(stack[self]).ipkt_Pub]
                       /\ entry_Pub' = [entry_Pub EXCEPT ![self] = Head(stack[self]).entry_Pub]
                       /\ conn_PubT' = [conn_PubT EXCEPT ![self] = Head(stack[self]).conn_PubT]
                       /\ hostMarker_Pub' = [hostMarker_Pub EXCEPT ![self] = Head(stack[self]).hostMarker_Pub]
                       /\ ip_idx_Pub' = [ip_idx_Pub EXCEPT ![self] = Head(stack[self]).ip_idx_Pub]
                       /\ ipidx_Pub' = [ipidx_Pub EXCEPT ![self] = Head(stack[self]).ipidx_Pub]
                       /\ ip_PubT' = [ip_PubT EXCEPT ![self] = Head(stack[self]).ip_PubT]
                       /\ host_PubT' = [host_PubT EXCEPT ![self] = Head(stack[self]).host_PubT]
                       /\ depth_Pub' = [depth_Pub EXCEPT ![self] = Head(stack[self]).depth_Pub]
                       /\ stack' = [stack EXCEPT ![self] = Tail(stack[self])]
                       /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, 
                                       Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, 
                                       Ll, Mm, Nn, Oo, Pp, Qq, Rr, Ss, Tt, Uu, 
                                       Vv, Ww, Xx, Yy, Zz, H1, H2, MaxPorts, 
                                       EP1, PortMap1, EP2, PortMap2, TableFull, 
                                       EvictionReroute, PortScanInv, ATIPInv, 
                                       MaxTableSize, hosts, FreeHosts, 
                                       UsedHosts, Ports, ExtraPorts, 
                                       ExtraExtraPorts, T, FreeIPs, PrivIPs, 
                                       PubIPs, PortSpace, UsedIPs, Connections, 
                                       SendQueue, RcvQueue, MAX, Marker1, 
                                       Marker2, CmdConnect, CmdDisconnect, 
                                       PortSpaceFull, depth_, host_, hidx_, 
                                       host_idx_, pidx_, port_idx_, depth_D, 
                                       ip_, host_D, connDomain_, cidx_, conn_, 
                                       host_Con, ip_C, hidx_C, host_idx_C, 
                                       pidx_C, port_idx_C, host_Dis, ip_Di, 
                                       connDomain_D, cidx_D, conn_D, host, ip, 
                                       connDomain_Di, cidx_Di, conn_Di, 
                                       depth_P, pkt_, ipkt_, entry_, conn_P, 
                                       hostMarker_, ip_idx_, ipidx_, ip_P, 
                                       host_P, pkt_P, ipkt_P, entry_P, conn_Pu, 
                                       hostMarker_P, ip_idx_P, ipidx_P, ip_Pu, 
                                       host_Pu, IP, conn_PrivTo, sport_, 
                                       dstAddr_, dport_, pkt_Pr, hostMarker_Pr, 
                                       daddr_, hostidx_, hidx_P, otherEntry_, 
                                       i_, indicies_, portDomain_, sourcePort_, 
                                       destPort_, new_sport_, conn, sport, 
                                       dstAddr, dport, pkt_Pri, hostMarker_Pri, 
                                       daddr_P, hostidx_P, hidx_Pr, 
                                       otherEntry_P, i_P, indicies_P, 
                                       portDomain_P, sourcePort_P, destPort_P, 
                                       new_sport_P, depth_Pr, pkt_Priv, 
                                       conn_Pr, hostMarker_Priv, daddr_Pr, 
                                       hostidx_Pr, hidx_Pri, otherEntry_Pr, 
                                       i_Pr, indicies_Pr, portDomain_Pr, 
                                       sourcePort_Pr, destPort_Pr, 
                                       new_sport_Pr, pkt_PrivT, conn_Pri, 
                                       hostMarker_PrivT, daddr_Pri, 
                                       hostidx_Pri, hidx_Priv, otherEntry_Pri, 
                                       i_Pri, indicies_Pri, portDomain_Pri, 
                                       sourcePort_Pri, destPort_Pri, 
                                       new_sport_Pri, depth_C, host_C, hidx_Co, 
                                       host_idx_Co, pidx_Co, port_idx_Co, 
                                       connhost, port, host_Co, hidx_Con, 
                                       host_idx, pidx, port_idx, depth_Di, 
                                       ip_D, host_Di, connDomain, cidx, 
                                       conn_Dis, depth_Pu, pkt_Pu, ipkt_Pu, 
                                       entry_Pu, conn_Pub, hostMarker_Pu, 
                                       ip_idx_Pu, ipidx_Pu, ip_Pub, host_Pub, 
                                       depth_Pri, pkt_PrivTo, conn_Priv, 
                                       hostMarker_PrivTo, daddr_Priv, 
                                       hostidx_Priv, hidx_PrivT, 
                                       otherEntry_Priv, i_Priv, indicies_Priv, 
                                       portDomain_Priv, sourcePort_Priv, 
                                       destPort_Priv, new_sport_Priv, good, 
                                       depth_E, i_E, j_, ip_E, host_E, 
                                       indecies_, depth_Ev, i_Ev, j_E, ip_Ev, 
                                       host_Ev, indecies_E, i_C, i_Ch, 
                                       depth_Priv, pkt_PrivToP, conn_PrivT, 
                                       hostMarker_PrivToP, daddr, hostidx, 
                                       hidx, otherEntry, i_PrivT, indicies, 
                                       portDomain, sourcePort, destPort, 
                                       new_sport, depth_PubT, pkt, ipkt, entry, 
                                       conn_PubTo, hostMarker, ip_idx, ipidx, 
                                       ip_PubTo, host_PubTo, depth, i_Eve, j, 
                                       ip_Eve, host_Eve, indecies, i, aa >>

PubToPrivExitVuln(self) == pubtoprivVEvt3(self) \/ pubtoprivVStart(self)
                              \/ pubtoprivEEmpty(self)
                              \/ pubtoPrivElse_Pub(self)
                              \/ pubtoprivVConngt1(self)
                              \/ pubtoprivVConngt2(self)
                              \/ pubtirprivVDE(self) \/ pubtopriVvRet(self)

privtopubV3(self) == /\ pc[self] = "privtopubV3"
                     /\ /\ depth' = [depth EXCEPT ![self] = depth_Priv[self]]
                        /\ stack' = [stack EXCEPT ![self] = << [ procedure |->  "EventSequenceATIP",
                                                                 pc        |->  "privtopubManStart",
                                                                 i_Eve     |->  i_Eve[self],
                                                                 j         |->  j[self],
                                                                 ip_Eve    |->  ip_Eve[self],
                                                                 host_Eve  |->  host_Eve[self],
                                                                 indecies  |->  indecies[self],
                                                                 depth     |->  depth[self] ] >>
                                                             \o stack[self]]
                     /\ i_Eve' = [i_Eve EXCEPT ![self] = defaultInitValue]
                     /\ j' = [j EXCEPT ![self] = defaultInitValue]
                     /\ ip_Eve' = [ip_Eve EXCEPT ![self] = defaultInitValue]
                     /\ host_Eve' = [host_Eve EXCEPT ![self] = defaultInitValue]
                     /\ indecies' = [indecies EXCEPT ![self] = defaultInitValue]
                     /\ pc' = [pc EXCEPT ![self] = "evtSeqStart"]
                     /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, Bb, 
                                     Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, Ll, 
                                     Mm, Nn, Oo, Pp, Qq, Rr, Ss, Tt, Uu, Vv, 
                                     Ww, Xx, Yy, Zz, H1, H2, MaxPorts, EP1, 
                                     PortMap1, EP2, PortMap2, TableFull, 
                                     EvictionReroute, PortScanInv, ATIPInv, 
                                     MaxTableSize, hosts, FreeHosts, UsedHosts, 
                                     Ports, ExtraPorts, ExtraExtraPorts, T, 
                                     FreeIPs, PrivIPs, PubIPs, PortSpace, 
                                     UsedIPs, Connections, SendQueue, RcvQueue, 
                                     MAX, Marker1, Marker2, CmdConnect, 
                                     CmdDisconnect, PortSpaceFull, depth_, 
                                     host_, hidx_, host_idx_, pidx_, port_idx_, 
                                     depth_D, ip_, host_D, connDomain_, cidx_, 
                                     conn_, host_Con, ip_C, hidx_C, host_idx_C, 
                                     pidx_C, port_idx_C, host_Dis, ip_Di, 
                                     connDomain_D, cidx_D, conn_D, host, ip, 
                                     connDomain_Di, cidx_Di, conn_Di, depth_P, 
                                     pkt_, ipkt_, entry_, conn_P, hostMarker_, 
                                     ip_idx_, ipidx_, ip_P, host_P, pkt_P, 
                                     ipkt_P, entry_P, conn_Pu, hostMarker_P, 
                                     ip_idx_P, ipidx_P, ip_Pu, host_Pu, IP, 
                                     conn_PrivTo, sport_, dstAddr_, dport_, 
                                     pkt_Pr, hostMarker_Pr, daddr_, hostidx_, 
                                     hidx_P, otherEntry_, i_, indicies_, 
                                     portDomain_, sourcePort_, destPort_, 
                                     new_sport_, conn, sport, dstAddr, dport, 
                                     pkt_Pri, hostMarker_Pri, daddr_P, 
                                     hostidx_P, hidx_Pr, otherEntry_P, i_P, 
                                     indicies_P, portDomain_P, sourcePort_P, 
                                     destPort_P, new_sport_P, depth_Pr, 
                                     pkt_Priv, conn_Pr, hostMarker_Priv, 
                                     daddr_Pr, hostidx_Pr, hidx_Pri, 
                                     otherEntry_Pr, i_Pr, indicies_Pr, 
                                     portDomain_Pr, sourcePort_Pr, destPort_Pr, 
                                     new_sport_Pr, pkt_PrivT, conn_Pri, 
                                     hostMarker_PrivT, daddr_Pri, hostidx_Pri, 
                                     hidx_Priv, otherEntry_Pri, i_Pri, 
                                     indicies_Pri, portDomain_Pri, 
                                     sourcePort_Pri, destPort_Pri, 
                                     new_sport_Pri, depth_C, host_C, hidx_Co, 
                                     host_idx_Co, pidx_Co, port_idx_Co, 
                                     connhost, port, host_Co, hidx_Con, 
                                     host_idx, pidx, port_idx, depth_Di, ip_D, 
                                     host_Di, connDomain, cidx, conn_Dis, 
                                     depth_Pu, pkt_Pu, ipkt_Pu, entry_Pu, 
                                     conn_Pub, hostMarker_Pu, ip_idx_Pu, 
                                     ipidx_Pu, ip_Pub, host_Pub, depth_Pri, 
                                     pkt_PrivTo, conn_Priv, hostMarker_PrivTo, 
                                     daddr_Priv, hostidx_Priv, hidx_PrivT, 
                                     otherEntry_Priv, i_Priv, indicies_Priv, 
                                     portDomain_Priv, sourcePort_Priv, 
                                     destPort_Priv, new_sport_Priv, good, 
                                     depth_E, i_E, j_, ip_E, host_E, indecies_, 
                                     depth_Ev, i_Ev, j_E, ip_Ev, host_Ev, 
                                     indecies_E, i_C, i_Ch, depth_Pub, pkt_Pub, 
                                     ipkt_Pub, entry_Pub, conn_PubT, 
                                     hostMarker_Pub, ip_idx_Pub, ipidx_Pub, 
                                     ip_PubT, host_PubT, depth_Priv, 
                                     pkt_PrivToP, conn_PrivT, 
                                     hostMarker_PrivToP, daddr, hostidx, hidx, 
                                     otherEntry, i_PrivT, indicies, portDomain, 
                                     sourcePort, destPort, new_sport, 
                                     depth_PubT, pkt, ipkt, entry, conn_PubTo, 
                                     hostMarker, ip_idx, ipidx, ip_PubTo, 
                                     host_PubTo, i, aa >>

privtopubManStart(self) == /\ pc[self] = "privtopubManStart"
                           /\ IF Len (Connections) > 0
                                 THEN /\ indicies' = [indicies EXCEPT ![self] = DOMAIN Connections]
                                      /\ portDomain' = [portDomain EXCEPT ![self] = DOMAIN Ports]
                                      /\ sourcePort' = [sourcePort EXCEPT ![self] = CHOOSE pr \in portDomain'[self] : TRUE]
                                      /\ i_PrivT' = [i_PrivT EXCEPT ![self] = CHOOSE f \in indicies'[self] : TRUE]
                                      /\ PrintT(<<"PrivToPub - conn", indecies[self], conn_PrivT[self], Connections>>)
                                      /\ pc' = [pc EXCEPT ![self] = "privtopubConn"]
                                 ELSE /\ pc' = [pc EXCEPT ![self] = "privtopubRet"]
                                      /\ UNCHANGED << i_PrivT, indicies, 
                                                      portDomain, sourcePort >>
                           /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, 
                                           Aa, Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, 
                                           Jj, Kk, Ll, Mm, Nn, Oo, Pp, Qq, Rr, 
                                           Ss, Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, 
                                           H2, MaxPorts, EP1, PortMap1, EP2, 
                                           PortMap2, TableFull, 
                                           EvictionReroute, PortScanInv, 
                                           ATIPInv, MaxTableSize, hosts, 
                                           FreeHosts, UsedHosts, Ports, 
                                           ExtraPorts, ExtraExtraPorts, T, 
                                           FreeIPs, PrivIPs, PubIPs, PortSpace, 
                                           UsedIPs, Connections, SendQueue, 
                                           RcvQueue, MAX, Marker1, Marker2, 
                                           CmdConnect, CmdDisconnect, 
                                           PortSpaceFull, stack, depth_, host_, 
                                           hidx_, host_idx_, pidx_, port_idx_, 
                                           depth_D, ip_, host_D, connDomain_, 
                                           cidx_, conn_, host_Con, ip_C, 
                                           hidx_C, host_idx_C, pidx_C, 
                                           port_idx_C, host_Dis, ip_Di, 
                                           connDomain_D, cidx_D, conn_D, host, 
                                           ip, connDomain_Di, cidx_Di, conn_Di, 
                                           depth_P, pkt_, ipkt_, entry_, 
                                           conn_P, hostMarker_, ip_idx_, 
                                           ipidx_, ip_P, host_P, pkt_P, ipkt_P, 
                                           entry_P, conn_Pu, hostMarker_P, 
                                           ip_idx_P, ipidx_P, ip_Pu, host_Pu, 
                                           IP, conn_PrivTo, sport_, dstAddr_, 
                                           dport_, pkt_Pr, hostMarker_Pr, 
                                           daddr_, hostidx_, hidx_P, 
                                           otherEntry_, i_, indicies_, 
                                           portDomain_, sourcePort_, destPort_, 
                                           new_sport_, conn, sport, dstAddr, 
                                           dport, pkt_Pri, hostMarker_Pri, 
                                           daddr_P, hostidx_P, hidx_Pr, 
                                           otherEntry_P, i_P, indicies_P, 
                                           portDomain_P, sourcePort_P, 
                                           destPort_P, new_sport_P, depth_Pr, 
                                           pkt_Priv, conn_Pr, hostMarker_Priv, 
                                           daddr_Pr, hostidx_Pr, hidx_Pri, 
                                           otherEntry_Pr, i_Pr, indicies_Pr, 
                                           portDomain_Pr, sourcePort_Pr, 
                                           destPort_Pr, new_sport_Pr, 
                                           pkt_PrivT, conn_Pri, 
                                           hostMarker_PrivT, daddr_Pri, 
                                           hostidx_Pri, hidx_Priv, 
                                           otherEntry_Pri, i_Pri, indicies_Pri, 
                                           portDomain_Pri, sourcePort_Pri, 
                                           destPort_Pri, new_sport_Pri, 
                                           depth_C, host_C, hidx_Co, 
                                           host_idx_Co, pidx_Co, port_idx_Co, 
                                           connhost, port, host_Co, hidx_Con, 
                                           host_idx, pidx, port_idx, depth_Di, 
                                           ip_D, host_Di, connDomain, cidx, 
                                           conn_Dis, depth_Pu, pkt_Pu, ipkt_Pu, 
                                           entry_Pu, conn_Pub, hostMarker_Pu, 
                                           ip_idx_Pu, ipidx_Pu, ip_Pub, 
                                           host_Pub, depth_Pri, pkt_PrivTo, 
                                           conn_Priv, hostMarker_PrivTo, 
                                           daddr_Priv, hostidx_Priv, 
                                           hidx_PrivT, otherEntry_Priv, i_Priv, 
                                           indicies_Priv, portDomain_Priv, 
                                           sourcePort_Priv, destPort_Priv, 
                                           new_sport_Priv, good, depth_E, i_E, 
                                           j_, ip_E, host_E, indecies_, 
                                           depth_Ev, i_Ev, j_E, ip_Ev, host_Ev, 
                                           indecies_E, i_C, i_Ch, depth_Pub, 
                                           pkt_Pub, ipkt_Pub, entry_Pub, 
                                           conn_PubT, hostMarker_Pub, 
                                           ip_idx_Pub, ipidx_Pub, ip_PubT, 
                                           host_PubT, depth_Priv, pkt_PrivToP, 
                                           conn_PrivT, hostMarker_PrivToP, 
                                           daddr, hostidx, hidx, otherEntry, 
                                           destPort, new_sport, depth_PubT, 
                                           pkt, ipkt, entry, conn_PubTo, 
                                           hostMarker, ip_idx, ipidx, ip_PubTo, 
                                           host_PubTo, depth, i_Eve, j, ip_Eve, 
                                           host_Eve, indecies, i, aa >>

privtopubConn(self) == /\ pc[self] = "privtopubConn"
                       /\ conn_PrivT' = [conn_PrivT EXCEPT ![self] = Connections[i_PrivT[self]]]
                       /\ sourcePort' = [sourcePort EXCEPT ![self] = Ports[sourcePort[self]]]
                       /\ portDomain' = [portDomain EXCEPT ![self] = DOMAIN Ports]
                       /\ destPort' = [destPort EXCEPT ![self] = CHOOSE h \in portDomain'[self] : TRUE]
                       /\ pc' = [pc EXCEPT ![self] = "privtopubDport"]
                       /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, 
                                       Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, 
                                       Ll, Mm, Nn, Oo, Pp, Qq, Rr, Ss, Tt, Uu, 
                                       Vv, Ww, Xx, Yy, Zz, H1, H2, MaxPorts, 
                                       EP1, PortMap1, EP2, PortMap2, TableFull, 
                                       EvictionReroute, PortScanInv, ATIPInv, 
                                       MaxTableSize, hosts, FreeHosts, 
                                       UsedHosts, Ports, ExtraPorts, 
                                       ExtraExtraPorts, T, FreeIPs, PrivIPs, 
                                       PubIPs, PortSpace, UsedIPs, Connections, 
                                       SendQueue, RcvQueue, MAX, Marker1, 
                                       Marker2, CmdConnect, CmdDisconnect, 
                                       PortSpaceFull, stack, depth_, host_, 
                                       hidx_, host_idx_, pidx_, port_idx_, 
                                       depth_D, ip_, host_D, connDomain_, 
                                       cidx_, conn_, host_Con, ip_C, hidx_C, 
                                       host_idx_C, pidx_C, port_idx_C, 
                                       host_Dis, ip_Di, connDomain_D, cidx_D, 
                                       conn_D, host, ip, connDomain_Di, 
                                       cidx_Di, conn_Di, depth_P, pkt_, ipkt_, 
                                       entry_, conn_P, hostMarker_, ip_idx_, 
                                       ipidx_, ip_P, host_P, pkt_P, ipkt_P, 
                                       entry_P, conn_Pu, hostMarker_P, 
                                       ip_idx_P, ipidx_P, ip_Pu, host_Pu, IP, 
                                       conn_PrivTo, sport_, dstAddr_, dport_, 
                                       pkt_Pr, hostMarker_Pr, daddr_, hostidx_, 
                                       hidx_P, otherEntry_, i_, indicies_, 
                                       portDomain_, sourcePort_, destPort_, 
                                       new_sport_, conn, sport, dstAddr, dport, 
                                       pkt_Pri, hostMarker_Pri, daddr_P, 
                                       hostidx_P, hidx_Pr, otherEntry_P, i_P, 
                                       indicies_P, portDomain_P, sourcePort_P, 
                                       destPort_P, new_sport_P, depth_Pr, 
                                       pkt_Priv, conn_Pr, hostMarker_Priv, 
                                       daddr_Pr, hostidx_Pr, hidx_Pri, 
                                       otherEntry_Pr, i_Pr, indicies_Pr, 
                                       portDomain_Pr, sourcePort_Pr, 
                                       destPort_Pr, new_sport_Pr, pkt_PrivT, 
                                       conn_Pri, hostMarker_PrivT, daddr_Pri, 
                                       hostidx_Pri, hidx_Priv, otherEntry_Pri, 
                                       i_Pri, indicies_Pri, portDomain_Pri, 
                                       sourcePort_Pri, destPort_Pri, 
                                       new_sport_Pri, depth_C, host_C, hidx_Co, 
                                       host_idx_Co, pidx_Co, port_idx_Co, 
                                       connhost, port, host_Co, hidx_Con, 
                                       host_idx, pidx, port_idx, depth_Di, 
                                       ip_D, host_Di, connDomain, cidx, 
                                       conn_Dis, depth_Pu, pkt_Pu, ipkt_Pu, 
                                       entry_Pu, conn_Pub, hostMarker_Pu, 
                                       ip_idx_Pu, ipidx_Pu, ip_Pub, host_Pub, 
                                       depth_Pri, pkt_PrivTo, conn_Priv, 
                                       hostMarker_PrivTo, daddr_Priv, 
                                       hostidx_Priv, hidx_PrivT, 
                                       otherEntry_Priv, i_Priv, indicies_Priv, 
                                       portDomain_Priv, sourcePort_Priv, 
                                       destPort_Priv, new_sport_Priv, good, 
                                       depth_E, i_E, j_, ip_E, host_E, 
                                       indecies_, depth_Ev, i_Ev, j_E, ip_Ev, 
                                       host_Ev, indecies_E, i_C, i_Ch, 
                                       depth_Pub, pkt_Pub, ipkt_Pub, entry_Pub, 
                                       conn_PubT, hostMarker_Pub, ip_idx_Pub, 
                                       ipidx_Pub, ip_PubT, host_PubT, 
                                       depth_Priv, pkt_PrivToP, 
                                       hostMarker_PrivToP, daddr, hostidx, 
                                       hidx, otherEntry, i_PrivT, indicies, 
                                       new_sport, depth_PubT, pkt, ipkt, entry, 
                                       conn_PubTo, hostMarker, ip_idx, ipidx, 
                                       ip_PubTo, host_PubTo, depth, i_Eve, j, 
                                       ip_Eve, host_Eve, indecies, i, aa >>

privtopubDport(self) == /\ pc[self] = "privtopubDport"
                        /\ destPort' = [destPort EXCEPT ![self] = Ports[destPort[self]]]
                        /\ hostidx' = [hostidx EXCEPT ![self] = DOMAIN hosts]
                        /\ hidx' = [hidx EXCEPT ![self] = CHOOSE hid \in hostidx'[self] : TRUE]
                        /\ daddr' = [daddr EXCEPT ![self] = hosts[hidx'[self]]]
                        /\ PrintT(<<"PrivToPubVuln - Conn: ", conn_PrivT[self]>>)
                        /\ hostMarker_PrivToP' = [hostMarker_PrivToP EXCEPT ![self] = Head(Tail(conn_PrivT[self]))]
                        /\ pkt_PrivToP' = [pkt_PrivToP EXCEPT ![self] = [saddr |-> Head(conn_PrivT[self]), sport |-> sourcePort[self],
                                                                         daddr |-> daddr'[self], dport |-> destPort'[self],
                                                                         host_marker |-> hostMarker_PrivToP'[self]
                                                                        ]]
                        /\ PrintT(<<"PrivToPubMan - pkt: ", conn_PrivT[self], pkt_PrivToP'[self]>>)
                        /\ entry' = [entry EXCEPT ![self] = [host_marker |-> hostMarker_PrivToP'[self],
                                                             orig |-> [saddr |-> pkt_PrivToP'[self].saddr, sport |-> pkt_PrivToP'[self].sport,
                                                                       daddr |-> pkt_PrivToP'[self].daddr, dport |-> pkt_PrivToP'[self].dport],
                                                             reply |-> [saddr |-> pkt_PrivToP'[self].daddr, sport |-> pkt_PrivToP'[self].dport,
                                                                        daddr |-> E,  dport |-> pkt_PrivToP'[self].sport ]]]
                        /\ otherEntry' = [otherEntry EXCEPT ![self] = SelectSeq(T, LAMBDA k: k.reply.saddr=pkt_PrivToP'[self].daddr /\ k.reply.sport=pkt_PrivToP'[self].dport /\
                                                                                             k.reply.daddr=E /\ k.reply.dport=pkt_PrivToP'[self].sport /\ k.host_marker /= hostMarker_PrivToP'[self])]
                        /\ PrintT(<<"PrivToPub - T", T, otherEntry'[self], pkt_PrivToP'[self]>>)
                        /\ IF Len(otherEntry'[self]) > 0
                              THEN /\ T' = SelectSeq(T, LAMBDA e: ~(e.reply.saddr=pkt_PrivToP'[self].daddr /\ e.reply.sport=pkt_PrivToP'[self].dport /\
                                                                    e.reply.daddr=E /\ e.reply.dport=pkt_PrivToP'[self].sport) )
                              ELSE /\ TRUE
                                   /\ T' = T
                        /\ pc' = [pc EXCEPT ![self] = "privtoPubManAddT"]
                        /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, 
                                        Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, 
                                        Ll, Mm, Nn, Oo, Pp, Qq, Rr, Ss, Tt, Uu, 
                                        Vv, Ww, Xx, Yy, Zz, H1, H2, MaxPorts, 
                                        EP1, PortMap1, EP2, PortMap2, 
                                        TableFull, EvictionReroute, 
                                        PortScanInv, ATIPInv, MaxTableSize, 
                                        hosts, FreeHosts, UsedHosts, Ports, 
                                        ExtraPorts, ExtraExtraPorts, FreeIPs, 
                                        PrivIPs, PubIPs, PortSpace, UsedIPs, 
                                        Connections, SendQueue, RcvQueue, MAX, 
                                        Marker1, Marker2, CmdConnect, 
                                        CmdDisconnect, PortSpaceFull, stack, 
                                        depth_, host_, hidx_, host_idx_, pidx_, 
                                        port_idx_, depth_D, ip_, host_D, 
                                        connDomain_, cidx_, conn_, host_Con, 
                                        ip_C, hidx_C, host_idx_C, pidx_C, 
                                        port_idx_C, host_Dis, ip_Di, 
                                        connDomain_D, cidx_D, conn_D, host, ip, 
                                        connDomain_Di, cidx_Di, conn_Di, 
                                        depth_P, pkt_, ipkt_, entry_, conn_P, 
                                        hostMarker_, ip_idx_, ipidx_, ip_P, 
                                        host_P, pkt_P, ipkt_P, entry_P, 
                                        conn_Pu, hostMarker_P, ip_idx_P, 
                                        ipidx_P, ip_Pu, host_Pu, IP, 
                                        conn_PrivTo, sport_, dstAddr_, dport_, 
                                        pkt_Pr, hostMarker_Pr, daddr_, 
                                        hostidx_, hidx_P, otherEntry_, i_, 
                                        indicies_, portDomain_, sourcePort_, 
                                        destPort_, new_sport_, conn, sport, 
                                        dstAddr, dport, pkt_Pri, 
                                        hostMarker_Pri, daddr_P, hostidx_P, 
                                        hidx_Pr, otherEntry_P, i_P, indicies_P, 
                                        portDomain_P, sourcePort_P, destPort_P, 
                                        new_sport_P, depth_Pr, pkt_Priv, 
                                        conn_Pr, hostMarker_Priv, daddr_Pr, 
                                        hostidx_Pr, hidx_Pri, otherEntry_Pr, 
                                        i_Pr, indicies_Pr, portDomain_Pr, 
                                        sourcePort_Pr, destPort_Pr, 
                                        new_sport_Pr, pkt_PrivT, conn_Pri, 
                                        hostMarker_PrivT, daddr_Pri, 
                                        hostidx_Pri, hidx_Priv, otherEntry_Pri, 
                                        i_Pri, indicies_Pri, portDomain_Pri, 
                                        sourcePort_Pri, destPort_Pri, 
                                        new_sport_Pri, depth_C, host_C, 
                                        hidx_Co, host_idx_Co, pidx_Co, 
                                        port_idx_Co, connhost, port, host_Co, 
                                        hidx_Con, host_idx, pidx, port_idx, 
                                        depth_Di, ip_D, host_Di, connDomain, 
                                        cidx, conn_Dis, depth_Pu, pkt_Pu, 
                                        ipkt_Pu, entry_Pu, conn_Pub, 
                                        hostMarker_Pu, ip_idx_Pu, ipidx_Pu, 
                                        ip_Pub, host_Pub, depth_Pri, 
                                        pkt_PrivTo, conn_Priv, 
                                        hostMarker_PrivTo, daddr_Priv, 
                                        hostidx_Priv, hidx_PrivT, 
                                        otherEntry_Priv, i_Priv, indicies_Priv, 
                                        portDomain_Priv, sourcePort_Priv, 
                                        destPort_Priv, new_sport_Priv, good, 
                                        depth_E, i_E, j_, ip_E, host_E, 
                                        indecies_, depth_Ev, i_Ev, j_E, ip_Ev, 
                                        host_Ev, indecies_E, i_C, i_Ch, 
                                        depth_Pub, pkt_Pub, ipkt_Pub, 
                                        entry_Pub, conn_PubT, hostMarker_Pub, 
                                        ip_idx_Pub, ipidx_Pub, ip_PubT, 
                                        host_PubT, depth_Priv, conn_PrivT, 
                                        i_PrivT, indicies, portDomain, 
                                        sourcePort, new_sport, depth_PubT, pkt, 
                                        ipkt, conn_PubTo, hostMarker, ip_idx, 
                                        ipidx, ip_PubTo, host_PubTo, depth, 
                                        i_Eve, j, ip_Eve, host_Eve, indecies, 
                                        i, aa >>

privtoPubManAddT(self) == /\ pc[self] = "privtoPubManAddT"
                          /\ T' = Append(T, entry[self])
                          /\ IF Len(T') > MaxTableSize
                                THEN /\ TableFull' = TRUE
                                ELSE /\ TRUE
                                     /\ UNCHANGED TableFull
                          /\ pc' = [pc EXCEPT ![self] = "privtopubPkt"]
                          /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, 
                                          Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, 
                                          Kk, Ll, Mm, Nn, Oo, Pp, Qq, Rr, Ss, 
                                          Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, H2, 
                                          MaxPorts, EP1, PortMap1, EP2, 
                                          PortMap2, EvictionReroute, 
                                          PortScanInv, ATIPInv, MaxTableSize, 
                                          hosts, FreeHosts, UsedHosts, Ports, 
                                          ExtraPorts, ExtraExtraPorts, FreeIPs, 
                                          PrivIPs, PubIPs, PortSpace, UsedIPs, 
                                          Connections, SendQueue, RcvQueue, 
                                          MAX, Marker1, Marker2, CmdConnect, 
                                          CmdDisconnect, PortSpaceFull, stack, 
                                          depth_, host_, hidx_, host_idx_, 
                                          pidx_, port_idx_, depth_D, ip_, 
                                          host_D, connDomain_, cidx_, conn_, 
                                          host_Con, ip_C, hidx_C, host_idx_C, 
                                          pidx_C, port_idx_C, host_Dis, ip_Di, 
                                          connDomain_D, cidx_D, conn_D, host, 
                                          ip, connDomain_Di, cidx_Di, conn_Di, 
                                          depth_P, pkt_, ipkt_, entry_, conn_P, 
                                          hostMarker_, ip_idx_, ipidx_, ip_P, 
                                          host_P, pkt_P, ipkt_P, entry_P, 
                                          conn_Pu, hostMarker_P, ip_idx_P, 
                                          ipidx_P, ip_Pu, host_Pu, IP, 
                                          conn_PrivTo, sport_, dstAddr_, 
                                          dport_, pkt_Pr, hostMarker_Pr, 
                                          daddr_, hostidx_, hidx_P, 
                                          otherEntry_, i_, indicies_, 
                                          portDomain_, sourcePort_, destPort_, 
                                          new_sport_, conn, sport, dstAddr, 
                                          dport, pkt_Pri, hostMarker_Pri, 
                                          daddr_P, hostidx_P, hidx_Pr, 
                                          otherEntry_P, i_P, indicies_P, 
                                          portDomain_P, sourcePort_P, 
                                          destPort_P, new_sport_P, depth_Pr, 
                                          pkt_Priv, conn_Pr, hostMarker_Priv, 
                                          daddr_Pr, hostidx_Pr, hidx_Pri, 
                                          otherEntry_Pr, i_Pr, indicies_Pr, 
                                          portDomain_Pr, sourcePort_Pr, 
                                          destPort_Pr, new_sport_Pr, pkt_PrivT, 
                                          conn_Pri, hostMarker_PrivT, 
                                          daddr_Pri, hostidx_Pri, hidx_Priv, 
                                          otherEntry_Pri, i_Pri, indicies_Pri, 
                                          portDomain_Pri, sourcePort_Pri, 
                                          destPort_Pri, new_sport_Pri, depth_C, 
                                          host_C, hidx_Co, host_idx_Co, 
                                          pidx_Co, port_idx_Co, connhost, port, 
                                          host_Co, hidx_Con, host_idx, pidx, 
                                          port_idx, depth_Di, ip_D, host_Di, 
                                          connDomain, cidx, conn_Dis, depth_Pu, 
                                          pkt_Pu, ipkt_Pu, entry_Pu, conn_Pub, 
                                          hostMarker_Pu, ip_idx_Pu, ipidx_Pu, 
                                          ip_Pub, host_Pub, depth_Pri, 
                                          pkt_PrivTo, conn_Priv, 
                                          hostMarker_PrivTo, daddr_Priv, 
                                          hostidx_Priv, hidx_PrivT, 
                                          otherEntry_Priv, i_Priv, 
                                          indicies_Priv, portDomain_Priv, 
                                          sourcePort_Priv, destPort_Priv, 
                                          new_sport_Priv, good, depth_E, i_E, 
                                          j_, ip_E, host_E, indecies_, 
                                          depth_Ev, i_Ev, j_E, ip_Ev, host_Ev, 
                                          indecies_E, i_C, i_Ch, depth_Pub, 
                                          pkt_Pub, ipkt_Pub, entry_Pub, 
                                          conn_PubT, hostMarker_Pub, 
                                          ip_idx_Pub, ipidx_Pub, ip_PubT, 
                                          host_PubT, depth_Priv, pkt_PrivToP, 
                                          conn_PrivT, hostMarker_PrivToP, 
                                          daddr, hostidx, hidx, otherEntry, 
                                          i_PrivT, indicies, portDomain, 
                                          sourcePort, destPort, new_sport, 
                                          depth_PubT, pkt, ipkt, entry, 
                                          conn_PubTo, hostMarker, ip_idx, 
                                          ipidx, ip_PubTo, host_PubTo, depth, 
                                          i_Eve, j, ip_Eve, host_Eve, indecies, 
                                          i, aa >>

privtopubPkt(self) == /\ pc[self] = "privtopubPkt"
                      /\ pkt_PrivToP' = [pkt_PrivToP EXCEPT ![self] = [saddr |->pkt_PrivToP[self].daddr, sport |-> pkt_PrivToP[self].dport,
                                                                       daddr |-> E, dport |-> pkt_PrivToP[self].sport,
                                                                       host_marker |-> hostMarker_PrivToP[self]]]
                      /\ SendQueue' = Append(SendQueue, pkt_PrivToP'[self])
                      /\ pc' = [pc EXCEPT ![self] = "privtopubRet"]
                      /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, Bb, 
                                      Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, Ll, 
                                      Mm, Nn, Oo, Pp, Qq, Rr, Ss, Tt, Uu, Vv, 
                                      Ww, Xx, Yy, Zz, H1, H2, MaxPorts, EP1, 
                                      PortMap1, EP2, PortMap2, TableFull, 
                                      EvictionReroute, PortScanInv, ATIPInv, 
                                      MaxTableSize, hosts, FreeHosts, 
                                      UsedHosts, Ports, ExtraPorts, 
                                      ExtraExtraPorts, T, FreeIPs, PrivIPs, 
                                      PubIPs, PortSpace, UsedIPs, Connections, 
                                      RcvQueue, MAX, Marker1, Marker2, 
                                      CmdConnect, CmdDisconnect, PortSpaceFull, 
                                      stack, depth_, host_, hidx_, host_idx_, 
                                      pidx_, port_idx_, depth_D, ip_, host_D, 
                                      connDomain_, cidx_, conn_, host_Con, 
                                      ip_C, hidx_C, host_idx_C, pidx_C, 
                                      port_idx_C, host_Dis, ip_Di, 
                                      connDomain_D, cidx_D, conn_D, host, ip, 
                                      connDomain_Di, cidx_Di, conn_Di, depth_P, 
                                      pkt_, ipkt_, entry_, conn_P, hostMarker_, 
                                      ip_idx_, ipidx_, ip_P, host_P, pkt_P, 
                                      ipkt_P, entry_P, conn_Pu, hostMarker_P, 
                                      ip_idx_P, ipidx_P, ip_Pu, host_Pu, IP, 
                                      conn_PrivTo, sport_, dstAddr_, dport_, 
                                      pkt_Pr, hostMarker_Pr, daddr_, hostidx_, 
                                      hidx_P, otherEntry_, i_, indicies_, 
                                      portDomain_, sourcePort_, destPort_, 
                                      new_sport_, conn, sport, dstAddr, dport, 
                                      pkt_Pri, hostMarker_Pri, daddr_P, 
                                      hostidx_P, hidx_Pr, otherEntry_P, i_P, 
                                      indicies_P, portDomain_P, sourcePort_P, 
                                      destPort_P, new_sport_P, depth_Pr, 
                                      pkt_Priv, conn_Pr, hostMarker_Priv, 
                                      daddr_Pr, hostidx_Pr, hidx_Pri, 
                                      otherEntry_Pr, i_Pr, indicies_Pr, 
                                      portDomain_Pr, sourcePort_Pr, 
                                      destPort_Pr, new_sport_Pr, pkt_PrivT, 
                                      conn_Pri, hostMarker_PrivT, daddr_Pri, 
                                      hostidx_Pri, hidx_Priv, otherEntry_Pri, 
                                      i_Pri, indicies_Pri, portDomain_Pri, 
                                      sourcePort_Pri, destPort_Pri, 
                                      new_sport_Pri, depth_C, host_C, hidx_Co, 
                                      host_idx_Co, pidx_Co, port_idx_Co, 
                                      connhost, port, host_Co, hidx_Con, 
                                      host_idx, pidx, port_idx, depth_Di, ip_D, 
                                      host_Di, connDomain, cidx, conn_Dis, 
                                      depth_Pu, pkt_Pu, ipkt_Pu, entry_Pu, 
                                      conn_Pub, hostMarker_Pu, ip_idx_Pu, 
                                      ipidx_Pu, ip_Pub, host_Pub, depth_Pri, 
                                      pkt_PrivTo, conn_Priv, hostMarker_PrivTo, 
                                      daddr_Priv, hostidx_Priv, hidx_PrivT, 
                                      otherEntry_Priv, i_Priv, indicies_Priv, 
                                      portDomain_Priv, sourcePort_Priv, 
                                      destPort_Priv, new_sport_Priv, good, 
                                      depth_E, i_E, j_, ip_E, host_E, 
                                      indecies_, depth_Ev, i_Ev, j_E, ip_Ev, 
                                      host_Ev, indecies_E, i_C, i_Ch, 
                                      depth_Pub, pkt_Pub, ipkt_Pub, entry_Pub, 
                                      conn_PubT, hostMarker_Pub, ip_idx_Pub, 
                                      ipidx_Pub, ip_PubT, host_PubT, 
                                      depth_Priv, conn_PrivT, 
                                      hostMarker_PrivToP, daddr, hostidx, hidx, 
                                      otherEntry, i_PrivT, indicies, 
                                      portDomain, sourcePort, destPort, 
                                      new_sport, depth_PubT, pkt, ipkt, entry, 
                                      conn_PubTo, hostMarker, ip_idx, ipidx, 
                                      ip_PubTo, host_PubTo, depth, i_Eve, j, 
                                      ip_Eve, host_Eve, indecies, i, aa >>

privtopubRet(self) == /\ pc[self] = "privtopubRet"
                      /\ pc' = [pc EXCEPT ![self] = Head(stack[self]).pc]
                      /\ pkt_PrivToP' = [pkt_PrivToP EXCEPT ![self] = Head(stack[self]).pkt_PrivToP]
                      /\ conn_PrivT' = [conn_PrivT EXCEPT ![self] = Head(stack[self]).conn_PrivT]
                      /\ hostMarker_PrivToP' = [hostMarker_PrivToP EXCEPT ![self] = Head(stack[self]).hostMarker_PrivToP]
                      /\ daddr' = [daddr EXCEPT ![self] = Head(stack[self]).daddr]
                      /\ hostidx' = [hostidx EXCEPT ![self] = Head(stack[self]).hostidx]
                      /\ hidx' = [hidx EXCEPT ![self] = Head(stack[self]).hidx]
                      /\ otherEntry' = [otherEntry EXCEPT ![self] = Head(stack[self]).otherEntry]
                      /\ i_PrivT' = [i_PrivT EXCEPT ![self] = Head(stack[self]).i_PrivT]
                      /\ indicies' = [indicies EXCEPT ![self] = Head(stack[self]).indicies]
                      /\ portDomain' = [portDomain EXCEPT ![self] = Head(stack[self]).portDomain]
                      /\ sourcePort' = [sourcePort EXCEPT ![self] = Head(stack[self]).sourcePort]
                      /\ destPort' = [destPort EXCEPT ![self] = Head(stack[self]).destPort]
                      /\ new_sport' = [new_sport EXCEPT ![self] = Head(stack[self]).new_sport]
                      /\ depth_Priv' = [depth_Priv EXCEPT ![self] = Head(stack[self]).depth_Priv]
                      /\ stack' = [stack EXCEPT ![self] = Tail(stack[self])]
                      /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, Bb, 
                                      Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, Ll, 
                                      Mm, Nn, Oo, Pp, Qq, Rr, Ss, Tt, Uu, Vv, 
                                      Ww, Xx, Yy, Zz, H1, H2, MaxPorts, EP1, 
                                      PortMap1, EP2, PortMap2, TableFull, 
                                      EvictionReroute, PortScanInv, ATIPInv, 
                                      MaxTableSize, hosts, FreeHosts, 
                                      UsedHosts, Ports, ExtraPorts, 
                                      ExtraExtraPorts, T, FreeIPs, PrivIPs, 
                                      PubIPs, PortSpace, UsedIPs, Connections, 
                                      SendQueue, RcvQueue, MAX, Marker1, 
                                      Marker2, CmdConnect, CmdDisconnect, 
                                      PortSpaceFull, depth_, host_, hidx_, 
                                      host_idx_, pidx_, port_idx_, depth_D, 
                                      ip_, host_D, connDomain_, cidx_, conn_, 
                                      host_Con, ip_C, hidx_C, host_idx_C, 
                                      pidx_C, port_idx_C, host_Dis, ip_Di, 
                                      connDomain_D, cidx_D, conn_D, host, ip, 
                                      connDomain_Di, cidx_Di, conn_Di, depth_P, 
                                      pkt_, ipkt_, entry_, conn_P, hostMarker_, 
                                      ip_idx_, ipidx_, ip_P, host_P, pkt_P, 
                                      ipkt_P, entry_P, conn_Pu, hostMarker_P, 
                                      ip_idx_P, ipidx_P, ip_Pu, host_Pu, IP, 
                                      conn_PrivTo, sport_, dstAddr_, dport_, 
                                      pkt_Pr, hostMarker_Pr, daddr_, hostidx_, 
                                      hidx_P, otherEntry_, i_, indicies_, 
                                      portDomain_, sourcePort_, destPort_, 
                                      new_sport_, conn, sport, dstAddr, dport, 
                                      pkt_Pri, hostMarker_Pri, daddr_P, 
                                      hostidx_P, hidx_Pr, otherEntry_P, i_P, 
                                      indicies_P, portDomain_P, sourcePort_P, 
                                      destPort_P, new_sport_P, depth_Pr, 
                                      pkt_Priv, conn_Pr, hostMarker_Priv, 
                                      daddr_Pr, hostidx_Pr, hidx_Pri, 
                                      otherEntry_Pr, i_Pr, indicies_Pr, 
                                      portDomain_Pr, sourcePort_Pr, 
                                      destPort_Pr, new_sport_Pr, pkt_PrivT, 
                                      conn_Pri, hostMarker_PrivT, daddr_Pri, 
                                      hostidx_Pri, hidx_Priv, otherEntry_Pri, 
                                      i_Pri, indicies_Pri, portDomain_Pri, 
                                      sourcePort_Pri, destPort_Pri, 
                                      new_sport_Pri, depth_C, host_C, hidx_Co, 
                                      host_idx_Co, pidx_Co, port_idx_Co, 
                                      connhost, port, host_Co, hidx_Con, 
                                      host_idx, pidx, port_idx, depth_Di, ip_D, 
                                      host_Di, connDomain, cidx, conn_Dis, 
                                      depth_Pu, pkt_Pu, ipkt_Pu, entry_Pu, 
                                      conn_Pub, hostMarker_Pu, ip_idx_Pu, 
                                      ipidx_Pu, ip_Pub, host_Pub, depth_Pri, 
                                      pkt_PrivTo, conn_Priv, hostMarker_PrivTo, 
                                      daddr_Priv, hostidx_Priv, hidx_PrivT, 
                                      otherEntry_Priv, i_Priv, indicies_Priv, 
                                      portDomain_Priv, sourcePort_Priv, 
                                      destPort_Priv, new_sport_Priv, good, 
                                      depth_E, i_E, j_, ip_E, host_E, 
                                      indecies_, depth_Ev, i_Ev, j_E, ip_Ev, 
                                      host_Ev, indecies_E, i_C, i_Ch, 
                                      depth_Pub, pkt_Pub, ipkt_Pub, entry_Pub, 
                                      conn_PubT, hostMarker_Pub, ip_idx_Pub, 
                                      ipidx_Pub, ip_PubT, host_PubT, 
                                      depth_PubT, pkt, ipkt, entry, conn_PubTo, 
                                      hostMarker, ip_idx, ipidx, ip_PubTo, 
                                      host_PubTo, depth, i_Eve, j, ip_Eve, 
                                      host_Eve, indecies, i, aa >>

PrivToPubExit(self) == privtopubV3(self) \/ privtopubManStart(self)
                          \/ privtopubConn(self) \/ privtopubDport(self)
                          \/ privtoPubManAddT(self) \/ privtopubPkt(self)
                          \/ privtopubRet(self)

pubtoprivStart(self) == /\ pc[self] = "pubtoprivStart"
                        /\ /\ depth_Ev' = [depth_Ev EXCEPT ![self] = depth_PubT[self]]
                           /\ stack' = [stack EXCEPT ![self] = << [ procedure |->  "EventSequence",
                                                                    pc        |->  "pubtoprivIf",
                                                                    i_Ev      |->  i_Ev[self],
                                                                    j_E       |->  j_E[self],
                                                                    ip_Ev     |->  ip_Ev[self],
                                                                    host_Ev   |->  host_Ev[self],
                                                                    indecies_E |->  indecies_E[self],
                                                                    depth_Ev  |->  depth_Ev[self] ] >>
                                                                \o stack[self]]
                        /\ i_Ev' = [i_Ev EXCEPT ![self] = defaultInitValue]
                        /\ j_E' = [j_E EXCEPT ![self] = defaultInitValue]
                        /\ ip_Ev' = [ip_Ev EXCEPT ![self] = defaultInitValue]
                        /\ host_Ev' = [host_Ev EXCEPT ![self] = defaultInitValue]
                        /\ indecies_E' = [indecies_E EXCEPT ![self] = defaultInitValue]
                        /\ pc' = [pc EXCEPT ![self] = "evtSeqStart_"]
                        /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, 
                                        Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, 
                                        Ll, Mm, Nn, Oo, Pp, Qq, Rr, Ss, Tt, Uu, 
                                        Vv, Ww, Xx, Yy, Zz, H1, H2, MaxPorts, 
                                        EP1, PortMap1, EP2, PortMap2, 
                                        TableFull, EvictionReroute, 
                                        PortScanInv, ATIPInv, MaxTableSize, 
                                        hosts, FreeHosts, UsedHosts, Ports, 
                                        ExtraPorts, ExtraExtraPorts, T, 
                                        FreeIPs, PrivIPs, PubIPs, PortSpace, 
                                        UsedIPs, Connections, SendQueue, 
                                        RcvQueue, MAX, Marker1, Marker2, 
                                        CmdConnect, CmdDisconnect, 
                                        PortSpaceFull, depth_, host_, hidx_, 
                                        host_idx_, pidx_, port_idx_, depth_D, 
                                        ip_, host_D, connDomain_, cidx_, conn_, 
                                        host_Con, ip_C, hidx_C, host_idx_C, 
                                        pidx_C, port_idx_C, host_Dis, ip_Di, 
                                        connDomain_D, cidx_D, conn_D, host, ip, 
                                        connDomain_Di, cidx_Di, conn_Di, 
                                        depth_P, pkt_, ipkt_, entry_, conn_P, 
                                        hostMarker_, ip_idx_, ipidx_, ip_P, 
                                        host_P, pkt_P, ipkt_P, entry_P, 
                                        conn_Pu, hostMarker_P, ip_idx_P, 
                                        ipidx_P, ip_Pu, host_Pu, IP, 
                                        conn_PrivTo, sport_, dstAddr_, dport_, 
                                        pkt_Pr, hostMarker_Pr, daddr_, 
                                        hostidx_, hidx_P, otherEntry_, i_, 
                                        indicies_, portDomain_, sourcePort_, 
                                        destPort_, new_sport_, conn, sport, 
                                        dstAddr, dport, pkt_Pri, 
                                        hostMarker_Pri, daddr_P, hostidx_P, 
                                        hidx_Pr, otherEntry_P, i_P, indicies_P, 
                                        portDomain_P, sourcePort_P, destPort_P, 
                                        new_sport_P, depth_Pr, pkt_Priv, 
                                        conn_Pr, hostMarker_Priv, daddr_Pr, 
                                        hostidx_Pr, hidx_Pri, otherEntry_Pr, 
                                        i_Pr, indicies_Pr, portDomain_Pr, 
                                        sourcePort_Pr, destPort_Pr, 
                                        new_sport_Pr, pkt_PrivT, conn_Pri, 
                                        hostMarker_PrivT, daddr_Pri, 
                                        hostidx_Pri, hidx_Priv, otherEntry_Pri, 
                                        i_Pri, indicies_Pri, portDomain_Pri, 
                                        sourcePort_Pri, destPort_Pri, 
                                        new_sport_Pri, depth_C, host_C, 
                                        hidx_Co, host_idx_Co, pidx_Co, 
                                        port_idx_Co, connhost, port, host_Co, 
                                        hidx_Con, host_idx, pidx, port_idx, 
                                        depth_Di, ip_D, host_Di, connDomain, 
                                        cidx, conn_Dis, depth_Pu, pkt_Pu, 
                                        ipkt_Pu, entry_Pu, conn_Pub, 
                                        hostMarker_Pu, ip_idx_Pu, ipidx_Pu, 
                                        ip_Pub, host_Pub, depth_Pri, 
                                        pkt_PrivTo, conn_Priv, 
                                        hostMarker_PrivTo, daddr_Priv, 
                                        hostidx_Priv, hidx_PrivT, 
                                        otherEntry_Priv, i_Priv, indicies_Priv, 
                                        portDomain_Priv, sourcePort_Priv, 
                                        destPort_Priv, new_sport_Priv, good, 
                                        depth_E, i_E, j_, ip_E, host_E, 
                                        indecies_, i_C, i_Ch, depth_Pub, 
                                        pkt_Pub, ipkt_Pub, entry_Pub, 
                                        conn_PubT, hostMarker_Pub, ip_idx_Pub, 
                                        ipidx_Pub, ip_PubT, host_PubT, 
                                        depth_Priv, pkt_PrivToP, conn_PrivT, 
                                        hostMarker_PrivToP, daddr, hostidx, 
                                        hidx, otherEntry, i_PrivT, indicies, 
                                        portDomain, sourcePort, destPort, 
                                        new_sport, depth_PubT, pkt, ipkt, 
                                        entry, conn_PubTo, hostMarker, ip_idx, 
                                        ipidx, ip_PubTo, host_PubTo, depth, 
                                        i_Eve, j, ip_Eve, host_Eve, indecies, 
                                        i, aa >>

pubtoprivIf(self) == /\ pc[self] = "pubtoprivIf"
                     /\ IF Len(SendQueue) > 0
                           THEN /\ pkt' = [pkt EXCEPT ![self] = Head(SendQueue)]
                                /\ PrintT(<<"PubToPriv", pkt'[self], Connections>>)
                                /\ SendQueue' = Tail(SendQueue)
                                /\ entry' = [entry EXCEPT ![self] = SelectSeq(T, LAMBDA e: e.reply.saddr=pkt'[self].saddr /\
                                                                                           e.reply.sport=pkt'[self].sport /\
                                                                                           e.reply.daddr=pkt'[self].daddr /\
                                                                                           e.reply.dport=pkt'[self].dport)]
                                /\ IF Len(entry'[self]) <= 0
                                      THEN /\ IF pkt'[self].dport = N
                                                 THEN /\ IF Len(FreeIPs) > 0
                                                            THEN /\ ip_idx' = [ip_idx EXCEPT ![self] = DOMAIN FreeIPs]
                                                                 /\ ipidx' = [ipidx EXCEPT ![self] = CHOOSE ipp \in ip_idx'[self] : TRUE]
                                                                 /\ ip_PubTo' = [ip_PubTo EXCEPT ![self] = FreeIPs[ipidx'[self]]]
                                                                 /\ FreeIPs' = SelectSeq(FreeIPs, LAMBDA d: d /= ip_PubTo'[self])
                                                                 /\ UsedIPs' = Append(UsedIPs, ip_PubTo'[self])
                                                                 /\ host_PubTo' = [host_PubTo EXCEPT ![self] = pkt'[self].saddr]
                                                                 /\ Connections' = Append(Connections, <<ip_PubTo'[self], host_PubTo'[self]>>)
                                                            ELSE /\ TRUE
                                                                 /\ UNCHANGED << FreeIPs, 
                                                                                 UsedIPs, 
                                                                                 Connections, 
                                                                                 ip_idx, 
                                                                                 ipidx, 
                                                                                 ip_PubTo, 
                                                                                 host_PubTo >>
                                                 ELSE /\ IF pkt'[self].dport = NN
                                                            THEN /\ Assert((TRUE), 
                                                                           "Failure of assertion at line 1200, column 9.")
                                                            ELSE /\ Assert((TRUE), 
                                                                           "Failure of assertion at line 1205, column 9.")
                                                      /\ UNCHANGED << FreeIPs, 
                                                                      UsedIPs, 
                                                                      Connections, 
                                                                      ip_idx, 
                                                                      ipidx, 
                                                                      ip_PubTo, 
                                                                      host_PubTo >>
                                           /\ pc' = [pc EXCEPT ![self] = "pubtoprivRet"]
                                      ELSE /\ pc' = [pc EXCEPT ![self] = "pubtoPrivElse"]
                                           /\ UNCHANGED << FreeIPs, UsedIPs, 
                                                           Connections, ip_idx, 
                                                           ipidx, ip_PubTo, 
                                                           host_PubTo >>
                           ELSE /\ pc' = [pc EXCEPT ![self] = "pubtoprivRet"]
                                /\ UNCHANGED << FreeIPs, UsedIPs, Connections, 
                                                SendQueue, pkt, entry, ip_idx, 
                                                ipidx, ip_PubTo, host_PubTo >>
                     /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, Bb, 
                                     Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, Ll, 
                                     Mm, Nn, Oo, Pp, Qq, Rr, Ss, Tt, Uu, Vv, 
                                     Ww, Xx, Yy, Zz, H1, H2, MaxPorts, EP1, 
                                     PortMap1, EP2, PortMap2, TableFull, 
                                     EvictionReroute, PortScanInv, ATIPInv, 
                                     MaxTableSize, hosts, FreeHosts, UsedHosts, 
                                     Ports, ExtraPorts, ExtraExtraPorts, T, 
                                     PrivIPs, PubIPs, PortSpace, RcvQueue, MAX, 
                                     Marker1, Marker2, CmdConnect, 
                                     CmdDisconnect, PortSpaceFull, stack, 
                                     depth_, host_, hidx_, host_idx_, pidx_, 
                                     port_idx_, depth_D, ip_, host_D, 
                                     connDomain_, cidx_, conn_, host_Con, ip_C, 
                                     hidx_C, host_idx_C, pidx_C, port_idx_C, 
                                     host_Dis, ip_Di, connDomain_D, cidx_D, 
                                     conn_D, host, ip, connDomain_Di, cidx_Di, 
                                     conn_Di, depth_P, pkt_, ipkt_, entry_, 
                                     conn_P, hostMarker_, ip_idx_, ipidx_, 
                                     ip_P, host_P, pkt_P, ipkt_P, entry_P, 
                                     conn_Pu, hostMarker_P, ip_idx_P, ipidx_P, 
                                     ip_Pu, host_Pu, IP, conn_PrivTo, sport_, 
                                     dstAddr_, dport_, pkt_Pr, hostMarker_Pr, 
                                     daddr_, hostidx_, hidx_P, otherEntry_, i_, 
                                     indicies_, portDomain_, sourcePort_, 
                                     destPort_, new_sport_, conn, sport, 
                                     dstAddr, dport, pkt_Pri, hostMarker_Pri, 
                                     daddr_P, hostidx_P, hidx_Pr, otherEntry_P, 
                                     i_P, indicies_P, portDomain_P, 
                                     sourcePort_P, destPort_P, new_sport_P, 
                                     depth_Pr, pkt_Priv, conn_Pr, 
                                     hostMarker_Priv, daddr_Pr, hostidx_Pr, 
                                     hidx_Pri, otherEntry_Pr, i_Pr, 
                                     indicies_Pr, portDomain_Pr, sourcePort_Pr, 
                                     destPort_Pr, new_sport_Pr, pkt_PrivT, 
                                     conn_Pri, hostMarker_PrivT, daddr_Pri, 
                                     hostidx_Pri, hidx_Priv, otherEntry_Pri, 
                                     i_Pri, indicies_Pri, portDomain_Pri, 
                                     sourcePort_Pri, destPort_Pri, 
                                     new_sport_Pri, depth_C, host_C, hidx_Co, 
                                     host_idx_Co, pidx_Co, port_idx_Co, 
                                     connhost, port, host_Co, hidx_Con, 
                                     host_idx, pidx, port_idx, depth_Di, ip_D, 
                                     host_Di, connDomain, cidx, conn_Dis, 
                                     depth_Pu, pkt_Pu, ipkt_Pu, entry_Pu, 
                                     conn_Pub, hostMarker_Pu, ip_idx_Pu, 
                                     ipidx_Pu, ip_Pub, host_Pub, depth_Pri, 
                                     pkt_PrivTo, conn_Priv, hostMarker_PrivTo, 
                                     daddr_Priv, hostidx_Priv, hidx_PrivT, 
                                     otherEntry_Priv, i_Priv, indicies_Priv, 
                                     portDomain_Priv, sourcePort_Priv, 
                                     destPort_Priv, new_sport_Priv, good, 
                                     depth_E, i_E, j_, ip_E, host_E, indecies_, 
                                     depth_Ev, i_Ev, j_E, ip_Ev, host_Ev, 
                                     indecies_E, i_C, i_Ch, depth_Pub, pkt_Pub, 
                                     ipkt_Pub, entry_Pub, conn_PubT, 
                                     hostMarker_Pub, ip_idx_Pub, ipidx_Pub, 
                                     ip_PubT, host_PubT, depth_Priv, 
                                     pkt_PrivToP, conn_PrivT, 
                                     hostMarker_PrivToP, daddr, hostidx, hidx, 
                                     otherEntry, i_PrivT, indicies, portDomain, 
                                     sourcePort, destPort, new_sport, 
                                     depth_PubT, ipkt, conn_PubTo, hostMarker, 
                                     depth, i_Eve, j, ip_Eve, host_Eve, 
                                     indecies, i, aa >>

pubtoPrivElse(self) == /\ pc[self] = "pubtoPrivElse"
                       /\ entry' = [entry EXCEPT ![self] = Head(entry[self])]
                       /\ IF entry'[self].reply.dport=N
                             THEN /\ PrintT(<<"PubToPriv - PortShadow: ", entry'[self], pkt[self]>>)
                             ELSE /\ TRUE
                       /\ IF entry'[self].host_marker/=pkt[self].host_marker
                             THEN /\ IF pkt[self].host_marker = H1
                                        THEN /\ Marker1' = entry'[self].host_marker
                                             /\ IF entry'[self].host_marker = H2
                                                   THEN /\ EvictionReroute' = TRUE
                                                   ELSE /\ TRUE
                                                        /\ UNCHANGED EvictionReroute
                                             /\ UNCHANGED Marker2
                                        ELSE /\ Marker2' = entry'[self].host_marker
                                             /\ IF entry'[self].host_marker = H1
                                                   THEN /\ EvictionReroute' = TRUE
                                                   ELSE /\ TRUE
                                                        /\ UNCHANGED EvictionReroute
                                             /\ UNCHANGED Marker1
                                  /\ PrintT(<<"PubToPriv-Eviction Error: pkt", pkt[self], " entry", entry'[self], "Connections:", Connections, "T: ", T>>)
                             ELSE /\ TRUE
                                  /\ UNCHANGED << EvictionReroute, Marker1, 
                                                  Marker2 >>
                       /\ conn_PubTo' = [conn_PubTo EXCEPT ![self] = SelectSeq(Connections, LAMBDA e: entry'[self].orig.saddr = Head(e))]
                       /\ IF Len(conn_PubTo'[self]) > 0
                             THEN /\ pc' = [pc EXCEPT ![self] = "pubtoprivConngt1"]
                             ELSE /\ pc' = [pc EXCEPT ![self] = "pubtoprivRet"]
                       /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, 
                                       Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, 
                                       Ll, Mm, Nn, Oo, Pp, Qq, Rr, Ss, Tt, Uu, 
                                       Vv, Ww, Xx, Yy, Zz, H1, H2, MaxPorts, 
                                       EP1, PortMap1, EP2, PortMap2, TableFull, 
                                       PortScanInv, ATIPInv, MaxTableSize, 
                                       hosts, FreeHosts, UsedHosts, Ports, 
                                       ExtraPorts, ExtraExtraPorts, T, FreeIPs, 
                                       PrivIPs, PubIPs, PortSpace, UsedIPs, 
                                       Connections, SendQueue, RcvQueue, MAX, 
                                       CmdConnect, CmdDisconnect, 
                                       PortSpaceFull, stack, depth_, host_, 
                                       hidx_, host_idx_, pidx_, port_idx_, 
                                       depth_D, ip_, host_D, connDomain_, 
                                       cidx_, conn_, host_Con, ip_C, hidx_C, 
                                       host_idx_C, pidx_C, port_idx_C, 
                                       host_Dis, ip_Di, connDomain_D, cidx_D, 
                                       conn_D, host, ip, connDomain_Di, 
                                       cidx_Di, conn_Di, depth_P, pkt_, ipkt_, 
                                       entry_, conn_P, hostMarker_, ip_idx_, 
                                       ipidx_, ip_P, host_P, pkt_P, ipkt_P, 
                                       entry_P, conn_Pu, hostMarker_P, 
                                       ip_idx_P, ipidx_P, ip_Pu, host_Pu, IP, 
                                       conn_PrivTo, sport_, dstAddr_, dport_, 
                                       pkt_Pr, hostMarker_Pr, daddr_, hostidx_, 
                                       hidx_P, otherEntry_, i_, indicies_, 
                                       portDomain_, sourcePort_, destPort_, 
                                       new_sport_, conn, sport, dstAddr, dport, 
                                       pkt_Pri, hostMarker_Pri, daddr_P, 
                                       hostidx_P, hidx_Pr, otherEntry_P, i_P, 
                                       indicies_P, portDomain_P, sourcePort_P, 
                                       destPort_P, new_sport_P, depth_Pr, 
                                       pkt_Priv, conn_Pr, hostMarker_Priv, 
                                       daddr_Pr, hostidx_Pr, hidx_Pri, 
                                       otherEntry_Pr, i_Pr, indicies_Pr, 
                                       portDomain_Pr, sourcePort_Pr, 
                                       destPort_Pr, new_sport_Pr, pkt_PrivT, 
                                       conn_Pri, hostMarker_PrivT, daddr_Pri, 
                                       hostidx_Pri, hidx_Priv, otherEntry_Pri, 
                                       i_Pri, indicies_Pri, portDomain_Pri, 
                                       sourcePort_Pri, destPort_Pri, 
                                       new_sport_Pri, depth_C, host_C, hidx_Co, 
                                       host_idx_Co, pidx_Co, port_idx_Co, 
                                       connhost, port, host_Co, hidx_Con, 
                                       host_idx, pidx, port_idx, depth_Di, 
                                       ip_D, host_Di, connDomain, cidx, 
                                       conn_Dis, depth_Pu, pkt_Pu, ipkt_Pu, 
                                       entry_Pu, conn_Pub, hostMarker_Pu, 
                                       ip_idx_Pu, ipidx_Pu, ip_Pub, host_Pub, 
                                       depth_Pri, pkt_PrivTo, conn_Priv, 
                                       hostMarker_PrivTo, daddr_Priv, 
                                       hostidx_Priv, hidx_PrivT, 
                                       otherEntry_Priv, i_Priv, indicies_Priv, 
                                       portDomain_Priv, sourcePort_Priv, 
                                       destPort_Priv, new_sport_Priv, good, 
                                       depth_E, i_E, j_, ip_E, host_E, 
                                       indecies_, depth_Ev, i_Ev, j_E, ip_Ev, 
                                       host_Ev, indecies_E, i_C, i_Ch, 
                                       depth_Pub, pkt_Pub, ipkt_Pub, entry_Pub, 
                                       conn_PubT, hostMarker_Pub, ip_idx_Pub, 
                                       ipidx_Pub, ip_PubT, host_PubT, 
                                       depth_Priv, pkt_PrivToP, conn_PrivT, 
                                       hostMarker_PrivToP, daddr, hostidx, 
                                       hidx, otherEntry, i_PrivT, indicies, 
                                       portDomain, sourcePort, destPort, 
                                       new_sport, depth_PubT, pkt, ipkt, 
                                       hostMarker, ip_idx, ipidx, ip_PubTo, 
                                       host_PubTo, depth, i_Eve, j, ip_Eve, 
                                       host_Eve, indecies, i, aa >>

pubtoprivConngt1(self) == /\ pc[self] = "pubtoprivConngt1"
                          /\ conn_PubTo' = [conn_PubTo EXCEPT ![self] = Head(conn_PubTo[self])]
                          /\ pc' = [pc EXCEPT ![self] = "pubtoprivConngt2"]
                          /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, 
                                          Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, 
                                          Kk, Ll, Mm, Nn, Oo, Pp, Qq, Rr, Ss, 
                                          Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, H2, 
                                          MaxPorts, EP1, PortMap1, EP2, 
                                          PortMap2, TableFull, EvictionReroute, 
                                          PortScanInv, ATIPInv, MaxTableSize, 
                                          hosts, FreeHosts, UsedHosts, Ports, 
                                          ExtraPorts, ExtraExtraPorts, T, 
                                          FreeIPs, PrivIPs, PubIPs, PortSpace, 
                                          UsedIPs, Connections, SendQueue, 
                                          RcvQueue, MAX, Marker1, Marker2, 
                                          CmdConnect, CmdDisconnect, 
                                          PortSpaceFull, stack, depth_, host_, 
                                          hidx_, host_idx_, pidx_, port_idx_, 
                                          depth_D, ip_, host_D, connDomain_, 
                                          cidx_, conn_, host_Con, ip_C, hidx_C, 
                                          host_idx_C, pidx_C, port_idx_C, 
                                          host_Dis, ip_Di, connDomain_D, 
                                          cidx_D, conn_D, host, ip, 
                                          connDomain_Di, cidx_Di, conn_Di, 
                                          depth_P, pkt_, ipkt_, entry_, conn_P, 
                                          hostMarker_, ip_idx_, ipidx_, ip_P, 
                                          host_P, pkt_P, ipkt_P, entry_P, 
                                          conn_Pu, hostMarker_P, ip_idx_P, 
                                          ipidx_P, ip_Pu, host_Pu, IP, 
                                          conn_PrivTo, sport_, dstAddr_, 
                                          dport_, pkt_Pr, hostMarker_Pr, 
                                          daddr_, hostidx_, hidx_P, 
                                          otherEntry_, i_, indicies_, 
                                          portDomain_, sourcePort_, destPort_, 
                                          new_sport_, conn, sport, dstAddr, 
                                          dport, pkt_Pri, hostMarker_Pri, 
                                          daddr_P, hostidx_P, hidx_Pr, 
                                          otherEntry_P, i_P, indicies_P, 
                                          portDomain_P, sourcePort_P, 
                                          destPort_P, new_sport_P, depth_Pr, 
                                          pkt_Priv, conn_Pr, hostMarker_Priv, 
                                          daddr_Pr, hostidx_Pr, hidx_Pri, 
                                          otherEntry_Pr, i_Pr, indicies_Pr, 
                                          portDomain_Pr, sourcePort_Pr, 
                                          destPort_Pr, new_sport_Pr, pkt_PrivT, 
                                          conn_Pri, hostMarker_PrivT, 
                                          daddr_Pri, hostidx_Pri, hidx_Priv, 
                                          otherEntry_Pri, i_Pri, indicies_Pri, 
                                          portDomain_Pri, sourcePort_Pri, 
                                          destPort_Pri, new_sport_Pri, depth_C, 
                                          host_C, hidx_Co, host_idx_Co, 
                                          pidx_Co, port_idx_Co, connhost, port, 
                                          host_Co, hidx_Con, host_idx, pidx, 
                                          port_idx, depth_Di, ip_D, host_Di, 
                                          connDomain, cidx, conn_Dis, depth_Pu, 
                                          pkt_Pu, ipkt_Pu, entry_Pu, conn_Pub, 
                                          hostMarker_Pu, ip_idx_Pu, ipidx_Pu, 
                                          ip_Pub, host_Pub, depth_Pri, 
                                          pkt_PrivTo, conn_Priv, 
                                          hostMarker_PrivTo, daddr_Priv, 
                                          hostidx_Priv, hidx_PrivT, 
                                          otherEntry_Priv, i_Priv, 
                                          indicies_Priv, portDomain_Priv, 
                                          sourcePort_Priv, destPort_Priv, 
                                          new_sport_Priv, good, depth_E, i_E, 
                                          j_, ip_E, host_E, indecies_, 
                                          depth_Ev, i_Ev, j_E, ip_Ev, host_Ev, 
                                          indecies_E, i_C, i_Ch, depth_Pub, 
                                          pkt_Pub, ipkt_Pub, entry_Pub, 
                                          conn_PubT, hostMarker_Pub, 
                                          ip_idx_Pub, ipidx_Pub, ip_PubT, 
                                          host_PubT, depth_Priv, pkt_PrivToP, 
                                          conn_PrivT, hostMarker_PrivToP, 
                                          daddr, hostidx, hidx, otherEntry, 
                                          i_PrivT, indicies, portDomain, 
                                          sourcePort, destPort, new_sport, 
                                          depth_PubT, pkt, ipkt, entry, 
                                          hostMarker, ip_idx, ipidx, ip_PubTo, 
                                          host_PubTo, depth, i_Eve, j, ip_Eve, 
                                          host_Eve, indecies, i, aa >>

pubtoprivConngt2(self) == /\ pc[self] = "pubtoprivConngt2"
                          /\ hostMarker' = [hostMarker EXCEPT ![self] = conn_PubTo[self][2]]
                          /\ IF hostMarker'[self] = H1
                                THEN /\ IF entry[self].host_marker = H2
                                           THEN /\ PortScanInv' = TRUE
                                           ELSE /\ TRUE
                                                /\ UNCHANGED PortScanInv
                                     /\ Marker1' = entry[self].host_marker
                                     /\ UNCHANGED Marker2
                                ELSE /\ IF entry[self].host_marker = H1
                                           THEN /\ PortScanInv' = TRUE
                                           ELSE /\ TRUE
                                                /\ UNCHANGED PortScanInv
                                     /\ Marker2' = entry[self].host_marker
                                     /\ UNCHANGED Marker1
                          /\ pc' = [pc EXCEPT ![self] = "pubtoprivRet"]
                          /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, 
                                          Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, 
                                          Kk, Ll, Mm, Nn, Oo, Pp, Qq, Rr, Ss, 
                                          Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, H2, 
                                          MaxPorts, EP1, PortMap1, EP2, 
                                          PortMap2, TableFull, EvictionReroute, 
                                          ATIPInv, MaxTableSize, hosts, 
                                          FreeHosts, UsedHosts, Ports, 
                                          ExtraPorts, ExtraExtraPorts, T, 
                                          FreeIPs, PrivIPs, PubIPs, PortSpace, 
                                          UsedIPs, Connections, SendQueue, 
                                          RcvQueue, MAX, CmdConnect, 
                                          CmdDisconnect, PortSpaceFull, stack, 
                                          depth_, host_, hidx_, host_idx_, 
                                          pidx_, port_idx_, depth_D, ip_, 
                                          host_D, connDomain_, cidx_, conn_, 
                                          host_Con, ip_C, hidx_C, host_idx_C, 
                                          pidx_C, port_idx_C, host_Dis, ip_Di, 
                                          connDomain_D, cidx_D, conn_D, host, 
                                          ip, connDomain_Di, cidx_Di, conn_Di, 
                                          depth_P, pkt_, ipkt_, entry_, conn_P, 
                                          hostMarker_, ip_idx_, ipidx_, ip_P, 
                                          host_P, pkt_P, ipkt_P, entry_P, 
                                          conn_Pu, hostMarker_P, ip_idx_P, 
                                          ipidx_P, ip_Pu, host_Pu, IP, 
                                          conn_PrivTo, sport_, dstAddr_, 
                                          dport_, pkt_Pr, hostMarker_Pr, 
                                          daddr_, hostidx_, hidx_P, 
                                          otherEntry_, i_, indicies_, 
                                          portDomain_, sourcePort_, destPort_, 
                                          new_sport_, conn, sport, dstAddr, 
                                          dport, pkt_Pri, hostMarker_Pri, 
                                          daddr_P, hostidx_P, hidx_Pr, 
                                          otherEntry_P, i_P, indicies_P, 
                                          portDomain_P, sourcePort_P, 
                                          destPort_P, new_sport_P, depth_Pr, 
                                          pkt_Priv, conn_Pr, hostMarker_Priv, 
                                          daddr_Pr, hostidx_Pr, hidx_Pri, 
                                          otherEntry_Pr, i_Pr, indicies_Pr, 
                                          portDomain_Pr, sourcePort_Pr, 
                                          destPort_Pr, new_sport_Pr, pkt_PrivT, 
                                          conn_Pri, hostMarker_PrivT, 
                                          daddr_Pri, hostidx_Pri, hidx_Priv, 
                                          otherEntry_Pri, i_Pri, indicies_Pri, 
                                          portDomain_Pri, sourcePort_Pri, 
                                          destPort_Pri, new_sport_Pri, depth_C, 
                                          host_C, hidx_Co, host_idx_Co, 
                                          pidx_Co, port_idx_Co, connhost, port, 
                                          host_Co, hidx_Con, host_idx, pidx, 
                                          port_idx, depth_Di, ip_D, host_Di, 
                                          connDomain, cidx, conn_Dis, depth_Pu, 
                                          pkt_Pu, ipkt_Pu, entry_Pu, conn_Pub, 
                                          hostMarker_Pu, ip_idx_Pu, ipidx_Pu, 
                                          ip_Pub, host_Pub, depth_Pri, 
                                          pkt_PrivTo, conn_Priv, 
                                          hostMarker_PrivTo, daddr_Priv, 
                                          hostidx_Priv, hidx_PrivT, 
                                          otherEntry_Priv, i_Priv, 
                                          indicies_Priv, portDomain_Priv, 
                                          sourcePort_Priv, destPort_Priv, 
                                          new_sport_Priv, good, depth_E, i_E, 
                                          j_, ip_E, host_E, indecies_, 
                                          depth_Ev, i_Ev, j_E, ip_Ev, host_Ev, 
                                          indecies_E, i_C, i_Ch, depth_Pub, 
                                          pkt_Pub, ipkt_Pub, entry_Pub, 
                                          conn_PubT, hostMarker_Pub, 
                                          ip_idx_Pub, ipidx_Pub, ip_PubT, 
                                          host_PubT, depth_Priv, pkt_PrivToP, 
                                          conn_PrivT, hostMarker_PrivToP, 
                                          daddr, hostidx, hidx, otherEntry, 
                                          i_PrivT, indicies, portDomain, 
                                          sourcePort, destPort, new_sport, 
                                          depth_PubT, pkt, ipkt, entry, 
                                          conn_PubTo, ip_idx, ipidx, ip_PubTo, 
                                          host_PubTo, depth, i_Eve, j, ip_Eve, 
                                          host_Eve, indecies, i, aa >>

pubtoprivRet(self) == /\ pc[self] = "pubtoprivRet"
                      /\ pc' = [pc EXCEPT ![self] = Head(stack[self]).pc]
                      /\ pkt' = [pkt EXCEPT ![self] = Head(stack[self]).pkt]
                      /\ ipkt' = [ipkt EXCEPT ![self] = Head(stack[self]).ipkt]
                      /\ entry' = [entry EXCEPT ![self] = Head(stack[self]).entry]
                      /\ conn_PubTo' = [conn_PubTo EXCEPT ![self] = Head(stack[self]).conn_PubTo]
                      /\ hostMarker' = [hostMarker EXCEPT ![self] = Head(stack[self]).hostMarker]
                      /\ ip_idx' = [ip_idx EXCEPT ![self] = Head(stack[self]).ip_idx]
                      /\ ipidx' = [ipidx EXCEPT ![self] = Head(stack[self]).ipidx]
                      /\ ip_PubTo' = [ip_PubTo EXCEPT ![self] = Head(stack[self]).ip_PubTo]
                      /\ host_PubTo' = [host_PubTo EXCEPT ![self] = Head(stack[self]).host_PubTo]
                      /\ depth_PubT' = [depth_PubT EXCEPT ![self] = Head(stack[self]).depth_PubT]
                      /\ stack' = [stack EXCEPT ![self] = Tail(stack[self])]
                      /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, Bb, 
                                      Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, Ll, 
                                      Mm, Nn, Oo, Pp, Qq, Rr, Ss, Tt, Uu, Vv, 
                                      Ww, Xx, Yy, Zz, H1, H2, MaxPorts, EP1, 
                                      PortMap1, EP2, PortMap2, TableFull, 
                                      EvictionReroute, PortScanInv, ATIPInv, 
                                      MaxTableSize, hosts, FreeHosts, 
                                      UsedHosts, Ports, ExtraPorts, 
                                      ExtraExtraPorts, T, FreeIPs, PrivIPs, 
                                      PubIPs, PortSpace, UsedIPs, Connections, 
                                      SendQueue, RcvQueue, MAX, Marker1, 
                                      Marker2, CmdConnect, CmdDisconnect, 
                                      PortSpaceFull, depth_, host_, hidx_, 
                                      host_idx_, pidx_, port_idx_, depth_D, 
                                      ip_, host_D, connDomain_, cidx_, conn_, 
                                      host_Con, ip_C, hidx_C, host_idx_C, 
                                      pidx_C, port_idx_C, host_Dis, ip_Di, 
                                      connDomain_D, cidx_D, conn_D, host, ip, 
                                      connDomain_Di, cidx_Di, conn_Di, depth_P, 
                                      pkt_, ipkt_, entry_, conn_P, hostMarker_, 
                                      ip_idx_, ipidx_, ip_P, host_P, pkt_P, 
                                      ipkt_P, entry_P, conn_Pu, hostMarker_P, 
                                      ip_idx_P, ipidx_P, ip_Pu, host_Pu, IP, 
                                      conn_PrivTo, sport_, dstAddr_, dport_, 
                                      pkt_Pr, hostMarker_Pr, daddr_, hostidx_, 
                                      hidx_P, otherEntry_, i_, indicies_, 
                                      portDomain_, sourcePort_, destPort_, 
                                      new_sport_, conn, sport, dstAddr, dport, 
                                      pkt_Pri, hostMarker_Pri, daddr_P, 
                                      hostidx_P, hidx_Pr, otherEntry_P, i_P, 
                                      indicies_P, portDomain_P, sourcePort_P, 
                                      destPort_P, new_sport_P, depth_Pr, 
                                      pkt_Priv, conn_Pr, hostMarker_Priv, 
                                      daddr_Pr, hostidx_Pr, hidx_Pri, 
                                      otherEntry_Pr, i_Pr, indicies_Pr, 
                                      portDomain_Pr, sourcePort_Pr, 
                                      destPort_Pr, new_sport_Pr, pkt_PrivT, 
                                      conn_Pri, hostMarker_PrivT, daddr_Pri, 
                                      hostidx_Pri, hidx_Priv, otherEntry_Pri, 
                                      i_Pri, indicies_Pri, portDomain_Pri, 
                                      sourcePort_Pri, destPort_Pri, 
                                      new_sport_Pri, depth_C, host_C, hidx_Co, 
                                      host_idx_Co, pidx_Co, port_idx_Co, 
                                      connhost, port, host_Co, hidx_Con, 
                                      host_idx, pidx, port_idx, depth_Di, ip_D, 
                                      host_Di, connDomain, cidx, conn_Dis, 
                                      depth_Pu, pkt_Pu, ipkt_Pu, entry_Pu, 
                                      conn_Pub, hostMarker_Pu, ip_idx_Pu, 
                                      ipidx_Pu, ip_Pub, host_Pub, depth_Pri, 
                                      pkt_PrivTo, conn_Priv, hostMarker_PrivTo, 
                                      daddr_Priv, hostidx_Priv, hidx_PrivT, 
                                      otherEntry_Priv, i_Priv, indicies_Priv, 
                                      portDomain_Priv, sourcePort_Priv, 
                                      destPort_Priv, new_sport_Priv, good, 
                                      depth_E, i_E, j_, ip_E, host_E, 
                                      indecies_, depth_Ev, i_Ev, j_E, ip_Ev, 
                                      host_Ev, indecies_E, i_C, i_Ch, 
                                      depth_Pub, pkt_Pub, ipkt_Pub, entry_Pub, 
                                      conn_PubT, hostMarker_Pub, ip_idx_Pub, 
                                      ipidx_Pub, ip_PubT, host_PubT, 
                                      depth_Priv, pkt_PrivToP, conn_PrivT, 
                                      hostMarker_PrivToP, daddr, hostidx, hidx, 
                                      otherEntry, i_PrivT, indicies, 
                                      portDomain, sourcePort, destPort, 
                                      new_sport, depth, i_Eve, j, ip_Eve, 
                                      host_Eve, indecies, i, aa >>

PubToPrivExit(self) == pubtoprivStart(self) \/ pubtoprivIf(self)
                          \/ pubtoPrivElse(self) \/ pubtoprivConngt1(self)
                          \/ pubtoprivConngt2(self) \/ pubtoprivRet(self)

evtSeqStart(self) == /\ pc[self] = "evtSeqStart"
                     /\ IF depth[self] <= 0
                           THEN /\ pc' = [pc EXCEPT ![self] = "evtSeqD0"]
                                /\ UNCHANGED << stack, depth_D, ip_, host_D, 
                                                connDomain_, cidx_, conn_, 
                                                depth_P, pkt_, ipkt_, entry_, 
                                                conn_P, hostMarker_, ip_idx_, 
                                                ipidx_, ip_P, host_P, depth_C, 
                                                host_C, hidx_Co, host_idx_Co, 
                                                pidx_Co, port_idx_Co, 
                                                depth_Priv, pkt_PrivToP, 
                                                conn_PrivT, hostMarker_PrivToP, 
                                                daddr, hostidx, hidx, 
                                                otherEntry, i_PrivT, indicies, 
                                                portDomain, sourcePort, 
                                                destPort, new_sport >>
                           ELSE /\ \/ /\ IF Len(FreeIPs) > 0
                                            THEN /\ /\ depth_C' = [depth_C EXCEPT ![self] = depth[self] - 1]
                                                    /\ stack' = [stack EXCEPT ![self] = << [ procedure |->  "Connect",
                                                                                             pc        |->  "evtSeqRet",
                                                                                             host_C    |->  host_C[self],
                                                                                             hidx_Co   |->  hidx_Co[self],
                                                                                             host_idx_Co |->  host_idx_Co[self],
                                                                                             pidx_Co   |->  pidx_Co[self],
                                                                                             port_idx_Co |->  port_idx_Co[self],
                                                                                             depth_C   |->  depth_C[self] ] >>
                                                                                         \o stack[self]]
                                                 /\ host_C' = [host_C EXCEPT ![self] = defaultInitValue]
                                                 /\ hidx_Co' = [hidx_Co EXCEPT ![self] = defaultInitValue]
                                                 /\ host_idx_Co' = [host_idx_Co EXCEPT ![self] = defaultInitValue]
                                                 /\ pidx_Co' = [pidx_Co EXCEPT ![self] = defaultInitValue]
                                                 /\ port_idx_Co' = [port_idx_Co EXCEPT ![self] = defaultInitValue]
                                                 /\ pc' = [pc EXCEPT ![self] = "connectStart"]
                                            ELSE /\ pc' = [pc EXCEPT ![self] = "evtSeqRet"]
                                                 /\ UNCHANGED << stack, 
                                                                 depth_C, 
                                                                 host_C, 
                                                                 hidx_Co, 
                                                                 host_idx_Co, 
                                                                 pidx_Co, 
                                                                 port_idx_Co >>
                                      /\ UNCHANGED <<depth_D, ip_, host_D, connDomain_, cidx_, conn_, depth_P, pkt_, ipkt_, entry_, conn_P, hostMarker_, ip_idx_, ipidx_, ip_P, host_P, depth_Priv, pkt_PrivToP, conn_PrivT, hostMarker_PrivToP, daddr, hostidx, hidx, otherEntry, i_PrivT, indicies, portDomain, sourcePort, destPort, new_sport>>
                                   \/ /\ IF Len (Connections) > 0
                                            THEN /\ /\ depth_D' = [depth_D EXCEPT ![self] = depth[self] - 1]
                                                    /\ stack' = [stack EXCEPT ![self] = << [ procedure |->  "DisconnectVuln",
                                                                                             pc        |->  "evtSeqRet",
                                                                                             ip_       |->  ip_[self],
                                                                                             host_D    |->  host_D[self],
                                                                                             connDomain_ |->  connDomain_[self],
                                                                                             cidx_     |->  cidx_[self],
                                                                                             conn_     |->  conn_[self],
                                                                                             depth_D   |->  depth_D[self] ] >>
                                                                                         \o stack[self]]
                                                 /\ ip_' = [ip_ EXCEPT ![self] = defaultInitValue]
                                                 /\ host_D' = [host_D EXCEPT ![self] = defaultInitValue]
                                                 /\ connDomain_' = [connDomain_ EXCEPT ![self] = defaultInitValue]
                                                 /\ cidx_' = [cidx_ EXCEPT ![self] = defaultInitValue]
                                                 /\ conn_' = [conn_ EXCEPT ![self] = defaultInitValue]
                                                 /\ pc' = [pc EXCEPT ![self] = "disconnectVEvtSV"]
                                            ELSE /\ pc' = [pc EXCEPT ![self] = "evtSeqRet"]
                                                 /\ UNCHANGED << stack, 
                                                                 depth_D, ip_, 
                                                                 host_D, 
                                                                 connDomain_, 
                                                                 cidx_, conn_ >>
                                      /\ UNCHANGED <<depth_P, pkt_, ipkt_, entry_, conn_P, hostMarker_, ip_idx_, ipidx_, ip_P, host_P, depth_C, host_C, hidx_Co, host_idx_Co, pidx_Co, port_idx_Co, depth_Priv, pkt_PrivToP, conn_PrivT, hostMarker_PrivToP, daddr, hostidx, hidx, otherEntry, i_PrivT, indicies, portDomain, sourcePort, destPort, new_sport>>
                                   \/ /\ IF Len(Connections) > 0
                                            THEN /\ /\ depth_Priv' = [depth_Priv EXCEPT ![self] = depth[self] - 1]
                                                    /\ stack' = [stack EXCEPT ![self] = << [ procedure |->  "PrivToPubExit",
                                                                                             pc        |->  "evtSeqRet",
                                                                                             pkt_PrivToP |->  pkt_PrivToP[self],
                                                                                             conn_PrivT |->  conn_PrivT[self],
                                                                                             hostMarker_PrivToP |->  hostMarker_PrivToP[self],
                                                                                             daddr     |->  daddr[self],
                                                                                             hostidx   |->  hostidx[self],
                                                                                             hidx      |->  hidx[self],
                                                                                             otherEntry |->  otherEntry[self],
                                                                                             i_PrivT   |->  i_PrivT[self],
                                                                                             indicies  |->  indicies[self],
                                                                                             portDomain |->  portDomain[self],
                                                                                             sourcePort |->  sourcePort[self],
                                                                                             destPort  |->  destPort[self],
                                                                                             new_sport |->  new_sport[self],
                                                                                             depth_Priv |->  depth_Priv[self] ] >>
                                                                                         \o stack[self]]
                                                 /\ pkt_PrivToP' = [pkt_PrivToP EXCEPT ![self] = defaultInitValue]
                                                 /\ conn_PrivT' = [conn_PrivT EXCEPT ![self] = defaultInitValue]
                                                 /\ hostMarker_PrivToP' = [hostMarker_PrivToP EXCEPT ![self] = defaultInitValue]
                                                 /\ daddr' = [daddr EXCEPT ![self] = defaultInitValue]
                                                 /\ hostidx' = [hostidx EXCEPT ![self] = defaultInitValue]
                                                 /\ hidx' = [hidx EXCEPT ![self] = defaultInitValue]
                                                 /\ otherEntry' = [otherEntry EXCEPT ![self] = defaultInitValue]
                                                 /\ i_PrivT' = [i_PrivT EXCEPT ![self] = defaultInitValue]
                                                 /\ indicies' = [indicies EXCEPT ![self] = defaultInitValue]
                                                 /\ portDomain' = [portDomain EXCEPT ![self] = defaultInitValue]
                                                 /\ sourcePort' = [sourcePort EXCEPT ![self] = defaultInitValue]
                                                 /\ destPort' = [destPort EXCEPT ![self] = defaultInitValue]
                                                 /\ new_sport' = [new_sport EXCEPT ![self] = defaultInitValue]
                                                 /\ pc' = [pc EXCEPT ![self] = "privtopubV3"]
                                            ELSE /\ pc' = [pc EXCEPT ![self] = "evtSeqRet"]
                                                 /\ UNCHANGED << stack, 
                                                                 depth_Priv, 
                                                                 pkt_PrivToP, 
                                                                 conn_PrivT, 
                                                                 hostMarker_PrivToP, 
                                                                 daddr, 
                                                                 hostidx, hidx, 
                                                                 otherEntry, 
                                                                 i_PrivT, 
                                                                 indicies, 
                                                                 portDomain, 
                                                                 sourcePort, 
                                                                 destPort, 
                                                                 new_sport >>
                                      /\ UNCHANGED <<depth_D, ip_, host_D, connDomain_, cidx_, conn_, depth_P, pkt_, ipkt_, entry_, conn_P, hostMarker_, ip_idx_, ipidx_, ip_P, host_P, depth_C, host_C, hidx_Co, host_idx_Co, pidx_Co, port_idx_Co>>
                                   \/ /\ IF Len(SendQueue) > 0
                                            THEN /\ /\ depth_P' = [depth_P EXCEPT ![self] = depth[self] - 1]
                                                    /\ stack' = [stack EXCEPT ![self] = << [ procedure |->  "PubToPrivVuln",
                                                                                             pc        |->  "evtSeqRet",
                                                                                             pkt_      |->  pkt_[self],
                                                                                             ipkt_     |->  ipkt_[self],
                                                                                             entry_    |->  entry_[self],
                                                                                             conn_P    |->  conn_P[self],
                                                                                             hostMarker_ |->  hostMarker_[self],
                                                                                             ip_idx_   |->  ip_idx_[self],
                                                                                             ipidx_    |->  ipidx_[self],
                                                                                             ip_P      |->  ip_P[self],
                                                                                             host_P    |->  host_P[self],
                                                                                             depth_P   |->  depth_P[self] ] >>
                                                                                         \o stack[self]]
                                                 /\ pkt_' = [pkt_ EXCEPT ![self] = defaultInitValue]
                                                 /\ ipkt_' = [ipkt_ EXCEPT ![self] = defaultInitValue]
                                                 /\ entry_' = [entry_ EXCEPT ![self] = defaultInitValue]
                                                 /\ conn_P' = [conn_P EXCEPT ![self] = defaultInitValue]
                                                 /\ hostMarker_' = [hostMarker_ EXCEPT ![self] = defaultInitValue]
                                                 /\ ip_idx_' = [ip_idx_ EXCEPT ![self] = defaultInitValue]
                                                 /\ ipidx_' = [ipidx_ EXCEPT ![self] = defaultInitValue]
                                                 /\ ip_P' = [ip_P EXCEPT ![self] = defaultInitValue]
                                                 /\ host_P' = [host_P EXCEPT ![self] = defaultInitValue]
                                                 /\ pc' = [pc EXCEPT ![self] = "pubtoprivVEvt3_"]
                                            ELSE /\ pc' = [pc EXCEPT ![self] = "evtSeqRet"]
                                                 /\ UNCHANGED << stack, 
                                                                 depth_P, pkt_, 
                                                                 ipkt_, entry_, 
                                                                 conn_P, 
                                                                 hostMarker_, 
                                                                 ip_idx_, 
                                                                 ipidx_, ip_P, 
                                                                 host_P >>
                                      /\ UNCHANGED <<depth_D, ip_, host_D, connDomain_, cidx_, conn_, depth_C, host_C, hidx_Co, host_idx_Co, pidx_Co, port_idx_Co, depth_Priv, pkt_PrivToP, conn_PrivT, hostMarker_PrivToP, daddr, hostidx, hidx, otherEntry, i_PrivT, indicies, portDomain, sourcePort, destPort, new_sport>>
                     /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, Bb, 
                                     Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, Ll, 
                                     Mm, Nn, Oo, Pp, Qq, Rr, Ss, Tt, Uu, Vv, 
                                     Ww, Xx, Yy, Zz, H1, H2, MaxPorts, EP1, 
                                     PortMap1, EP2, PortMap2, TableFull, 
                                     EvictionReroute, PortScanInv, ATIPInv, 
                                     MaxTableSize, hosts, FreeHosts, UsedHosts, 
                                     Ports, ExtraPorts, ExtraExtraPorts, T, 
                                     FreeIPs, PrivIPs, PubIPs, PortSpace, 
                                     UsedIPs, Connections, SendQueue, RcvQueue, 
                                     MAX, Marker1, Marker2, CmdConnect, 
                                     CmdDisconnect, PortSpaceFull, depth_, 
                                     host_, hidx_, host_idx_, pidx_, port_idx_, 
                                     host_Con, ip_C, hidx_C, host_idx_C, 
                                     pidx_C, port_idx_C, host_Dis, ip_Di, 
                                     connDomain_D, cidx_D, conn_D, host, ip, 
                                     connDomain_Di, cidx_Di, conn_Di, pkt_P, 
                                     ipkt_P, entry_P, conn_Pu, hostMarker_P, 
                                     ip_idx_P, ipidx_P, ip_Pu, host_Pu, IP, 
                                     conn_PrivTo, sport_, dstAddr_, dport_, 
                                     pkt_Pr, hostMarker_Pr, daddr_, hostidx_, 
                                     hidx_P, otherEntry_, i_, indicies_, 
                                     portDomain_, sourcePort_, destPort_, 
                                     new_sport_, conn, sport, dstAddr, dport, 
                                     pkt_Pri, hostMarker_Pri, daddr_P, 
                                     hostidx_P, hidx_Pr, otherEntry_P, i_P, 
                                     indicies_P, portDomain_P, sourcePort_P, 
                                     destPort_P, new_sport_P, depth_Pr, 
                                     pkt_Priv, conn_Pr, hostMarker_Priv, 
                                     daddr_Pr, hostidx_Pr, hidx_Pri, 
                                     otherEntry_Pr, i_Pr, indicies_Pr, 
                                     portDomain_Pr, sourcePort_Pr, destPort_Pr, 
                                     new_sport_Pr, pkt_PrivT, conn_Pri, 
                                     hostMarker_PrivT, daddr_Pri, hostidx_Pri, 
                                     hidx_Priv, otherEntry_Pri, i_Pri, 
                                     indicies_Pri, portDomain_Pri, 
                                     sourcePort_Pri, destPort_Pri, 
                                     new_sport_Pri, connhost, port, host_Co, 
                                     hidx_Con, host_idx, pidx, port_idx, 
                                     depth_Di, ip_D, host_Di, connDomain, cidx, 
                                     conn_Dis, depth_Pu, pkt_Pu, ipkt_Pu, 
                                     entry_Pu, conn_Pub, hostMarker_Pu, 
                                     ip_idx_Pu, ipidx_Pu, ip_Pub, host_Pub, 
                                     depth_Pri, pkt_PrivTo, conn_Priv, 
                                     hostMarker_PrivTo, daddr_Priv, 
                                     hostidx_Priv, hidx_PrivT, otherEntry_Priv, 
                                     i_Priv, indicies_Priv, portDomain_Priv, 
                                     sourcePort_Priv, destPort_Priv, 
                                     new_sport_Priv, good, depth_E, i_E, j_, 
                                     ip_E, host_E, indecies_, depth_Ev, i_Ev, 
                                     j_E, ip_Ev, host_Ev, indecies_E, i_C, 
                                     i_Ch, depth_Pub, pkt_Pub, ipkt_Pub, 
                                     entry_Pub, conn_PubT, hostMarker_Pub, 
                                     ip_idx_Pub, ipidx_Pub, ip_PubT, host_PubT, 
                                     depth_PubT, pkt, ipkt, entry, conn_PubTo, 
                                     hostMarker, ip_idx, ipidx, ip_PubTo, 
                                     host_PubTo, depth, i_Eve, j, ip_Eve, 
                                     host_Eve, indecies, i, aa >>

evtSeqD0(self) == /\ pc[self] = "evtSeqD0"
                  /\ pc' = [pc EXCEPT ![self] = Head(stack[self]).pc]
                  /\ i_Eve' = [i_Eve EXCEPT ![self] = Head(stack[self]).i_Eve]
                  /\ j' = [j EXCEPT ![self] = Head(stack[self]).j]
                  /\ ip_Eve' = [ip_Eve EXCEPT ![self] = Head(stack[self]).ip_Eve]
                  /\ host_Eve' = [host_Eve EXCEPT ![self] = Head(stack[self]).host_Eve]
                  /\ indecies' = [indecies EXCEPT ![self] = Head(stack[self]).indecies]
                  /\ depth' = [depth EXCEPT ![self] = Head(stack[self]).depth]
                  /\ stack' = [stack EXCEPT ![self] = Tail(stack[self])]
                  /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, Bb, Cc, 
                                  Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, Ll, Mm, Nn, 
                                  Oo, Pp, Qq, Rr, Ss, Tt, Uu, Vv, Ww, Xx, Yy, 
                                  Zz, H1, H2, MaxPorts, EP1, PortMap1, EP2, 
                                  PortMap2, TableFull, EvictionReroute, 
                                  PortScanInv, ATIPInv, MaxTableSize, hosts, 
                                  FreeHosts, UsedHosts, Ports, ExtraPorts, 
                                  ExtraExtraPorts, T, FreeIPs, PrivIPs, PubIPs, 
                                  PortSpace, UsedIPs, Connections, SendQueue, 
                                  RcvQueue, MAX, Marker1, Marker2, CmdConnect, 
                                  CmdDisconnect, PortSpaceFull, depth_, host_, 
                                  hidx_, host_idx_, pidx_, port_idx_, depth_D, 
                                  ip_, host_D, connDomain_, cidx_, conn_, 
                                  host_Con, ip_C, hidx_C, host_idx_C, pidx_C, 
                                  port_idx_C, host_Dis, ip_Di, connDomain_D, 
                                  cidx_D, conn_D, host, ip, connDomain_Di, 
                                  cidx_Di, conn_Di, depth_P, pkt_, ipkt_, 
                                  entry_, conn_P, hostMarker_, ip_idx_, ipidx_, 
                                  ip_P, host_P, pkt_P, ipkt_P, entry_P, 
                                  conn_Pu, hostMarker_P, ip_idx_P, ipidx_P, 
                                  ip_Pu, host_Pu, IP, conn_PrivTo, sport_, 
                                  dstAddr_, dport_, pkt_Pr, hostMarker_Pr, 
                                  daddr_, hostidx_, hidx_P, otherEntry_, i_, 
                                  indicies_, portDomain_, sourcePort_, 
                                  destPort_, new_sport_, conn, sport, dstAddr, 
                                  dport, pkt_Pri, hostMarker_Pri, daddr_P, 
                                  hostidx_P, hidx_Pr, otherEntry_P, i_P, 
                                  indicies_P, portDomain_P, sourcePort_P, 
                                  destPort_P, new_sport_P, depth_Pr, pkt_Priv, 
                                  conn_Pr, hostMarker_Priv, daddr_Pr, 
                                  hostidx_Pr, hidx_Pri, otherEntry_Pr, i_Pr, 
                                  indicies_Pr, portDomain_Pr, sourcePort_Pr, 
                                  destPort_Pr, new_sport_Pr, pkt_PrivT, 
                                  conn_Pri, hostMarker_PrivT, daddr_Pri, 
                                  hostidx_Pri, hidx_Priv, otherEntry_Pri, 
                                  i_Pri, indicies_Pri, portDomain_Pri, 
                                  sourcePort_Pri, destPort_Pri, new_sport_Pri, 
                                  depth_C, host_C, hidx_Co, host_idx_Co, 
                                  pidx_Co, port_idx_Co, connhost, port, 
                                  host_Co, hidx_Con, host_idx, pidx, port_idx, 
                                  depth_Di, ip_D, host_Di, connDomain, cidx, 
                                  conn_Dis, depth_Pu, pkt_Pu, ipkt_Pu, 
                                  entry_Pu, conn_Pub, hostMarker_Pu, ip_idx_Pu, 
                                  ipidx_Pu, ip_Pub, host_Pub, depth_Pri, 
                                  pkt_PrivTo, conn_Priv, hostMarker_PrivTo, 
                                  daddr_Priv, hostidx_Priv, hidx_PrivT, 
                                  otherEntry_Priv, i_Priv, indicies_Priv, 
                                  portDomain_Priv, sourcePort_Priv, 
                                  destPort_Priv, new_sport_Priv, good, depth_E, 
                                  i_E, j_, ip_E, host_E, indecies_, depth_Ev, 
                                  i_Ev, j_E, ip_Ev, host_Ev, indecies_E, i_C, 
                                  i_Ch, depth_Pub, pkt_Pub, ipkt_Pub, 
                                  entry_Pub, conn_PubT, hostMarker_Pub, 
                                  ip_idx_Pub, ipidx_Pub, ip_PubT, host_PubT, 
                                  depth_Priv, pkt_PrivToP, conn_PrivT, 
                                  hostMarker_PrivToP, daddr, hostidx, hidx, 
                                  otherEntry, i_PrivT, indicies, portDomain, 
                                  sourcePort, destPort, new_sport, depth_PubT, 
                                  pkt, ipkt, entry, conn_PubTo, hostMarker, 
                                  ip_idx, ipidx, ip_PubTo, host_PubTo, i, aa >>

evtSeqRet(self) == /\ pc[self] = "evtSeqRet"
                   /\ pc' = [pc EXCEPT ![self] = Head(stack[self]).pc]
                   /\ i_Eve' = [i_Eve EXCEPT ![self] = Head(stack[self]).i_Eve]
                   /\ j' = [j EXCEPT ![self] = Head(stack[self]).j]
                   /\ ip_Eve' = [ip_Eve EXCEPT ![self] = Head(stack[self]).ip_Eve]
                   /\ host_Eve' = [host_Eve EXCEPT ![self] = Head(stack[self]).host_Eve]
                   /\ indecies' = [indecies EXCEPT ![self] = Head(stack[self]).indecies]
                   /\ depth' = [depth EXCEPT ![self] = Head(stack[self]).depth]
                   /\ stack' = [stack EXCEPT ![self] = Tail(stack[self])]
                   /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, Bb, 
                                   Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, Ll, Mm, 
                                   Nn, Oo, Pp, Qq, Rr, Ss, Tt, Uu, Vv, Ww, Xx, 
                                   Yy, Zz, H1, H2, MaxPorts, EP1, PortMap1, 
                                   EP2, PortMap2, TableFull, EvictionReroute, 
                                   PortScanInv, ATIPInv, MaxTableSize, hosts, 
                                   FreeHosts, UsedHosts, Ports, ExtraPorts, 
                                   ExtraExtraPorts, T, FreeIPs, PrivIPs, 
                                   PubIPs, PortSpace, UsedIPs, Connections, 
                                   SendQueue, RcvQueue, MAX, Marker1, Marker2, 
                                   CmdConnect, CmdDisconnect, PortSpaceFull, 
                                   depth_, host_, hidx_, host_idx_, pidx_, 
                                   port_idx_, depth_D, ip_, host_D, 
                                   connDomain_, cidx_, conn_, host_Con, ip_C, 
                                   hidx_C, host_idx_C, pidx_C, port_idx_C, 
                                   host_Dis, ip_Di, connDomain_D, cidx_D, 
                                   conn_D, host, ip, connDomain_Di, cidx_Di, 
                                   conn_Di, depth_P, pkt_, ipkt_, entry_, 
                                   conn_P, hostMarker_, ip_idx_, ipidx_, ip_P, 
                                   host_P, pkt_P, ipkt_P, entry_P, conn_Pu, 
                                   hostMarker_P, ip_idx_P, ipidx_P, ip_Pu, 
                                   host_Pu, IP, conn_PrivTo, sport_, dstAddr_, 
                                   dport_, pkt_Pr, hostMarker_Pr, daddr_, 
                                   hostidx_, hidx_P, otherEntry_, i_, 
                                   indicies_, portDomain_, sourcePort_, 
                                   destPort_, new_sport_, conn, sport, dstAddr, 
                                   dport, pkt_Pri, hostMarker_Pri, daddr_P, 
                                   hostidx_P, hidx_Pr, otherEntry_P, i_P, 
                                   indicies_P, portDomain_P, sourcePort_P, 
                                   destPort_P, new_sport_P, depth_Pr, pkt_Priv, 
                                   conn_Pr, hostMarker_Priv, daddr_Pr, 
                                   hostidx_Pr, hidx_Pri, otherEntry_Pr, i_Pr, 
                                   indicies_Pr, portDomain_Pr, sourcePort_Pr, 
                                   destPort_Pr, new_sport_Pr, pkt_PrivT, 
                                   conn_Pri, hostMarker_PrivT, daddr_Pri, 
                                   hostidx_Pri, hidx_Priv, otherEntry_Pri, 
                                   i_Pri, indicies_Pri, portDomain_Pri, 
                                   sourcePort_Pri, destPort_Pri, new_sport_Pri, 
                                   depth_C, host_C, hidx_Co, host_idx_Co, 
                                   pidx_Co, port_idx_Co, connhost, port, 
                                   host_Co, hidx_Con, host_idx, pidx, port_idx, 
                                   depth_Di, ip_D, host_Di, connDomain, cidx, 
                                   conn_Dis, depth_Pu, pkt_Pu, ipkt_Pu, 
                                   entry_Pu, conn_Pub, hostMarker_Pu, 
                                   ip_idx_Pu, ipidx_Pu, ip_Pub, host_Pub, 
                                   depth_Pri, pkt_PrivTo, conn_Priv, 
                                   hostMarker_PrivTo, daddr_Priv, hostidx_Priv, 
                                   hidx_PrivT, otherEntry_Priv, i_Priv, 
                                   indicies_Priv, portDomain_Priv, 
                                   sourcePort_Priv, destPort_Priv, 
                                   new_sport_Priv, good, depth_E, i_E, j_, 
                                   ip_E, host_E, indecies_, depth_Ev, i_Ev, 
                                   j_E, ip_Ev, host_Ev, indecies_E, i_C, i_Ch, 
                                   depth_Pub, pkt_Pub, ipkt_Pub, entry_Pub, 
                                   conn_PubT, hostMarker_Pub, ip_idx_Pub, 
                                   ipidx_Pub, ip_PubT, host_PubT, depth_Priv, 
                                   pkt_PrivToP, conn_PrivT, hostMarker_PrivToP, 
                                   daddr, hostidx, hidx, otherEntry, i_PrivT, 
                                   indicies, portDomain, sourcePort, destPort, 
                                   new_sport, depth_PubT, pkt, ipkt, entry, 
                                   conn_PubTo, hostMarker, ip_idx, ipidx, 
                                   ip_PubTo, host_PubTo, i, aa >>

EventSequenceATIP(self) == evtSeqStart(self) \/ evtSeqD0(self)
                              \/ evtSeqRet(self)

checkModelStart(self) == /\ pc[self] = "checkModelStart"
                         /\ i' = [i EXCEPT ![self] = 0]
                         /\ pc' = [pc EXCEPT ![self] = "checkModelWhile"]
                         /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, 
                                         Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, 
                                         Kk, Ll, Mm, Nn, Oo, Pp, Qq, Rr, Ss, 
                                         Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, H2, 
                                         MaxPorts, EP1, PortMap1, EP2, 
                                         PortMap2, TableFull, EvictionReroute, 
                                         PortScanInv, ATIPInv, MaxTableSize, 
                                         hosts, FreeHosts, UsedHosts, Ports, 
                                         ExtraPorts, ExtraExtraPorts, T, 
                                         FreeIPs, PrivIPs, PubIPs, PortSpace, 
                                         UsedIPs, Connections, SendQueue, 
                                         RcvQueue, MAX, Marker1, Marker2, 
                                         CmdConnect, CmdDisconnect, 
                                         PortSpaceFull, stack, depth_, host_, 
                                         hidx_, host_idx_, pidx_, port_idx_, 
                                         depth_D, ip_, host_D, connDomain_, 
                                         cidx_, conn_, host_Con, ip_C, hidx_C, 
                                         host_idx_C, pidx_C, port_idx_C, 
                                         host_Dis, ip_Di, connDomain_D, cidx_D, 
                                         conn_D, host, ip, connDomain_Di, 
                                         cidx_Di, conn_Di, depth_P, pkt_, 
                                         ipkt_, entry_, conn_P, hostMarker_, 
                                         ip_idx_, ipidx_, ip_P, host_P, pkt_P, 
                                         ipkt_P, entry_P, conn_Pu, 
                                         hostMarker_P, ip_idx_P, ipidx_P, 
                                         ip_Pu, host_Pu, IP, conn_PrivTo, 
                                         sport_, dstAddr_, dport_, pkt_Pr, 
                                         hostMarker_Pr, daddr_, hostidx_, 
                                         hidx_P, otherEntry_, i_, indicies_, 
                                         portDomain_, sourcePort_, destPort_, 
                                         new_sport_, conn, sport, dstAddr, 
                                         dport, pkt_Pri, hostMarker_Pri, 
                                         daddr_P, hostidx_P, hidx_Pr, 
                                         otherEntry_P, i_P, indicies_P, 
                                         portDomain_P, sourcePort_P, 
                                         destPort_P, new_sport_P, depth_Pr, 
                                         pkt_Priv, conn_Pr, hostMarker_Priv, 
                                         daddr_Pr, hostidx_Pr, hidx_Pri, 
                                         otherEntry_Pr, i_Pr, indicies_Pr, 
                                         portDomain_Pr, sourcePort_Pr, 
                                         destPort_Pr, new_sport_Pr, pkt_PrivT, 
                                         conn_Pri, hostMarker_PrivT, daddr_Pri, 
                                         hostidx_Pri, hidx_Priv, 
                                         otherEntry_Pri, i_Pri, indicies_Pri, 
                                         portDomain_Pri, sourcePort_Pri, 
                                         destPort_Pri, new_sport_Pri, depth_C, 
                                         host_C, hidx_Co, host_idx_Co, pidx_Co, 
                                         port_idx_Co, connhost, port, host_Co, 
                                         hidx_Con, host_idx, pidx, port_idx, 
                                         depth_Di, ip_D, host_Di, connDomain, 
                                         cidx, conn_Dis, depth_Pu, pkt_Pu, 
                                         ipkt_Pu, entry_Pu, conn_Pub, 
                                         hostMarker_Pu, ip_idx_Pu, ipidx_Pu, 
                                         ip_Pub, host_Pub, depth_Pri, 
                                         pkt_PrivTo, conn_Priv, 
                                         hostMarker_PrivTo, daddr_Priv, 
                                         hostidx_Priv, hidx_PrivT, 
                                         otherEntry_Priv, i_Priv, 
                                         indicies_Priv, portDomain_Priv, 
                                         sourcePort_Priv, destPort_Priv, 
                                         new_sport_Priv, good, depth_E, i_E, 
                                         j_, ip_E, host_E, indecies_, depth_Ev, 
                                         i_Ev, j_E, ip_Ev, host_Ev, indecies_E, 
                                         i_C, i_Ch, depth_Pub, pkt_Pub, 
                                         ipkt_Pub, entry_Pub, conn_PubT, 
                                         hostMarker_Pub, ip_idx_Pub, ipidx_Pub, 
                                         ip_PubT, host_PubT, depth_Priv, 
                                         pkt_PrivToP, conn_PrivT, 
                                         hostMarker_PrivToP, daddr, hostidx, 
                                         hidx, otherEntry, i_PrivT, indicies, 
                                         portDomain, sourcePort, destPort, 
                                         new_sport, depth_PubT, pkt, ipkt, 
                                         entry, conn_PubTo, hostMarker, ip_idx, 
                                         ipidx, ip_PubTo, host_PubTo, depth, 
                                         i_Eve, j, ip_Eve, host_Eve, indecies, 
                                         aa >>

checkModelWhile(self) == /\ pc[self] = "checkModelWhile"
                         /\ IF i[self] < MAX
                               THEN /\ PrintT(i[self])
                                    /\ /\ depth' = [depth EXCEPT ![self] = MAX]
                                       /\ stack' = [stack EXCEPT ![self] = << [ procedure |->  "EventSequenceATIP",
                                                                                pc        |->  "checkModelInc",
                                                                                i_Eve     |->  i_Eve[self],
                                                                                j         |->  j[self],
                                                                                ip_Eve    |->  ip_Eve[self],
                                                                                host_Eve  |->  host_Eve[self],
                                                                                indecies  |->  indecies[self],
                                                                                depth     |->  depth[self] ] >>
                                                                            \o stack[self]]
                                    /\ i_Eve' = [i_Eve EXCEPT ![self] = defaultInitValue]
                                    /\ j' = [j EXCEPT ![self] = defaultInitValue]
                                    /\ ip_Eve' = [ip_Eve EXCEPT ![self] = defaultInitValue]
                                    /\ host_Eve' = [host_Eve EXCEPT ![self] = defaultInitValue]
                                    /\ indecies' = [indecies EXCEPT ![self] = defaultInitValue]
                                    /\ pc' = [pc EXCEPT ![self] = "evtSeqStart"]
                               ELSE /\ pc' = [pc EXCEPT ![self] = "checkModelRet"]
                                    /\ UNCHANGED << stack, depth, i_Eve, j, 
                                                    ip_Eve, host_Eve, indecies >>
                         /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, 
                                         Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, 
                                         Kk, Ll, Mm, Nn, Oo, Pp, Qq, Rr, Ss, 
                                         Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, H2, 
                                         MaxPorts, EP1, PortMap1, EP2, 
                                         PortMap2, TableFull, EvictionReroute, 
                                         PortScanInv, ATIPInv, MaxTableSize, 
                                         hosts, FreeHosts, UsedHosts, Ports, 
                                         ExtraPorts, ExtraExtraPorts, T, 
                                         FreeIPs, PrivIPs, PubIPs, PortSpace, 
                                         UsedIPs, Connections, SendQueue, 
                                         RcvQueue, MAX, Marker1, Marker2, 
                                         CmdConnect, CmdDisconnect, 
                                         PortSpaceFull, depth_, host_, hidx_, 
                                         host_idx_, pidx_, port_idx_, depth_D, 
                                         ip_, host_D, connDomain_, cidx_, 
                                         conn_, host_Con, ip_C, hidx_C, 
                                         host_idx_C, pidx_C, port_idx_C, 
                                         host_Dis, ip_Di, connDomain_D, cidx_D, 
                                         conn_D, host, ip, connDomain_Di, 
                                         cidx_Di, conn_Di, depth_P, pkt_, 
                                         ipkt_, entry_, conn_P, hostMarker_, 
                                         ip_idx_, ipidx_, ip_P, host_P, pkt_P, 
                                         ipkt_P, entry_P, conn_Pu, 
                                         hostMarker_P, ip_idx_P, ipidx_P, 
                                         ip_Pu, host_Pu, IP, conn_PrivTo, 
                                         sport_, dstAddr_, dport_, pkt_Pr, 
                                         hostMarker_Pr, daddr_, hostidx_, 
                                         hidx_P, otherEntry_, i_, indicies_, 
                                         portDomain_, sourcePort_, destPort_, 
                                         new_sport_, conn, sport, dstAddr, 
                                         dport, pkt_Pri, hostMarker_Pri, 
                                         daddr_P, hostidx_P, hidx_Pr, 
                                         otherEntry_P, i_P, indicies_P, 
                                         portDomain_P, sourcePort_P, 
                                         destPort_P, new_sport_P, depth_Pr, 
                                         pkt_Priv, conn_Pr, hostMarker_Priv, 
                                         daddr_Pr, hostidx_Pr, hidx_Pri, 
                                         otherEntry_Pr, i_Pr, indicies_Pr, 
                                         portDomain_Pr, sourcePort_Pr, 
                                         destPort_Pr, new_sport_Pr, pkt_PrivT, 
                                         conn_Pri, hostMarker_PrivT, daddr_Pri, 
                                         hostidx_Pri, hidx_Priv, 
                                         otherEntry_Pri, i_Pri, indicies_Pri, 
                                         portDomain_Pri, sourcePort_Pri, 
                                         destPort_Pri, new_sport_Pri, depth_C, 
                                         host_C, hidx_Co, host_idx_Co, pidx_Co, 
                                         port_idx_Co, connhost, port, host_Co, 
                                         hidx_Con, host_idx, pidx, port_idx, 
                                         depth_Di, ip_D, host_Di, connDomain, 
                                         cidx, conn_Dis, depth_Pu, pkt_Pu, 
                                         ipkt_Pu, entry_Pu, conn_Pub, 
                                         hostMarker_Pu, ip_idx_Pu, ipidx_Pu, 
                                         ip_Pub, host_Pub, depth_Pri, 
                                         pkt_PrivTo, conn_Priv, 
                                         hostMarker_PrivTo, daddr_Priv, 
                                         hostidx_Priv, hidx_PrivT, 
                                         otherEntry_Priv, i_Priv, 
                                         indicies_Priv, portDomain_Priv, 
                                         sourcePort_Priv, destPort_Priv, 
                                         new_sport_Priv, good, depth_E, i_E, 
                                         j_, ip_E, host_E, indecies_, depth_Ev, 
                                         i_Ev, j_E, ip_Ev, host_Ev, indecies_E, 
                                         i_C, i_Ch, depth_Pub, pkt_Pub, 
                                         ipkt_Pub, entry_Pub, conn_PubT, 
                                         hostMarker_Pub, ip_idx_Pub, ipidx_Pub, 
                                         ip_PubT, host_PubT, depth_Priv, 
                                         pkt_PrivToP, conn_PrivT, 
                                         hostMarker_PrivToP, daddr, hostidx, 
                                         hidx, otherEntry, i_PrivT, indicies, 
                                         portDomain, sourcePort, destPort, 
                                         new_sport, depth_PubT, pkt, ipkt, 
                                         entry, conn_PubTo, hostMarker, ip_idx, 
                                         ipidx, ip_PubTo, host_PubTo, i, aa >>

checkModelInc(self) == /\ pc[self] = "checkModelInc"
                       /\ i' = [i EXCEPT ![self] = i[self] + 1]
                       /\ pc' = [pc EXCEPT ![self] = "checkModelWhile"]
                       /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, 
                                       Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, 
                                       Ll, Mm, Nn, Oo, Pp, Qq, Rr, Ss, Tt, Uu, 
                                       Vv, Ww, Xx, Yy, Zz, H1, H2, MaxPorts, 
                                       EP1, PortMap1, EP2, PortMap2, TableFull, 
                                       EvictionReroute, PortScanInv, ATIPInv, 
                                       MaxTableSize, hosts, FreeHosts, 
                                       UsedHosts, Ports, ExtraPorts, 
                                       ExtraExtraPorts, T, FreeIPs, PrivIPs, 
                                       PubIPs, PortSpace, UsedIPs, Connections, 
                                       SendQueue, RcvQueue, MAX, Marker1, 
                                       Marker2, CmdConnect, CmdDisconnect, 
                                       PortSpaceFull, stack, depth_, host_, 
                                       hidx_, host_idx_, pidx_, port_idx_, 
                                       depth_D, ip_, host_D, connDomain_, 
                                       cidx_, conn_, host_Con, ip_C, hidx_C, 
                                       host_idx_C, pidx_C, port_idx_C, 
                                       host_Dis, ip_Di, connDomain_D, cidx_D, 
                                       conn_D, host, ip, connDomain_Di, 
                                       cidx_Di, conn_Di, depth_P, pkt_, ipkt_, 
                                       entry_, conn_P, hostMarker_, ip_idx_, 
                                       ipidx_, ip_P, host_P, pkt_P, ipkt_P, 
                                       entry_P, conn_Pu, hostMarker_P, 
                                       ip_idx_P, ipidx_P, ip_Pu, host_Pu, IP, 
                                       conn_PrivTo, sport_, dstAddr_, dport_, 
                                       pkt_Pr, hostMarker_Pr, daddr_, hostidx_, 
                                       hidx_P, otherEntry_, i_, indicies_, 
                                       portDomain_, sourcePort_, destPort_, 
                                       new_sport_, conn, sport, dstAddr, dport, 
                                       pkt_Pri, hostMarker_Pri, daddr_P, 
                                       hostidx_P, hidx_Pr, otherEntry_P, i_P, 
                                       indicies_P, portDomain_P, sourcePort_P, 
                                       destPort_P, new_sport_P, depth_Pr, 
                                       pkt_Priv, conn_Pr, hostMarker_Priv, 
                                       daddr_Pr, hostidx_Pr, hidx_Pri, 
                                       otherEntry_Pr, i_Pr, indicies_Pr, 
                                       portDomain_Pr, sourcePort_Pr, 
                                       destPort_Pr, new_sport_Pr, pkt_PrivT, 
                                       conn_Pri, hostMarker_PrivT, daddr_Pri, 
                                       hostidx_Pri, hidx_Priv, otherEntry_Pri, 
                                       i_Pri, indicies_Pri, portDomain_Pri, 
                                       sourcePort_Pri, destPort_Pri, 
                                       new_sport_Pri, depth_C, host_C, hidx_Co, 
                                       host_idx_Co, pidx_Co, port_idx_Co, 
                                       connhost, port, host_Co, hidx_Con, 
                                       host_idx, pidx, port_idx, depth_Di, 
                                       ip_D, host_Di, connDomain, cidx, 
                                       conn_Dis, depth_Pu, pkt_Pu, ipkt_Pu, 
                                       entry_Pu, conn_Pub, hostMarker_Pu, 
                                       ip_idx_Pu, ipidx_Pu, ip_Pub, host_Pub, 
                                       depth_Pri, pkt_PrivTo, conn_Priv, 
                                       hostMarker_PrivTo, daddr_Priv, 
                                       hostidx_Priv, hidx_PrivT, 
                                       otherEntry_Priv, i_Priv, indicies_Priv, 
                                       portDomain_Priv, sourcePort_Priv, 
                                       destPort_Priv, new_sport_Priv, good, 
                                       depth_E, i_E, j_, ip_E, host_E, 
                                       indecies_, depth_Ev, i_Ev, j_E, ip_Ev, 
                                       host_Ev, indecies_E, i_C, i_Ch, 
                                       depth_Pub, pkt_Pub, ipkt_Pub, entry_Pub, 
                                       conn_PubT, hostMarker_Pub, ip_idx_Pub, 
                                       ipidx_Pub, ip_PubT, host_PubT, 
                                       depth_Priv, pkt_PrivToP, conn_PrivT, 
                                       hostMarker_PrivToP, daddr, hostidx, 
                                       hidx, otherEntry, i_PrivT, indicies, 
                                       portDomain, sourcePort, destPort, 
                                       new_sport, depth_PubT, pkt, ipkt, entry, 
                                       conn_PubTo, hostMarker, ip_idx, ipidx, 
                                       ip_PubTo, host_PubTo, depth, i_Eve, j, 
                                       ip_Eve, host_Eve, indecies, aa >>

checkModelRet(self) == /\ pc[self] = "checkModelRet"
                       /\ pc' = [pc EXCEPT ![self] = Head(stack[self]).pc]
                       /\ i' = [i EXCEPT ![self] = Head(stack[self]).i]
                       /\ stack' = [stack EXCEPT ![self] = Tail(stack[self])]
                       /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, 
                                       Bb, Cc, Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, 
                                       Ll, Mm, Nn, Oo, Pp, Qq, Rr, Ss, Tt, Uu, 
                                       Vv, Ww, Xx, Yy, Zz, H1, H2, MaxPorts, 
                                       EP1, PortMap1, EP2, PortMap2, TableFull, 
                                       EvictionReroute, PortScanInv, ATIPInv, 
                                       MaxTableSize, hosts, FreeHosts, 
                                       UsedHosts, Ports, ExtraPorts, 
                                       ExtraExtraPorts, T, FreeIPs, PrivIPs, 
                                       PubIPs, PortSpace, UsedIPs, Connections, 
                                       SendQueue, RcvQueue, MAX, Marker1, 
                                       Marker2, CmdConnect, CmdDisconnect, 
                                       PortSpaceFull, depth_, host_, hidx_, 
                                       host_idx_, pidx_, port_idx_, depth_D, 
                                       ip_, host_D, connDomain_, cidx_, conn_, 
                                       host_Con, ip_C, hidx_C, host_idx_C, 
                                       pidx_C, port_idx_C, host_Dis, ip_Di, 
                                       connDomain_D, cidx_D, conn_D, host, ip, 
                                       connDomain_Di, cidx_Di, conn_Di, 
                                       depth_P, pkt_, ipkt_, entry_, conn_P, 
                                       hostMarker_, ip_idx_, ipidx_, ip_P, 
                                       host_P, pkt_P, ipkt_P, entry_P, conn_Pu, 
                                       hostMarker_P, ip_idx_P, ipidx_P, ip_Pu, 
                                       host_Pu, IP, conn_PrivTo, sport_, 
                                       dstAddr_, dport_, pkt_Pr, hostMarker_Pr, 
                                       daddr_, hostidx_, hidx_P, otherEntry_, 
                                       i_, indicies_, portDomain_, sourcePort_, 
                                       destPort_, new_sport_, conn, sport, 
                                       dstAddr, dport, pkt_Pri, hostMarker_Pri, 
                                       daddr_P, hostidx_P, hidx_Pr, 
                                       otherEntry_P, i_P, indicies_P, 
                                       portDomain_P, sourcePort_P, destPort_P, 
                                       new_sport_P, depth_Pr, pkt_Priv, 
                                       conn_Pr, hostMarker_Priv, daddr_Pr, 
                                       hostidx_Pr, hidx_Pri, otherEntry_Pr, 
                                       i_Pr, indicies_Pr, portDomain_Pr, 
                                       sourcePort_Pr, destPort_Pr, 
                                       new_sport_Pr, pkt_PrivT, conn_Pri, 
                                       hostMarker_PrivT, daddr_Pri, 
                                       hostidx_Pri, hidx_Priv, otherEntry_Pri, 
                                       i_Pri, indicies_Pri, portDomain_Pri, 
                                       sourcePort_Pri, destPort_Pri, 
                                       new_sport_Pri, depth_C, host_C, hidx_Co, 
                                       host_idx_Co, pidx_Co, port_idx_Co, 
                                       connhost, port, host_Co, hidx_Con, 
                                       host_idx, pidx, port_idx, depth_Di, 
                                       ip_D, host_Di, connDomain, cidx, 
                                       conn_Dis, depth_Pu, pkt_Pu, ipkt_Pu, 
                                       entry_Pu, conn_Pub, hostMarker_Pu, 
                                       ip_idx_Pu, ipidx_Pu, ip_Pub, host_Pub, 
                                       depth_Pri, pkt_PrivTo, conn_Priv, 
                                       hostMarker_PrivTo, daddr_Priv, 
                                       hostidx_Priv, hidx_PrivT, 
                                       otherEntry_Priv, i_Priv, indicies_Priv, 
                                       portDomain_Priv, sourcePort_Priv, 
                                       destPort_Priv, new_sport_Priv, good, 
                                       depth_E, i_E, j_, ip_E, host_E, 
                                       indecies_, depth_Ev, i_Ev, j_E, ip_Ev, 
                                       host_Ev, indecies_E, i_C, i_Ch, 
                                       depth_Pub, pkt_Pub, ipkt_Pub, entry_Pub, 
                                       conn_PubT, hostMarker_Pub, ip_idx_Pub, 
                                       ipidx_Pub, ip_PubT, host_PubT, 
                                       depth_Priv, pkt_PrivToP, conn_PrivT, 
                                       hostMarker_PrivToP, daddr, hostidx, 
                                       hidx, otherEntry, i_PrivT, indicies, 
                                       portDomain, sourcePort, destPort, 
                                       new_sport, depth_PubT, pkt, ipkt, entry, 
                                       conn_PubTo, hostMarker, ip_idx, ipidx, 
                                       ip_PubTo, host_PubTo, depth, i_Eve, j, 
                                       ip_Eve, host_Eve, indecies, aa >>

CheckModelATIP(self) == checkModelStart(self) \/ checkModelWhile(self)
                           \/ checkModelInc(self) \/ checkModelRet(self)

ATIP1_(self) == /\ pc[self] = "ATIP1_"
                /\ /\ connhost' = [connhost EXCEPT ![self] = H1]
                   /\ port' = [port EXCEPT ![self] = D]
                   /\ stack' = [stack EXCEPT ![self] = << [ procedure |->  "ConnectMan3",
                                                            pc        |->  "ATIP2_",
                                                            host_Co   |->  host_Co[self],
                                                            hidx_Con  |->  hidx_Con[self],
                                                            host_idx  |->  host_idx[self],
                                                            pidx      |->  pidx[self],
                                                            port_idx  |->  port_idx[self],
                                                            connhost  |->  connhost[self],
                                                            port      |->  port[self] ] >>
                                                        \o stack[self]]
                /\ host_Co' = [host_Co EXCEPT ![self] = defaultInitValue]
                /\ hidx_Con' = [hidx_Con EXCEPT ![self] = defaultInitValue]
                /\ host_idx' = [host_idx EXCEPT ![self] = defaultInitValue]
                /\ pidx' = [pidx EXCEPT ![self] = defaultInitValue]
                /\ port_idx' = [port_idx EXCEPT ![self] = defaultInitValue]
                /\ pc' = [pc EXCEPT ![self] = "connectIf"]
                /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, Bb, Cc, 
                                Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, Ll, Mm, Nn, Oo, 
                                Pp, Qq, Rr, Ss, Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, 
                                H2, MaxPorts, EP1, PortMap1, EP2, PortMap2, 
                                TableFull, EvictionReroute, PortScanInv, 
                                ATIPInv, MaxTableSize, hosts, FreeHosts, 
                                UsedHosts, Ports, ExtraPorts, ExtraExtraPorts, 
                                T, FreeIPs, PrivIPs, PubIPs, PortSpace, 
                                UsedIPs, Connections, SendQueue, RcvQueue, MAX, 
                                Marker1, Marker2, CmdConnect, CmdDisconnect, 
                                PortSpaceFull, depth_, host_, hidx_, host_idx_, 
                                pidx_, port_idx_, depth_D, ip_, host_D, 
                                connDomain_, cidx_, conn_, host_Con, ip_C, 
                                hidx_C, host_idx_C, pidx_C, port_idx_C, 
                                host_Dis, ip_Di, connDomain_D, cidx_D, conn_D, 
                                host, ip, connDomain_Di, cidx_Di, conn_Di, 
                                depth_P, pkt_, ipkt_, entry_, conn_P, 
                                hostMarker_, ip_idx_, ipidx_, ip_P, host_P, 
                                pkt_P, ipkt_P, entry_P, conn_Pu, hostMarker_P, 
                                ip_idx_P, ipidx_P, ip_Pu, host_Pu, IP, 
                                conn_PrivTo, sport_, dstAddr_, dport_, pkt_Pr, 
                                hostMarker_Pr, daddr_, hostidx_, hidx_P, 
                                otherEntry_, i_, indicies_, portDomain_, 
                                sourcePort_, destPort_, new_sport_, conn, 
                                sport, dstAddr, dport, pkt_Pri, hostMarker_Pri, 
                                daddr_P, hostidx_P, hidx_Pr, otherEntry_P, i_P, 
                                indicies_P, portDomain_P, sourcePort_P, 
                                destPort_P, new_sport_P, depth_Pr, pkt_Priv, 
                                conn_Pr, hostMarker_Priv, daddr_Pr, hostidx_Pr, 
                                hidx_Pri, otherEntry_Pr, i_Pr, indicies_Pr, 
                                portDomain_Pr, sourcePort_Pr, destPort_Pr, 
                                new_sport_Pr, pkt_PrivT, conn_Pri, 
                                hostMarker_PrivT, daddr_Pri, hostidx_Pri, 
                                hidx_Priv, otherEntry_Pri, i_Pri, indicies_Pri, 
                                portDomain_Pri, sourcePort_Pri, destPort_Pri, 
                                new_sport_Pri, depth_C, host_C, hidx_Co, 
                                host_idx_Co, pidx_Co, port_idx_Co, depth_Di, 
                                ip_D, host_Di, connDomain, cidx, conn_Dis, 
                                depth_Pu, pkt_Pu, ipkt_Pu, entry_Pu, conn_Pub, 
                                hostMarker_Pu, ip_idx_Pu, ipidx_Pu, ip_Pub, 
                                host_Pub, depth_Pri, pkt_PrivTo, conn_Priv, 
                                hostMarker_PrivTo, daddr_Priv, hostidx_Priv, 
                                hidx_PrivT, otherEntry_Priv, i_Priv, 
                                indicies_Priv, portDomain_Priv, 
                                sourcePort_Priv, destPort_Priv, new_sport_Priv, 
                                good, depth_E, i_E, j_, ip_E, host_E, 
                                indecies_, depth_Ev, i_Ev, j_E, ip_Ev, host_Ev, 
                                indecies_E, i_C, i_Ch, depth_Pub, pkt_Pub, 
                                ipkt_Pub, entry_Pub, conn_PubT, hostMarker_Pub, 
                                ip_idx_Pub, ipidx_Pub, ip_PubT, host_PubT, 
                                depth_Priv, pkt_PrivToP, conn_PrivT, 
                                hostMarker_PrivToP, daddr, hostidx, hidx, 
                                otherEntry, i_PrivT, indicies, portDomain, 
                                sourcePort, destPort, new_sport, depth_PubT, 
                                pkt, ipkt, entry, conn_PubTo, hostMarker, 
                                ip_idx, ipidx, ip_PubTo, host_PubTo, depth, 
                                i_Eve, j, ip_Eve, host_Eve, indecies, i, aa >>

ATIP2_(self) == /\ pc[self] = "ATIP2_"
                /\ PrintT(<<"SendQueue after Connect:", SendQueue>>)
                /\ pc' = [pc EXCEPT ![self] = "ATIP3_"]
                /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, Bb, Cc, 
                                Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, Ll, Mm, Nn, Oo, 
                                Pp, Qq, Rr, Ss, Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, 
                                H2, MaxPorts, EP1, PortMap1, EP2, PortMap2, 
                                TableFull, EvictionReroute, PortScanInv, 
                                ATIPInv, MaxTableSize, hosts, FreeHosts, 
                                UsedHosts, Ports, ExtraPorts, ExtraExtraPorts, 
                                T, FreeIPs, PrivIPs, PubIPs, PortSpace, 
                                UsedIPs, Connections, SendQueue, RcvQueue, MAX, 
                                Marker1, Marker2, CmdConnect, CmdDisconnect, 
                                PortSpaceFull, stack, depth_, host_, hidx_, 
                                host_idx_, pidx_, port_idx_, depth_D, ip_, 
                                host_D, connDomain_, cidx_, conn_, host_Con, 
                                ip_C, hidx_C, host_idx_C, pidx_C, port_idx_C, 
                                host_Dis, ip_Di, connDomain_D, cidx_D, conn_D, 
                                host, ip, connDomain_Di, cidx_Di, conn_Di, 
                                depth_P, pkt_, ipkt_, entry_, conn_P, 
                                hostMarker_, ip_idx_, ipidx_, ip_P, host_P, 
                                pkt_P, ipkt_P, entry_P, conn_Pu, hostMarker_P, 
                                ip_idx_P, ipidx_P, ip_Pu, host_Pu, IP, 
                                conn_PrivTo, sport_, dstAddr_, dport_, pkt_Pr, 
                                hostMarker_Pr, daddr_, hostidx_, hidx_P, 
                                otherEntry_, i_, indicies_, portDomain_, 
                                sourcePort_, destPort_, new_sport_, conn, 
                                sport, dstAddr, dport, pkt_Pri, hostMarker_Pri, 
                                daddr_P, hostidx_P, hidx_Pr, otherEntry_P, i_P, 
                                indicies_P, portDomain_P, sourcePort_P, 
                                destPort_P, new_sport_P, depth_Pr, pkt_Priv, 
                                conn_Pr, hostMarker_Priv, daddr_Pr, hostidx_Pr, 
                                hidx_Pri, otherEntry_Pr, i_Pr, indicies_Pr, 
                                portDomain_Pr, sourcePort_Pr, destPort_Pr, 
                                new_sport_Pr, pkt_PrivT, conn_Pri, 
                                hostMarker_PrivT, daddr_Pri, hostidx_Pri, 
                                hidx_Priv, otherEntry_Pri, i_Pri, indicies_Pri, 
                                portDomain_Pri, sourcePort_Pri, destPort_Pri, 
                                new_sport_Pri, depth_C, host_C, hidx_Co, 
                                host_idx_Co, pidx_Co, port_idx_Co, connhost, 
                                port, host_Co, hidx_Con, host_idx, pidx, 
                                port_idx, depth_Di, ip_D, host_Di, connDomain, 
                                cidx, conn_Dis, depth_Pu, pkt_Pu, ipkt_Pu, 
                                entry_Pu, conn_Pub, hostMarker_Pu, ip_idx_Pu, 
                                ipidx_Pu, ip_Pub, host_Pub, depth_Pri, 
                                pkt_PrivTo, conn_Priv, hostMarker_PrivTo, 
                                daddr_Priv, hostidx_Priv, hidx_PrivT, 
                                otherEntry_Priv, i_Priv, indicies_Priv, 
                                portDomain_Priv, sourcePort_Priv, 
                                destPort_Priv, new_sport_Priv, good, depth_E, 
                                i_E, j_, ip_E, host_E, indecies_, depth_Ev, 
                                i_Ev, j_E, ip_Ev, host_Ev, indecies_E, i_C, 
                                i_Ch, depth_Pub, pkt_Pub, ipkt_Pub, entry_Pub, 
                                conn_PubT, hostMarker_Pub, ip_idx_Pub, 
                                ipidx_Pub, ip_PubT, host_PubT, depth_Priv, 
                                pkt_PrivToP, conn_PrivT, hostMarker_PrivToP, 
                                daddr, hostidx, hidx, otherEntry, i_PrivT, 
                                indicies, portDomain, sourcePort, destPort, 
                                new_sport, depth_PubT, pkt, ipkt, entry, 
                                conn_PubTo, hostMarker, ip_idx, ipidx, 
                                ip_PubTo, host_PubTo, depth, i_Eve, j, ip_Eve, 
                                host_Eve, indecies, i, aa >>

ATIP3_(self) == /\ pc[self] = "ATIP3_"
                /\ stack' = [stack EXCEPT ![self] = << [ procedure |->  "PubToPrivMan",
                                                         pc        |->  "ATIP4_",
                                                         pkt_P     |->  pkt_P[self],
                                                         ipkt_P    |->  ipkt_P[self],
                                                         entry_P   |->  entry_P[self],
                                                         conn_Pu   |->  conn_Pu[self],
                                                         hostMarker_P |->  hostMarker_P[self],
                                                         ip_idx_P  |->  ip_idx_P[self],
                                                         ipidx_P   |->  ipidx_P[self],
                                                         ip_Pu     |->  ip_Pu[self],
                                                         host_Pu   |->  host_Pu[self],
                                                         IP        |->  IP[self] ] >>
                                                     \o stack[self]]
                /\ pkt_P' = [pkt_P EXCEPT ![self] = defaultInitValue]
                /\ ipkt_P' = [ipkt_P EXCEPT ![self] = defaultInitValue]
                /\ entry_P' = [entry_P EXCEPT ![self] = defaultInitValue]
                /\ conn_Pu' = [conn_Pu EXCEPT ![self] = defaultInitValue]
                /\ hostMarker_P' = [hostMarker_P EXCEPT ![self] = defaultInitValue]
                /\ ip_idx_P' = [ip_idx_P EXCEPT ![self] = defaultInitValue]
                /\ ipidx_P' = [ipidx_P EXCEPT ![self] = defaultInitValue]
                /\ ip_Pu' = [ip_Pu EXCEPT ![self] = defaultInitValue]
                /\ host_Pu' = [host_Pu EXCEPT ![self] = defaultInitValue]
                /\ IP' = [IP EXCEPT ![self] = defaultInitValue]
                /\ pc' = [pc EXCEPT ![self] = "pubtoprivManStart"]
                /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, Bb, Cc, 
                                Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, Ll, Mm, Nn, Oo, 
                                Pp, Qq, Rr, Ss, Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, 
                                H2, MaxPorts, EP1, PortMap1, EP2, PortMap2, 
                                TableFull, EvictionReroute, PortScanInv, 
                                ATIPInv, MaxTableSize, hosts, FreeHosts, 
                                UsedHosts, Ports, ExtraPorts, ExtraExtraPorts, 
                                T, FreeIPs, PrivIPs, PubIPs, PortSpace, 
                                UsedIPs, Connections, SendQueue, RcvQueue, MAX, 
                                Marker1, Marker2, CmdConnect, CmdDisconnect, 
                                PortSpaceFull, depth_, host_, hidx_, host_idx_, 
                                pidx_, port_idx_, depth_D, ip_, host_D, 
                                connDomain_, cidx_, conn_, host_Con, ip_C, 
                                hidx_C, host_idx_C, pidx_C, port_idx_C, 
                                host_Dis, ip_Di, connDomain_D, cidx_D, conn_D, 
                                host, ip, connDomain_Di, cidx_Di, conn_Di, 
                                depth_P, pkt_, ipkt_, entry_, conn_P, 
                                hostMarker_, ip_idx_, ipidx_, ip_P, host_P, 
                                conn_PrivTo, sport_, dstAddr_, dport_, pkt_Pr, 
                                hostMarker_Pr, daddr_, hostidx_, hidx_P, 
                                otherEntry_, i_, indicies_, portDomain_, 
                                sourcePort_, destPort_, new_sport_, conn, 
                                sport, dstAddr, dport, pkt_Pri, hostMarker_Pri, 
                                daddr_P, hostidx_P, hidx_Pr, otherEntry_P, i_P, 
                                indicies_P, portDomain_P, sourcePort_P, 
                                destPort_P, new_sport_P, depth_Pr, pkt_Priv, 
                                conn_Pr, hostMarker_Priv, daddr_Pr, hostidx_Pr, 
                                hidx_Pri, otherEntry_Pr, i_Pr, indicies_Pr, 
                                portDomain_Pr, sourcePort_Pr, destPort_Pr, 
                                new_sport_Pr, pkt_PrivT, conn_Pri, 
                                hostMarker_PrivT, daddr_Pri, hostidx_Pri, 
                                hidx_Priv, otherEntry_Pri, i_Pri, indicies_Pri, 
                                portDomain_Pri, sourcePort_Pri, destPort_Pri, 
                                new_sport_Pri, depth_C, host_C, hidx_Co, 
                                host_idx_Co, pidx_Co, port_idx_Co, connhost, 
                                port, host_Co, hidx_Con, host_idx, pidx, 
                                port_idx, depth_Di, ip_D, host_Di, connDomain, 
                                cidx, conn_Dis, depth_Pu, pkt_Pu, ipkt_Pu, 
                                entry_Pu, conn_Pub, hostMarker_Pu, ip_idx_Pu, 
                                ipidx_Pu, ip_Pub, host_Pub, depth_Pri, 
                                pkt_PrivTo, conn_Priv, hostMarker_PrivTo, 
                                daddr_Priv, hostidx_Priv, hidx_PrivT, 
                                otherEntry_Priv, i_Priv, indicies_Priv, 
                                portDomain_Priv, sourcePort_Priv, 
                                destPort_Priv, new_sport_Priv, good, depth_E, 
                                i_E, j_, ip_E, host_E, indecies_, depth_Ev, 
                                i_Ev, j_E, ip_Ev, host_Ev, indecies_E, i_C, 
                                i_Ch, depth_Pub, pkt_Pub, ipkt_Pub, entry_Pub, 
                                conn_PubT, hostMarker_Pub, ip_idx_Pub, 
                                ipidx_Pub, ip_PubT, host_PubT, depth_Priv, 
                                pkt_PrivToP, conn_PrivT, hostMarker_PrivToP, 
                                daddr, hostidx, hidx, otherEntry, i_PrivT, 
                                indicies, portDomain, sourcePort, destPort, 
                                new_sport, depth_PubT, pkt, ipkt, entry, 
                                conn_PubTo, hostMarker, ip_idx, ipidx, 
                                ip_PubTo, host_PubTo, depth, i_Eve, j, ip_Eve, 
                                host_Eve, indecies, i, aa >>

ATIP4_(self) == /\ pc[self] = "ATIP4_"
                /\ PrintT(<<"SendQueue after pubtopriv:", SendQueue>>)
                /\ pc' = [pc EXCEPT ![self] = "ATIP5_"]
                /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, Bb, Cc, 
                                Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, Ll, Mm, Nn, Oo, 
                                Pp, Qq, Rr, Ss, Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, 
                                H2, MaxPorts, EP1, PortMap1, EP2, PortMap2, 
                                TableFull, EvictionReroute, PortScanInv, 
                                ATIPInv, MaxTableSize, hosts, FreeHosts, 
                                UsedHosts, Ports, ExtraPorts, ExtraExtraPorts, 
                                T, FreeIPs, PrivIPs, PubIPs, PortSpace, 
                                UsedIPs, Connections, SendQueue, RcvQueue, MAX, 
                                Marker1, Marker2, CmdConnect, CmdDisconnect, 
                                PortSpaceFull, stack, depth_, host_, hidx_, 
                                host_idx_, pidx_, port_idx_, depth_D, ip_, 
                                host_D, connDomain_, cidx_, conn_, host_Con, 
                                ip_C, hidx_C, host_idx_C, pidx_C, port_idx_C, 
                                host_Dis, ip_Di, connDomain_D, cidx_D, conn_D, 
                                host, ip, connDomain_Di, cidx_Di, conn_Di, 
                                depth_P, pkt_, ipkt_, entry_, conn_P, 
                                hostMarker_, ip_idx_, ipidx_, ip_P, host_P, 
                                pkt_P, ipkt_P, entry_P, conn_Pu, hostMarker_P, 
                                ip_idx_P, ipidx_P, ip_Pu, host_Pu, IP, 
                                conn_PrivTo, sport_, dstAddr_, dport_, pkt_Pr, 
                                hostMarker_Pr, daddr_, hostidx_, hidx_P, 
                                otherEntry_, i_, indicies_, portDomain_, 
                                sourcePort_, destPort_, new_sport_, conn, 
                                sport, dstAddr, dport, pkt_Pri, hostMarker_Pri, 
                                daddr_P, hostidx_P, hidx_Pr, otherEntry_P, i_P, 
                                indicies_P, portDomain_P, sourcePort_P, 
                                destPort_P, new_sport_P, depth_Pr, pkt_Priv, 
                                conn_Pr, hostMarker_Priv, daddr_Pr, hostidx_Pr, 
                                hidx_Pri, otherEntry_Pr, i_Pr, indicies_Pr, 
                                portDomain_Pr, sourcePort_Pr, destPort_Pr, 
                                new_sport_Pr, pkt_PrivT, conn_Pri, 
                                hostMarker_PrivT, daddr_Pri, hostidx_Pri, 
                                hidx_Priv, otherEntry_Pri, i_Pri, indicies_Pri, 
                                portDomain_Pri, sourcePort_Pri, destPort_Pri, 
                                new_sport_Pri, depth_C, host_C, hidx_Co, 
                                host_idx_Co, pidx_Co, port_idx_Co, connhost, 
                                port, host_Co, hidx_Con, host_idx, pidx, 
                                port_idx, depth_Di, ip_D, host_Di, connDomain, 
                                cidx, conn_Dis, depth_Pu, pkt_Pu, ipkt_Pu, 
                                entry_Pu, conn_Pub, hostMarker_Pu, ip_idx_Pu, 
                                ipidx_Pu, ip_Pub, host_Pub, depth_Pri, 
                                pkt_PrivTo, conn_Priv, hostMarker_PrivTo, 
                                daddr_Priv, hostidx_Priv, hidx_PrivT, 
                                otherEntry_Priv, i_Priv, indicies_Priv, 
                                portDomain_Priv, sourcePort_Priv, 
                                destPort_Priv, new_sport_Priv, good, depth_E, 
                                i_E, j_, ip_E, host_E, indecies_, depth_Ev, 
                                i_Ev, j_E, ip_Ev, host_Ev, indecies_E, i_C, 
                                i_Ch, depth_Pub, pkt_Pub, ipkt_Pub, entry_Pub, 
                                conn_PubT, hostMarker_Pub, ip_idx_Pub, 
                                ipidx_Pub, ip_PubT, host_PubT, depth_Priv, 
                                pkt_PrivToP, conn_PrivT, hostMarker_PrivToP, 
                                daddr, hostidx, hidx, otherEntry, i_PrivT, 
                                indicies, portDomain, sourcePort, destPort, 
                                new_sport, depth_PubT, pkt, ipkt, entry, 
                                conn_PubTo, hostMarker, ip_idx, ipidx, 
                                ip_PubTo, host_PubTo, depth, i_Eve, j, ip_Eve, 
                                host_Eve, indecies, i, aa >>

ATIP5_(self) == /\ pc[self] = "ATIP5_"
                /\ PrintT(<<"T after pubtopriv: ",Connections>>)
                /\ pc' = [pc EXCEPT ![self] = "ATIP6_"]
                /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, Bb, Cc, 
                                Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, Ll, Mm, Nn, Oo, 
                                Pp, Qq, Rr, Ss, Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, 
                                H2, MaxPorts, EP1, PortMap1, EP2, PortMap2, 
                                TableFull, EvictionReroute, PortScanInv, 
                                ATIPInv, MaxTableSize, hosts, FreeHosts, 
                                UsedHosts, Ports, ExtraPorts, ExtraExtraPorts, 
                                T, FreeIPs, PrivIPs, PubIPs, PortSpace, 
                                UsedIPs, Connections, SendQueue, RcvQueue, MAX, 
                                Marker1, Marker2, CmdConnect, CmdDisconnect, 
                                PortSpaceFull, stack, depth_, host_, hidx_, 
                                host_idx_, pidx_, port_idx_, depth_D, ip_, 
                                host_D, connDomain_, cidx_, conn_, host_Con, 
                                ip_C, hidx_C, host_idx_C, pidx_C, port_idx_C, 
                                host_Dis, ip_Di, connDomain_D, cidx_D, conn_D, 
                                host, ip, connDomain_Di, cidx_Di, conn_Di, 
                                depth_P, pkt_, ipkt_, entry_, conn_P, 
                                hostMarker_, ip_idx_, ipidx_, ip_P, host_P, 
                                pkt_P, ipkt_P, entry_P, conn_Pu, hostMarker_P, 
                                ip_idx_P, ipidx_P, ip_Pu, host_Pu, IP, 
                                conn_PrivTo, sport_, dstAddr_, dport_, pkt_Pr, 
                                hostMarker_Pr, daddr_, hostidx_, hidx_P, 
                                otherEntry_, i_, indicies_, portDomain_, 
                                sourcePort_, destPort_, new_sport_, conn, 
                                sport, dstAddr, dport, pkt_Pri, hostMarker_Pri, 
                                daddr_P, hostidx_P, hidx_Pr, otherEntry_P, i_P, 
                                indicies_P, portDomain_P, sourcePort_P, 
                                destPort_P, new_sport_P, depth_Pr, pkt_Priv, 
                                conn_Pr, hostMarker_Priv, daddr_Pr, hostidx_Pr, 
                                hidx_Pri, otherEntry_Pr, i_Pr, indicies_Pr, 
                                portDomain_Pr, sourcePort_Pr, destPort_Pr, 
                                new_sport_Pr, pkt_PrivT, conn_Pri, 
                                hostMarker_PrivT, daddr_Pri, hostidx_Pri, 
                                hidx_Priv, otherEntry_Pri, i_Pri, indicies_Pri, 
                                portDomain_Pri, sourcePort_Pri, destPort_Pri, 
                                new_sport_Pri, depth_C, host_C, hidx_Co, 
                                host_idx_Co, pidx_Co, port_idx_Co, connhost, 
                                port, host_Co, hidx_Con, host_idx, pidx, 
                                port_idx, depth_Di, ip_D, host_Di, connDomain, 
                                cidx, conn_Dis, depth_Pu, pkt_Pu, ipkt_Pu, 
                                entry_Pu, conn_Pub, hostMarker_Pu, ip_idx_Pu, 
                                ipidx_Pu, ip_Pub, host_Pub, depth_Pri, 
                                pkt_PrivTo, conn_Priv, hostMarker_PrivTo, 
                                daddr_Priv, hostidx_Priv, hidx_PrivT, 
                                otherEntry_Priv, i_Priv, indicies_Priv, 
                                portDomain_Priv, sourcePort_Priv, 
                                destPort_Priv, new_sport_Priv, good, depth_E, 
                                i_E, j_, ip_E, host_E, indecies_, depth_Ev, 
                                i_Ev, j_E, ip_Ev, host_Ev, indecies_E, i_C, 
                                i_Ch, depth_Pub, pkt_Pub, ipkt_Pub, entry_Pub, 
                                conn_PubT, hostMarker_Pub, ip_idx_Pub, 
                                ipidx_Pub, ip_PubT, host_PubT, depth_Priv, 
                                pkt_PrivToP, conn_PrivT, hostMarker_PrivToP, 
                                daddr, hostidx, hidx, otherEntry, i_PrivT, 
                                indicies, portDomain, sourcePort, destPort, 
                                new_sport, depth_PubT, pkt, ipkt, entry, 
                                conn_PubTo, hostMarker, ip_idx, ipidx, 
                                ip_PubTo, host_PubTo, depth, i_Eve, j, ip_Eve, 
                                host_Eve, indecies, i, aa >>

ATIP6_(self) == /\ pc[self] = "ATIP6_"
                /\ /\ conn_PrivTo' = [conn_PrivTo EXCEPT ![self] = <<A, H1>>]
                   /\ dport_' = [dport_ EXCEPT ![self] = F]
                   /\ dstAddr_' = [dstAddr_ EXCEPT ![self] = Y]
                   /\ sport_' = [sport_ EXCEPT ![self] = N]
                   /\ stack' = [stack EXCEPT ![self] = << [ procedure |->  "PrivToPubMan2",
                                                            pc        |->  "ATIP7_",
                                                            pkt_Pr    |->  pkt_Pr[self],
                                                            hostMarker_Pr |->  hostMarker_Pr[self],
                                                            daddr_    |->  daddr_[self],
                                                            hostidx_  |->  hostidx_[self],
                                                            hidx_P    |->  hidx_P[self],
                                                            otherEntry_ |->  otherEntry_[self],
                                                            i_        |->  i_[self],
                                                            indicies_ |->  indicies_[self],
                                                            portDomain_ |->  portDomain_[self],
                                                            sourcePort_ |->  sourcePort_[self],
                                                            destPort_ |->  destPort_[self],
                                                            new_sport_ |->  new_sport_[self],
                                                            conn_PrivTo |->  conn_PrivTo[self],
                                                            sport_    |->  sport_[self],
                                                            dstAddr_  |->  dstAddr_[self],
                                                            dport_    |->  dport_[self] ] >>
                                                        \o stack[self]]
                /\ pkt_Pr' = [pkt_Pr EXCEPT ![self] = defaultInitValue]
                /\ hostMarker_Pr' = [hostMarker_Pr EXCEPT ![self] = defaultInitValue]
                /\ daddr_' = [daddr_ EXCEPT ![self] = defaultInitValue]
                /\ hostidx_' = [hostidx_ EXCEPT ![self] = defaultInitValue]
                /\ hidx_P' = [hidx_P EXCEPT ![self] = defaultInitValue]
                /\ otherEntry_' = [otherEntry_ EXCEPT ![self] = defaultInitValue]
                /\ i_' = [i_ EXCEPT ![self] = defaultInitValue]
                /\ indicies_' = [indicies_ EXCEPT ![self] = defaultInitValue]
                /\ portDomain_' = [portDomain_ EXCEPT ![self] = defaultInitValue]
                /\ sourcePort_' = [sourcePort_ EXCEPT ![self] = defaultInitValue]
                /\ destPort_' = [destPort_ EXCEPT ![self] = defaultInitValue]
                /\ new_sport_' = [new_sport_ EXCEPT ![self] = defaultInitValue]
                /\ pc' = [pc EXCEPT ![self] = "privtopubManStart_"]
                /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, Bb, Cc, 
                                Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, Ll, Mm, Nn, Oo, 
                                Pp, Qq, Rr, Ss, Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, 
                                H2, MaxPorts, EP1, PortMap1, EP2, PortMap2, 
                                TableFull, EvictionReroute, PortScanInv, 
                                ATIPInv, MaxTableSize, hosts, FreeHosts, 
                                UsedHosts, Ports, ExtraPorts, ExtraExtraPorts, 
                                T, FreeIPs, PrivIPs, PubIPs, PortSpace, 
                                UsedIPs, Connections, SendQueue, RcvQueue, MAX, 
                                Marker1, Marker2, CmdConnect, CmdDisconnect, 
                                PortSpaceFull, depth_, host_, hidx_, host_idx_, 
                                pidx_, port_idx_, depth_D, ip_, host_D, 
                                connDomain_, cidx_, conn_, host_Con, ip_C, 
                                hidx_C, host_idx_C, pidx_C, port_idx_C, 
                                host_Dis, ip_Di, connDomain_D, cidx_D, conn_D, 
                                host, ip, connDomain_Di, cidx_Di, conn_Di, 
                                depth_P, pkt_, ipkt_, entry_, conn_P, 
                                hostMarker_, ip_idx_, ipidx_, ip_P, host_P, 
                                pkt_P, ipkt_P, entry_P, conn_Pu, hostMarker_P, 
                                ip_idx_P, ipidx_P, ip_Pu, host_Pu, IP, conn, 
                                sport, dstAddr, dport, pkt_Pri, hostMarker_Pri, 
                                daddr_P, hostidx_P, hidx_Pr, otherEntry_P, i_P, 
                                indicies_P, portDomain_P, sourcePort_P, 
                                destPort_P, new_sport_P, depth_Pr, pkt_Priv, 
                                conn_Pr, hostMarker_Priv, daddr_Pr, hostidx_Pr, 
                                hidx_Pri, otherEntry_Pr, i_Pr, indicies_Pr, 
                                portDomain_Pr, sourcePort_Pr, destPort_Pr, 
                                new_sport_Pr, pkt_PrivT, conn_Pri, 
                                hostMarker_PrivT, daddr_Pri, hostidx_Pri, 
                                hidx_Priv, otherEntry_Pri, i_Pri, indicies_Pri, 
                                portDomain_Pri, sourcePort_Pri, destPort_Pri, 
                                new_sport_Pri, depth_C, host_C, hidx_Co, 
                                host_idx_Co, pidx_Co, port_idx_Co, connhost, 
                                port, host_Co, hidx_Con, host_idx, pidx, 
                                port_idx, depth_Di, ip_D, host_Di, connDomain, 
                                cidx, conn_Dis, depth_Pu, pkt_Pu, ipkt_Pu, 
                                entry_Pu, conn_Pub, hostMarker_Pu, ip_idx_Pu, 
                                ipidx_Pu, ip_Pub, host_Pub, depth_Pri, 
                                pkt_PrivTo, conn_Priv, hostMarker_PrivTo, 
                                daddr_Priv, hostidx_Priv, hidx_PrivT, 
                                otherEntry_Priv, i_Priv, indicies_Priv, 
                                portDomain_Priv, sourcePort_Priv, 
                                destPort_Priv, new_sport_Priv, good, depth_E, 
                                i_E, j_, ip_E, host_E, indecies_, depth_Ev, 
                                i_Ev, j_E, ip_Ev, host_Ev, indecies_E, i_C, 
                                i_Ch, depth_Pub, pkt_Pub, ipkt_Pub, entry_Pub, 
                                conn_PubT, hostMarker_Pub, ip_idx_Pub, 
                                ipidx_Pub, ip_PubT, host_PubT, depth_Priv, 
                                pkt_PrivToP, conn_PrivT, hostMarker_PrivToP, 
                                daddr, hostidx, hidx, otherEntry, i_PrivT, 
                                indicies, portDomain, sourcePort, destPort, 
                                new_sport, depth_PubT, pkt, ipkt, entry, 
                                conn_PubTo, hostMarker, ip_idx, ipidx, 
                                ip_PubTo, host_PubTo, depth, i_Eve, j, ip_Eve, 
                                host_Eve, indecies, i, aa >>

ATIP7_(self) == /\ pc[self] = "ATIP7_"
                /\ PrintT(<<"SendQueue after privtopub:", SendQueue>>)
                /\ pc' = [pc EXCEPT ![self] = "ATIP8_"]
                /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, Bb, Cc, 
                                Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, Ll, Mm, Nn, Oo, 
                                Pp, Qq, Rr, Ss, Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, 
                                H2, MaxPorts, EP1, PortMap1, EP2, PortMap2, 
                                TableFull, EvictionReroute, PortScanInv, 
                                ATIPInv, MaxTableSize, hosts, FreeHosts, 
                                UsedHosts, Ports, ExtraPorts, ExtraExtraPorts, 
                                T, FreeIPs, PrivIPs, PubIPs, PortSpace, 
                                UsedIPs, Connections, SendQueue, RcvQueue, MAX, 
                                Marker1, Marker2, CmdConnect, CmdDisconnect, 
                                PortSpaceFull, stack, depth_, host_, hidx_, 
                                host_idx_, pidx_, port_idx_, depth_D, ip_, 
                                host_D, connDomain_, cidx_, conn_, host_Con, 
                                ip_C, hidx_C, host_idx_C, pidx_C, port_idx_C, 
                                host_Dis, ip_Di, connDomain_D, cidx_D, conn_D, 
                                host, ip, connDomain_Di, cidx_Di, conn_Di, 
                                depth_P, pkt_, ipkt_, entry_, conn_P, 
                                hostMarker_, ip_idx_, ipidx_, ip_P, host_P, 
                                pkt_P, ipkt_P, entry_P, conn_Pu, hostMarker_P, 
                                ip_idx_P, ipidx_P, ip_Pu, host_Pu, IP, 
                                conn_PrivTo, sport_, dstAddr_, dport_, pkt_Pr, 
                                hostMarker_Pr, daddr_, hostidx_, hidx_P, 
                                otherEntry_, i_, indicies_, portDomain_, 
                                sourcePort_, destPort_, new_sport_, conn, 
                                sport, dstAddr, dport, pkt_Pri, hostMarker_Pri, 
                                daddr_P, hostidx_P, hidx_Pr, otherEntry_P, i_P, 
                                indicies_P, portDomain_P, sourcePort_P, 
                                destPort_P, new_sport_P, depth_Pr, pkt_Priv, 
                                conn_Pr, hostMarker_Priv, daddr_Pr, hostidx_Pr, 
                                hidx_Pri, otherEntry_Pr, i_Pr, indicies_Pr, 
                                portDomain_Pr, sourcePort_Pr, destPort_Pr, 
                                new_sport_Pr, pkt_PrivT, conn_Pri, 
                                hostMarker_PrivT, daddr_Pri, hostidx_Pri, 
                                hidx_Priv, otherEntry_Pri, i_Pri, indicies_Pri, 
                                portDomain_Pri, sourcePort_Pri, destPort_Pri, 
                                new_sport_Pri, depth_C, host_C, hidx_Co, 
                                host_idx_Co, pidx_Co, port_idx_Co, connhost, 
                                port, host_Co, hidx_Con, host_idx, pidx, 
                                port_idx, depth_Di, ip_D, host_Di, connDomain, 
                                cidx, conn_Dis, depth_Pu, pkt_Pu, ipkt_Pu, 
                                entry_Pu, conn_Pub, hostMarker_Pu, ip_idx_Pu, 
                                ipidx_Pu, ip_Pub, host_Pub, depth_Pri, 
                                pkt_PrivTo, conn_Priv, hostMarker_PrivTo, 
                                daddr_Priv, hostidx_Priv, hidx_PrivT, 
                                otherEntry_Priv, i_Priv, indicies_Priv, 
                                portDomain_Priv, sourcePort_Priv, 
                                destPort_Priv, new_sport_Priv, good, depth_E, 
                                i_E, j_, ip_E, host_E, indecies_, depth_Ev, 
                                i_Ev, j_E, ip_Ev, host_Ev, indecies_E, i_C, 
                                i_Ch, depth_Pub, pkt_Pub, ipkt_Pub, entry_Pub, 
                                conn_PubT, hostMarker_Pub, ip_idx_Pub, 
                                ipidx_Pub, ip_PubT, host_PubT, depth_Priv, 
                                pkt_PrivToP, conn_PrivT, hostMarker_PrivToP, 
                                daddr, hostidx, hidx, otherEntry, i_PrivT, 
                                indicies, portDomain, sourcePort, destPort, 
                                new_sport, depth_PubT, pkt, ipkt, entry, 
                                conn_PubTo, hostMarker, ip_idx, ipidx, 
                                ip_PubTo, host_PubTo, depth, i_Eve, j, ip_Eve, 
                                host_Eve, indecies, i, aa >>

ATIP8_(self) == /\ pc[self] = "ATIP8_"
                /\ PrintT(<<"T after privtopub: ",T>>)
                /\ pc' = [pc EXCEPT ![self] = "ATIP9_"]
                /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, Bb, Cc, 
                                Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, Ll, Mm, Nn, Oo, 
                                Pp, Qq, Rr, Ss, Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, 
                                H2, MaxPorts, EP1, PortMap1, EP2, PortMap2, 
                                TableFull, EvictionReroute, PortScanInv, 
                                ATIPInv, MaxTableSize, hosts, FreeHosts, 
                                UsedHosts, Ports, ExtraPorts, ExtraExtraPorts, 
                                T, FreeIPs, PrivIPs, PubIPs, PortSpace, 
                                UsedIPs, Connections, SendQueue, RcvQueue, MAX, 
                                Marker1, Marker2, CmdConnect, CmdDisconnect, 
                                PortSpaceFull, stack, depth_, host_, hidx_, 
                                host_idx_, pidx_, port_idx_, depth_D, ip_, 
                                host_D, connDomain_, cidx_, conn_, host_Con, 
                                ip_C, hidx_C, host_idx_C, pidx_C, port_idx_C, 
                                host_Dis, ip_Di, connDomain_D, cidx_D, conn_D, 
                                host, ip, connDomain_Di, cidx_Di, conn_Di, 
                                depth_P, pkt_, ipkt_, entry_, conn_P, 
                                hostMarker_, ip_idx_, ipidx_, ip_P, host_P, 
                                pkt_P, ipkt_P, entry_P, conn_Pu, hostMarker_P, 
                                ip_idx_P, ipidx_P, ip_Pu, host_Pu, IP, 
                                conn_PrivTo, sport_, dstAddr_, dport_, pkt_Pr, 
                                hostMarker_Pr, daddr_, hostidx_, hidx_P, 
                                otherEntry_, i_, indicies_, portDomain_, 
                                sourcePort_, destPort_, new_sport_, conn, 
                                sport, dstAddr, dport, pkt_Pri, hostMarker_Pri, 
                                daddr_P, hostidx_P, hidx_Pr, otherEntry_P, i_P, 
                                indicies_P, portDomain_P, sourcePort_P, 
                                destPort_P, new_sport_P, depth_Pr, pkt_Priv, 
                                conn_Pr, hostMarker_Priv, daddr_Pr, hostidx_Pr, 
                                hidx_Pri, otherEntry_Pr, i_Pr, indicies_Pr, 
                                portDomain_Pr, sourcePort_Pr, destPort_Pr, 
                                new_sport_Pr, pkt_PrivT, conn_Pri, 
                                hostMarker_PrivT, daddr_Pri, hostidx_Pri, 
                                hidx_Priv, otherEntry_Pri, i_Pri, indicies_Pri, 
                                portDomain_Pri, sourcePort_Pri, destPort_Pri, 
                                new_sport_Pri, depth_C, host_C, hidx_Co, 
                                host_idx_Co, pidx_Co, port_idx_Co, connhost, 
                                port, host_Co, hidx_Con, host_idx, pidx, 
                                port_idx, depth_Di, ip_D, host_Di, connDomain, 
                                cidx, conn_Dis, depth_Pu, pkt_Pu, ipkt_Pu, 
                                entry_Pu, conn_Pub, hostMarker_Pu, ip_idx_Pu, 
                                ipidx_Pu, ip_Pub, host_Pub, depth_Pri, 
                                pkt_PrivTo, conn_Priv, hostMarker_PrivTo, 
                                daddr_Priv, hostidx_Priv, hidx_PrivT, 
                                otherEntry_Priv, i_Priv, indicies_Priv, 
                                portDomain_Priv, sourcePort_Priv, 
                                destPort_Priv, new_sport_Priv, good, depth_E, 
                                i_E, j_, ip_E, host_E, indecies_, depth_Ev, 
                                i_Ev, j_E, ip_Ev, host_Ev, indecies_E, i_C, 
                                i_Ch, depth_Pub, pkt_Pub, ipkt_Pub, entry_Pub, 
                                conn_PubT, hostMarker_Pub, ip_idx_Pub, 
                                ipidx_Pub, ip_PubT, host_PubT, depth_Priv, 
                                pkt_PrivToP, conn_PrivT, hostMarker_PrivToP, 
                                daddr, hostidx, hidx, otherEntry, i_PrivT, 
                                indicies, portDomain, sourcePort, destPort, 
                                new_sport, depth_PubT, pkt, ipkt, entry, 
                                conn_PubTo, hostMarker, ip_idx, ipidx, 
                                ip_PubTo, host_PubTo, depth, i_Eve, j, ip_Eve, 
                                host_Eve, indecies, i, aa >>

ATIP9_(self) == /\ pc[self] = "ATIP9_"
                /\ /\ connhost' = [connhost EXCEPT ![self] = H2]
                   /\ port' = [port EXCEPT ![self] = F]
                   /\ stack' = [stack EXCEPT ![self] = << [ procedure |->  "ConnectMan3",
                                                            pc        |->  "ATIP10_",
                                                            host_Co   |->  host_Co[self],
                                                            hidx_Con  |->  hidx_Con[self],
                                                            host_idx  |->  host_idx[self],
                                                            pidx      |->  pidx[self],
                                                            port_idx  |->  port_idx[self],
                                                            connhost  |->  connhost[self],
                                                            port      |->  port[self] ] >>
                                                        \o stack[self]]
                /\ host_Co' = [host_Co EXCEPT ![self] = defaultInitValue]
                /\ hidx_Con' = [hidx_Con EXCEPT ![self] = defaultInitValue]
                /\ host_idx' = [host_idx EXCEPT ![self] = defaultInitValue]
                /\ pidx' = [pidx EXCEPT ![self] = defaultInitValue]
                /\ port_idx' = [port_idx EXCEPT ![self] = defaultInitValue]
                /\ pc' = [pc EXCEPT ![self] = "connectIf"]
                /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, Bb, Cc, 
                                Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, Ll, Mm, Nn, Oo, 
                                Pp, Qq, Rr, Ss, Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, 
                                H2, MaxPorts, EP1, PortMap1, EP2, PortMap2, 
                                TableFull, EvictionReroute, PortScanInv, 
                                ATIPInv, MaxTableSize, hosts, FreeHosts, 
                                UsedHosts, Ports, ExtraPorts, ExtraExtraPorts, 
                                T, FreeIPs, PrivIPs, PubIPs, PortSpace, 
                                UsedIPs, Connections, SendQueue, RcvQueue, MAX, 
                                Marker1, Marker2, CmdConnect, CmdDisconnect, 
                                PortSpaceFull, depth_, host_, hidx_, host_idx_, 
                                pidx_, port_idx_, depth_D, ip_, host_D, 
                                connDomain_, cidx_, conn_, host_Con, ip_C, 
                                hidx_C, host_idx_C, pidx_C, port_idx_C, 
                                host_Dis, ip_Di, connDomain_D, cidx_D, conn_D, 
                                host, ip, connDomain_Di, cidx_Di, conn_Di, 
                                depth_P, pkt_, ipkt_, entry_, conn_P, 
                                hostMarker_, ip_idx_, ipidx_, ip_P, host_P, 
                                pkt_P, ipkt_P, entry_P, conn_Pu, hostMarker_P, 
                                ip_idx_P, ipidx_P, ip_Pu, host_Pu, IP, 
                                conn_PrivTo, sport_, dstAddr_, dport_, pkt_Pr, 
                                hostMarker_Pr, daddr_, hostidx_, hidx_P, 
                                otherEntry_, i_, indicies_, portDomain_, 
                                sourcePort_, destPort_, new_sport_, conn, 
                                sport, dstAddr, dport, pkt_Pri, hostMarker_Pri, 
                                daddr_P, hostidx_P, hidx_Pr, otherEntry_P, i_P, 
                                indicies_P, portDomain_P, sourcePort_P, 
                                destPort_P, new_sport_P, depth_Pr, pkt_Priv, 
                                conn_Pr, hostMarker_Priv, daddr_Pr, hostidx_Pr, 
                                hidx_Pri, otherEntry_Pr, i_Pr, indicies_Pr, 
                                portDomain_Pr, sourcePort_Pr, destPort_Pr, 
                                new_sport_Pr, pkt_PrivT, conn_Pri, 
                                hostMarker_PrivT, daddr_Pri, hostidx_Pri, 
                                hidx_Priv, otherEntry_Pri, i_Pri, indicies_Pri, 
                                portDomain_Pri, sourcePort_Pri, destPort_Pri, 
                                new_sport_Pri, depth_C, host_C, hidx_Co, 
                                host_idx_Co, pidx_Co, port_idx_Co, depth_Di, 
                                ip_D, host_Di, connDomain, cidx, conn_Dis, 
                                depth_Pu, pkt_Pu, ipkt_Pu, entry_Pu, conn_Pub, 
                                hostMarker_Pu, ip_idx_Pu, ipidx_Pu, ip_Pub, 
                                host_Pub, depth_Pri, pkt_PrivTo, conn_Priv, 
                                hostMarker_PrivTo, daddr_Priv, hostidx_Priv, 
                                hidx_PrivT, otherEntry_Priv, i_Priv, 
                                indicies_Priv, portDomain_Priv, 
                                sourcePort_Priv, destPort_Priv, new_sport_Priv, 
                                good, depth_E, i_E, j_, ip_E, host_E, 
                                indecies_, depth_Ev, i_Ev, j_E, ip_Ev, host_Ev, 
                                indecies_E, i_C, i_Ch, depth_Pub, pkt_Pub, 
                                ipkt_Pub, entry_Pub, conn_PubT, hostMarker_Pub, 
                                ip_idx_Pub, ipidx_Pub, ip_PubT, host_PubT, 
                                depth_Priv, pkt_PrivToP, conn_PrivT, 
                                hostMarker_PrivToP, daddr, hostidx, hidx, 
                                otherEntry, i_PrivT, indicies, portDomain, 
                                sourcePort, destPort, new_sport, depth_PubT, 
                                pkt, ipkt, entry, conn_PubTo, hostMarker, 
                                ip_idx, ipidx, ip_PubTo, host_PubTo, depth, 
                                i_Eve, j, ip_Eve, host_Eve, indecies, i, aa >>

ATIP10_(self) == /\ pc[self] = "ATIP10_"
                 /\ PrintT(<<"SendQueue after Connect:", SendQueue>>)
                 /\ pc' = [pc EXCEPT ![self] = "ATIP11_"]
                 /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, Bb, Cc, 
                                 Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, Ll, Mm, Nn, 
                                 Oo, Pp, Qq, Rr, Ss, Tt, Uu, Vv, Ww, Xx, Yy, 
                                 Zz, H1, H2, MaxPorts, EP1, PortMap1, EP2, 
                                 PortMap2, TableFull, EvictionReroute, 
                                 PortScanInv, ATIPInv, MaxTableSize, hosts, 
                                 FreeHosts, UsedHosts, Ports, ExtraPorts, 
                                 ExtraExtraPorts, T, FreeIPs, PrivIPs, PubIPs, 
                                 PortSpace, UsedIPs, Connections, SendQueue, 
                                 RcvQueue, MAX, Marker1, Marker2, CmdConnect, 
                                 CmdDisconnect, PortSpaceFull, stack, depth_, 
                                 host_, hidx_, host_idx_, pidx_, port_idx_, 
                                 depth_D, ip_, host_D, connDomain_, cidx_, 
                                 conn_, host_Con, ip_C, hidx_C, host_idx_C, 
                                 pidx_C, port_idx_C, host_Dis, ip_Di, 
                                 connDomain_D, cidx_D, conn_D, host, ip, 
                                 connDomain_Di, cidx_Di, conn_Di, depth_P, 
                                 pkt_, ipkt_, entry_, conn_P, hostMarker_, 
                                 ip_idx_, ipidx_, ip_P, host_P, pkt_P, ipkt_P, 
                                 entry_P, conn_Pu, hostMarker_P, ip_idx_P, 
                                 ipidx_P, ip_Pu, host_Pu, IP, conn_PrivTo, 
                                 sport_, dstAddr_, dport_, pkt_Pr, 
                                 hostMarker_Pr, daddr_, hostidx_, hidx_P, 
                                 otherEntry_, i_, indicies_, portDomain_, 
                                 sourcePort_, destPort_, new_sport_, conn, 
                                 sport, dstAddr, dport, pkt_Pri, 
                                 hostMarker_Pri, daddr_P, hostidx_P, hidx_Pr, 
                                 otherEntry_P, i_P, indicies_P, portDomain_P, 
                                 sourcePort_P, destPort_P, new_sport_P, 
                                 depth_Pr, pkt_Priv, conn_Pr, hostMarker_Priv, 
                                 daddr_Pr, hostidx_Pr, hidx_Pri, otherEntry_Pr, 
                                 i_Pr, indicies_Pr, portDomain_Pr, 
                                 sourcePort_Pr, destPort_Pr, new_sport_Pr, 
                                 pkt_PrivT, conn_Pri, hostMarker_PrivT, 
                                 daddr_Pri, hostidx_Pri, hidx_Priv, 
                                 otherEntry_Pri, i_Pri, indicies_Pri, 
                                 portDomain_Pri, sourcePort_Pri, destPort_Pri, 
                                 new_sport_Pri, depth_C, host_C, hidx_Co, 
                                 host_idx_Co, pidx_Co, port_idx_Co, connhost, 
                                 port, host_Co, hidx_Con, host_idx, pidx, 
                                 port_idx, depth_Di, ip_D, host_Di, connDomain, 
                                 cidx, conn_Dis, depth_Pu, pkt_Pu, ipkt_Pu, 
                                 entry_Pu, conn_Pub, hostMarker_Pu, ip_idx_Pu, 
                                 ipidx_Pu, ip_Pub, host_Pub, depth_Pri, 
                                 pkt_PrivTo, conn_Priv, hostMarker_PrivTo, 
                                 daddr_Priv, hostidx_Priv, hidx_PrivT, 
                                 otherEntry_Priv, i_Priv, indicies_Priv, 
                                 portDomain_Priv, sourcePort_Priv, 
                                 destPort_Priv, new_sport_Priv, good, depth_E, 
                                 i_E, j_, ip_E, host_E, indecies_, depth_Ev, 
                                 i_Ev, j_E, ip_Ev, host_Ev, indecies_E, i_C, 
                                 i_Ch, depth_Pub, pkt_Pub, ipkt_Pub, entry_Pub, 
                                 conn_PubT, hostMarker_Pub, ip_idx_Pub, 
                                 ipidx_Pub, ip_PubT, host_PubT, depth_Priv, 
                                 pkt_PrivToP, conn_PrivT, hostMarker_PrivToP, 
                                 daddr, hostidx, hidx, otherEntry, i_PrivT, 
                                 indicies, portDomain, sourcePort, destPort, 
                                 new_sport, depth_PubT, pkt, ipkt, entry, 
                                 conn_PubTo, hostMarker, ip_idx, ipidx, 
                                 ip_PubTo, host_PubTo, depth, i_Eve, j, ip_Eve, 
                                 host_Eve, indecies, i, aa >>

ATIP11_(self) == /\ pc[self] = "ATIP11_"
                 /\ stack' = [stack EXCEPT ![self] = << [ procedure |->  "PubToPrivMan",
                                                          pc        |->  "ATIP12_",
                                                          pkt_P     |->  pkt_P[self],
                                                          ipkt_P    |->  ipkt_P[self],
                                                          entry_P   |->  entry_P[self],
                                                          conn_Pu   |->  conn_Pu[self],
                                                          hostMarker_P |->  hostMarker_P[self],
                                                          ip_idx_P  |->  ip_idx_P[self],
                                                          ipidx_P   |->  ipidx_P[self],
                                                          ip_Pu     |->  ip_Pu[self],
                                                          host_Pu   |->  host_Pu[self],
                                                          IP        |->  IP[self] ] >>
                                                      \o stack[self]]
                 /\ pkt_P' = [pkt_P EXCEPT ![self] = defaultInitValue]
                 /\ ipkt_P' = [ipkt_P EXCEPT ![self] = defaultInitValue]
                 /\ entry_P' = [entry_P EXCEPT ![self] = defaultInitValue]
                 /\ conn_Pu' = [conn_Pu EXCEPT ![self] = defaultInitValue]
                 /\ hostMarker_P' = [hostMarker_P EXCEPT ![self] = defaultInitValue]
                 /\ ip_idx_P' = [ip_idx_P EXCEPT ![self] = defaultInitValue]
                 /\ ipidx_P' = [ipidx_P EXCEPT ![self] = defaultInitValue]
                 /\ ip_Pu' = [ip_Pu EXCEPT ![self] = defaultInitValue]
                 /\ host_Pu' = [host_Pu EXCEPT ![self] = defaultInitValue]
                 /\ IP' = [IP EXCEPT ![self] = defaultInitValue]
                 /\ pc' = [pc EXCEPT ![self] = "pubtoprivManStart"]
                 /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, Bb, Cc, 
                                 Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, Ll, Mm, Nn, 
                                 Oo, Pp, Qq, Rr, Ss, Tt, Uu, Vv, Ww, Xx, Yy, 
                                 Zz, H1, H2, MaxPorts, EP1, PortMap1, EP2, 
                                 PortMap2, TableFull, EvictionReroute, 
                                 PortScanInv, ATIPInv, MaxTableSize, hosts, 
                                 FreeHosts, UsedHosts, Ports, ExtraPorts, 
                                 ExtraExtraPorts, T, FreeIPs, PrivIPs, PubIPs, 
                                 PortSpace, UsedIPs, Connections, SendQueue, 
                                 RcvQueue, MAX, Marker1, Marker2, CmdConnect, 
                                 CmdDisconnect, PortSpaceFull, depth_, host_, 
                                 hidx_, host_idx_, pidx_, port_idx_, depth_D, 
                                 ip_, host_D, connDomain_, cidx_, conn_, 
                                 host_Con, ip_C, hidx_C, host_idx_C, pidx_C, 
                                 port_idx_C, host_Dis, ip_Di, connDomain_D, 
                                 cidx_D, conn_D, host, ip, connDomain_Di, 
                                 cidx_Di, conn_Di, depth_P, pkt_, ipkt_, 
                                 entry_, conn_P, hostMarker_, ip_idx_, ipidx_, 
                                 ip_P, host_P, conn_PrivTo, sport_, dstAddr_, 
                                 dport_, pkt_Pr, hostMarker_Pr, daddr_, 
                                 hostidx_, hidx_P, otherEntry_, i_, indicies_, 
                                 portDomain_, sourcePort_, destPort_, 
                                 new_sport_, conn, sport, dstAddr, dport, 
                                 pkt_Pri, hostMarker_Pri, daddr_P, hostidx_P, 
                                 hidx_Pr, otherEntry_P, i_P, indicies_P, 
                                 portDomain_P, sourcePort_P, destPort_P, 
                                 new_sport_P, depth_Pr, pkt_Priv, conn_Pr, 
                                 hostMarker_Priv, daddr_Pr, hostidx_Pr, 
                                 hidx_Pri, otherEntry_Pr, i_Pr, indicies_Pr, 
                                 portDomain_Pr, sourcePort_Pr, destPort_Pr, 
                                 new_sport_Pr, pkt_PrivT, conn_Pri, 
                                 hostMarker_PrivT, daddr_Pri, hostidx_Pri, 
                                 hidx_Priv, otherEntry_Pri, i_Pri, 
                                 indicies_Pri, portDomain_Pri, sourcePort_Pri, 
                                 destPort_Pri, new_sport_Pri, depth_C, host_C, 
                                 hidx_Co, host_idx_Co, pidx_Co, port_idx_Co, 
                                 connhost, port, host_Co, hidx_Con, host_idx, 
                                 pidx, port_idx, depth_Di, ip_D, host_Di, 
                                 connDomain, cidx, conn_Dis, depth_Pu, pkt_Pu, 
                                 ipkt_Pu, entry_Pu, conn_Pub, hostMarker_Pu, 
                                 ip_idx_Pu, ipidx_Pu, ip_Pub, host_Pub, 
                                 depth_Pri, pkt_PrivTo, conn_Priv, 
                                 hostMarker_PrivTo, daddr_Priv, hostidx_Priv, 
                                 hidx_PrivT, otherEntry_Priv, i_Priv, 
                                 indicies_Priv, portDomain_Priv, 
                                 sourcePort_Priv, destPort_Priv, 
                                 new_sport_Priv, good, depth_E, i_E, j_, ip_E, 
                                 host_E, indecies_, depth_Ev, i_Ev, j_E, ip_Ev, 
                                 host_Ev, indecies_E, i_C, i_Ch, depth_Pub, 
                                 pkt_Pub, ipkt_Pub, entry_Pub, conn_PubT, 
                                 hostMarker_Pub, ip_idx_Pub, ipidx_Pub, 
                                 ip_PubT, host_PubT, depth_Priv, pkt_PrivToP, 
                                 conn_PrivT, hostMarker_PrivToP, daddr, 
                                 hostidx, hidx, otherEntry, i_PrivT, indicies, 
                                 portDomain, sourcePort, destPort, new_sport, 
                                 depth_PubT, pkt, ipkt, entry, conn_PubTo, 
                                 hostMarker, ip_idx, ipidx, ip_PubTo, 
                                 host_PubTo, depth, i_Eve, j, ip_Eve, host_Eve, 
                                 indecies, i, aa >>

ATIP12_(self) == /\ pc[self] = "ATIP12_"
                 /\ PrintT(<<"SendQueue after pubtopriv:", SendQueue>>)
                 /\ pc' = [pc EXCEPT ![self] = "ATIP13_"]
                 /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, Bb, Cc, 
                                 Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, Ll, Mm, Nn, 
                                 Oo, Pp, Qq, Rr, Ss, Tt, Uu, Vv, Ww, Xx, Yy, 
                                 Zz, H1, H2, MaxPorts, EP1, PortMap1, EP2, 
                                 PortMap2, TableFull, EvictionReroute, 
                                 PortScanInv, ATIPInv, MaxTableSize, hosts, 
                                 FreeHosts, UsedHosts, Ports, ExtraPorts, 
                                 ExtraExtraPorts, T, FreeIPs, PrivIPs, PubIPs, 
                                 PortSpace, UsedIPs, Connections, SendQueue, 
                                 RcvQueue, MAX, Marker1, Marker2, CmdConnect, 
                                 CmdDisconnect, PortSpaceFull, stack, depth_, 
                                 host_, hidx_, host_idx_, pidx_, port_idx_, 
                                 depth_D, ip_, host_D, connDomain_, cidx_, 
                                 conn_, host_Con, ip_C, hidx_C, host_idx_C, 
                                 pidx_C, port_idx_C, host_Dis, ip_Di, 
                                 connDomain_D, cidx_D, conn_D, host, ip, 
                                 connDomain_Di, cidx_Di, conn_Di, depth_P, 
                                 pkt_, ipkt_, entry_, conn_P, hostMarker_, 
                                 ip_idx_, ipidx_, ip_P, host_P, pkt_P, ipkt_P, 
                                 entry_P, conn_Pu, hostMarker_P, ip_idx_P, 
                                 ipidx_P, ip_Pu, host_Pu, IP, conn_PrivTo, 
                                 sport_, dstAddr_, dport_, pkt_Pr, 
                                 hostMarker_Pr, daddr_, hostidx_, hidx_P, 
                                 otherEntry_, i_, indicies_, portDomain_, 
                                 sourcePort_, destPort_, new_sport_, conn, 
                                 sport, dstAddr, dport, pkt_Pri, 
                                 hostMarker_Pri, daddr_P, hostidx_P, hidx_Pr, 
                                 otherEntry_P, i_P, indicies_P, portDomain_P, 
                                 sourcePort_P, destPort_P, new_sport_P, 
                                 depth_Pr, pkt_Priv, conn_Pr, hostMarker_Priv, 
                                 daddr_Pr, hostidx_Pr, hidx_Pri, otherEntry_Pr, 
                                 i_Pr, indicies_Pr, portDomain_Pr, 
                                 sourcePort_Pr, destPort_Pr, new_sport_Pr, 
                                 pkt_PrivT, conn_Pri, hostMarker_PrivT, 
                                 daddr_Pri, hostidx_Pri, hidx_Priv, 
                                 otherEntry_Pri, i_Pri, indicies_Pri, 
                                 portDomain_Pri, sourcePort_Pri, destPort_Pri, 
                                 new_sport_Pri, depth_C, host_C, hidx_Co, 
                                 host_idx_Co, pidx_Co, port_idx_Co, connhost, 
                                 port, host_Co, hidx_Con, host_idx, pidx, 
                                 port_idx, depth_Di, ip_D, host_Di, connDomain, 
                                 cidx, conn_Dis, depth_Pu, pkt_Pu, ipkt_Pu, 
                                 entry_Pu, conn_Pub, hostMarker_Pu, ip_idx_Pu, 
                                 ipidx_Pu, ip_Pub, host_Pub, depth_Pri, 
                                 pkt_PrivTo, conn_Priv, hostMarker_PrivTo, 
                                 daddr_Priv, hostidx_Priv, hidx_PrivT, 
                                 otherEntry_Priv, i_Priv, indicies_Priv, 
                                 portDomain_Priv, sourcePort_Priv, 
                                 destPort_Priv, new_sport_Priv, good, depth_E, 
                                 i_E, j_, ip_E, host_E, indecies_, depth_Ev, 
                                 i_Ev, j_E, ip_Ev, host_Ev, indecies_E, i_C, 
                                 i_Ch, depth_Pub, pkt_Pub, ipkt_Pub, entry_Pub, 
                                 conn_PubT, hostMarker_Pub, ip_idx_Pub, 
                                 ipidx_Pub, ip_PubT, host_PubT, depth_Priv, 
                                 pkt_PrivToP, conn_PrivT, hostMarker_PrivToP, 
                                 daddr, hostidx, hidx, otherEntry, i_PrivT, 
                                 indicies, portDomain, sourcePort, destPort, 
                                 new_sport, depth_PubT, pkt, ipkt, entry, 
                                 conn_PubTo, hostMarker, ip_idx, ipidx, 
                                 ip_PubTo, host_PubTo, depth, i_Eve, j, ip_Eve, 
                                 host_Eve, indecies, i, aa >>

ATIP13_(self) == /\ pc[self] = "ATIP13_"
                 /\ PrintT(<<"T after pubtopriv: ",T>>)
                 /\ pc' = [pc EXCEPT ![self] = "Error"]
                 /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, Bb, Cc, 
                                 Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, Ll, Mm, Nn, 
                                 Oo, Pp, Qq, Rr, Ss, Tt, Uu, Vv, Ww, Xx, Yy, 
                                 Zz, H1, H2, MaxPorts, EP1, PortMap1, EP2, 
                                 PortMap2, TableFull, EvictionReroute, 
                                 PortScanInv, ATIPInv, MaxTableSize, hosts, 
                                 FreeHosts, UsedHosts, Ports, ExtraPorts, 
                                 ExtraExtraPorts, T, FreeIPs, PrivIPs, PubIPs, 
                                 PortSpace, UsedIPs, Connections, SendQueue, 
                                 RcvQueue, MAX, Marker1, Marker2, CmdConnect, 
                                 CmdDisconnect, PortSpaceFull, stack, depth_, 
                                 host_, hidx_, host_idx_, pidx_, port_idx_, 
                                 depth_D, ip_, host_D, connDomain_, cidx_, 
                                 conn_, host_Con, ip_C, hidx_C, host_idx_C, 
                                 pidx_C, port_idx_C, host_Dis, ip_Di, 
                                 connDomain_D, cidx_D, conn_D, host, ip, 
                                 connDomain_Di, cidx_Di, conn_Di, depth_P, 
                                 pkt_, ipkt_, entry_, conn_P, hostMarker_, 
                                 ip_idx_, ipidx_, ip_P, host_P, pkt_P, ipkt_P, 
                                 entry_P, conn_Pu, hostMarker_P, ip_idx_P, 
                                 ipidx_P, ip_Pu, host_Pu, IP, conn_PrivTo, 
                                 sport_, dstAddr_, dport_, pkt_Pr, 
                                 hostMarker_Pr, daddr_, hostidx_, hidx_P, 
                                 otherEntry_, i_, indicies_, portDomain_, 
                                 sourcePort_, destPort_, new_sport_, conn, 
                                 sport, dstAddr, dport, pkt_Pri, 
                                 hostMarker_Pri, daddr_P, hostidx_P, hidx_Pr, 
                                 otherEntry_P, i_P, indicies_P, portDomain_P, 
                                 sourcePort_P, destPort_P, new_sport_P, 
                                 depth_Pr, pkt_Priv, conn_Pr, hostMarker_Priv, 
                                 daddr_Pr, hostidx_Pr, hidx_Pri, otherEntry_Pr, 
                                 i_Pr, indicies_Pr, portDomain_Pr, 
                                 sourcePort_Pr, destPort_Pr, new_sport_Pr, 
                                 pkt_PrivT, conn_Pri, hostMarker_PrivT, 
                                 daddr_Pri, hostidx_Pri, hidx_Priv, 
                                 otherEntry_Pri, i_Pri, indicies_Pri, 
                                 portDomain_Pri, sourcePort_Pri, destPort_Pri, 
                                 new_sport_Pri, depth_C, host_C, hidx_Co, 
                                 host_idx_Co, pidx_Co, port_idx_Co, connhost, 
                                 port, host_Co, hidx_Con, host_idx, pidx, 
                                 port_idx, depth_Di, ip_D, host_Di, connDomain, 
                                 cidx, conn_Dis, depth_Pu, pkt_Pu, ipkt_Pu, 
                                 entry_Pu, conn_Pub, hostMarker_Pu, ip_idx_Pu, 
                                 ipidx_Pu, ip_Pub, host_Pub, depth_Pri, 
                                 pkt_PrivTo, conn_Priv, hostMarker_PrivTo, 
                                 daddr_Priv, hostidx_Priv, hidx_PrivT, 
                                 otherEntry_Priv, i_Priv, indicies_Priv, 
                                 portDomain_Priv, sourcePort_Priv, 
                                 destPort_Priv, new_sport_Priv, good, depth_E, 
                                 i_E, j_, ip_E, host_E, indecies_, depth_Ev, 
                                 i_Ev, j_E, ip_Ev, host_Ev, indecies_E, i_C, 
                                 i_Ch, depth_Pub, pkt_Pub, ipkt_Pub, entry_Pub, 
                                 conn_PubT, hostMarker_Pub, ip_idx_Pub, 
                                 ipidx_Pub, ip_PubT, host_PubT, depth_Priv, 
                                 pkt_PrivToP, conn_PrivT, hostMarker_PrivToP, 
                                 daddr, hostidx, hidx, otherEntry, i_PrivT, 
                                 indicies, portDomain, sourcePort, destPort, 
                                 new_sport, depth_PubT, pkt, ipkt, entry, 
                                 conn_PubTo, hostMarker, ip_idx, ipidx, 
                                 ip_PubTo, host_PubTo, depth, i_Eve, j, ip_Eve, 
                                 host_Eve, indecies, i, aa >>

ForceATIP(self) == ATIP1_(self) \/ ATIP2_(self) \/ ATIP3_(self)
                      \/ ATIP4_(self) \/ ATIP5_(self) \/ ATIP6_(self)
                      \/ ATIP7_(self) \/ ATIP8_(self) \/ ATIP9_(self)
                      \/ ATIP10_(self) \/ ATIP11_(self) \/ ATIP12_(self)
                      \/ ATIP13_(self)

ATIP1(self) == /\ pc[self] = "ATIP1"
               /\ /\ connhost' = [connhost EXCEPT ![self] = H1]
                  /\ port' = [port EXCEPT ![self] = D]
                  /\ stack' = [stack EXCEPT ![self] = << [ procedure |->  "ConnectMan3",
                                                           pc        |->  "ATIP2",
                                                           host_Co   |->  host_Co[self],
                                                           hidx_Con  |->  hidx_Con[self],
                                                           host_idx  |->  host_idx[self],
                                                           pidx      |->  pidx[self],
                                                           port_idx  |->  port_idx[self],
                                                           connhost  |->  connhost[self],
                                                           port      |->  port[self] ] >>
                                                       \o stack[self]]
               /\ host_Co' = [host_Co EXCEPT ![self] = defaultInitValue]
               /\ hidx_Con' = [hidx_Con EXCEPT ![self] = defaultInitValue]
               /\ host_idx' = [host_idx EXCEPT ![self] = defaultInitValue]
               /\ pidx' = [pidx EXCEPT ![self] = defaultInitValue]
               /\ port_idx' = [port_idx EXCEPT ![self] = defaultInitValue]
               /\ pc' = [pc EXCEPT ![self] = "connectIf"]
               /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, Bb, Cc, 
                               Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, Ll, Mm, Nn, Oo, 
                               Pp, Qq, Rr, Ss, Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, 
                               H2, MaxPorts, EP1, PortMap1, EP2, PortMap2, 
                               TableFull, EvictionReroute, PortScanInv, 
                               ATIPInv, MaxTableSize, hosts, FreeHosts, 
                               UsedHosts, Ports, ExtraPorts, ExtraExtraPorts, 
                               T, FreeIPs, PrivIPs, PubIPs, PortSpace, UsedIPs, 
                               Connections, SendQueue, RcvQueue, MAX, Marker1, 
                               Marker2, CmdConnect, CmdDisconnect, 
                               PortSpaceFull, depth_, host_, hidx_, host_idx_, 
                               pidx_, port_idx_, depth_D, ip_, host_D, 
                               connDomain_, cidx_, conn_, host_Con, ip_C, 
                               hidx_C, host_idx_C, pidx_C, port_idx_C, 
                               host_Dis, ip_Di, connDomain_D, cidx_D, conn_D, 
                               host, ip, connDomain_Di, cidx_Di, conn_Di, 
                               depth_P, pkt_, ipkt_, entry_, conn_P, 
                               hostMarker_, ip_idx_, ipidx_, ip_P, host_P, 
                               pkt_P, ipkt_P, entry_P, conn_Pu, hostMarker_P, 
                               ip_idx_P, ipidx_P, ip_Pu, host_Pu, IP, 
                               conn_PrivTo, sport_, dstAddr_, dport_, pkt_Pr, 
                               hostMarker_Pr, daddr_, hostidx_, hidx_P, 
                               otherEntry_, i_, indicies_, portDomain_, 
                               sourcePort_, destPort_, new_sport_, conn, sport, 
                               dstAddr, dport, pkt_Pri, hostMarker_Pri, 
                               daddr_P, hostidx_P, hidx_Pr, otherEntry_P, i_P, 
                               indicies_P, portDomain_P, sourcePort_P, 
                               destPort_P, new_sport_P, depth_Pr, pkt_Priv, 
                               conn_Pr, hostMarker_Priv, daddr_Pr, hostidx_Pr, 
                               hidx_Pri, otherEntry_Pr, i_Pr, indicies_Pr, 
                               portDomain_Pr, sourcePort_Pr, destPort_Pr, 
                               new_sport_Pr, pkt_PrivT, conn_Pri, 
                               hostMarker_PrivT, daddr_Pri, hostidx_Pri, 
                               hidx_Priv, otherEntry_Pri, i_Pri, indicies_Pri, 
                               portDomain_Pri, sourcePort_Pri, destPort_Pri, 
                               new_sport_Pri, depth_C, host_C, hidx_Co, 
                               host_idx_Co, pidx_Co, port_idx_Co, depth_Di, 
                               ip_D, host_Di, connDomain, cidx, conn_Dis, 
                               depth_Pu, pkt_Pu, ipkt_Pu, entry_Pu, conn_Pub, 
                               hostMarker_Pu, ip_idx_Pu, ipidx_Pu, ip_Pub, 
                               host_Pub, depth_Pri, pkt_PrivTo, conn_Priv, 
                               hostMarker_PrivTo, daddr_Priv, hostidx_Priv, 
                               hidx_PrivT, otherEntry_Priv, i_Priv, 
                               indicies_Priv, portDomain_Priv, sourcePort_Priv, 
                               destPort_Priv, new_sport_Priv, good, depth_E, 
                               i_E, j_, ip_E, host_E, indecies_, depth_Ev, 
                               i_Ev, j_E, ip_Ev, host_Ev, indecies_E, i_C, 
                               i_Ch, depth_Pub, pkt_Pub, ipkt_Pub, entry_Pub, 
                               conn_PubT, hostMarker_Pub, ip_idx_Pub, 
                               ipidx_Pub, ip_PubT, host_PubT, depth_Priv, 
                               pkt_PrivToP, conn_PrivT, hostMarker_PrivToP, 
                               daddr, hostidx, hidx, otherEntry, i_PrivT, 
                               indicies, portDomain, sourcePort, destPort, 
                               new_sport, depth_PubT, pkt, ipkt, entry, 
                               conn_PubTo, hostMarker, ip_idx, ipidx, ip_PubTo, 
                               host_PubTo, depth, i_Eve, j, ip_Eve, host_Eve, 
                               indecies, i, aa >>

ATIP2(self) == /\ pc[self] = "ATIP2"
               /\ PrintT(<<"SendQueue after Connect:", SendQueue>>)
               /\ pc' = [pc EXCEPT ![self] = "ATIP3"]
               /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, Bb, Cc, 
                               Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, Ll, Mm, Nn, Oo, 
                               Pp, Qq, Rr, Ss, Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, 
                               H2, MaxPorts, EP1, PortMap1, EP2, PortMap2, 
                               TableFull, EvictionReroute, PortScanInv, 
                               ATIPInv, MaxTableSize, hosts, FreeHosts, 
                               UsedHosts, Ports, ExtraPorts, ExtraExtraPorts, 
                               T, FreeIPs, PrivIPs, PubIPs, PortSpace, UsedIPs, 
                               Connections, SendQueue, RcvQueue, MAX, Marker1, 
                               Marker2, CmdConnect, CmdDisconnect, 
                               PortSpaceFull, stack, depth_, host_, hidx_, 
                               host_idx_, pidx_, port_idx_, depth_D, ip_, 
                               host_D, connDomain_, cidx_, conn_, host_Con, 
                               ip_C, hidx_C, host_idx_C, pidx_C, port_idx_C, 
                               host_Dis, ip_Di, connDomain_D, cidx_D, conn_D, 
                               host, ip, connDomain_Di, cidx_Di, conn_Di, 
                               depth_P, pkt_, ipkt_, entry_, conn_P, 
                               hostMarker_, ip_idx_, ipidx_, ip_P, host_P, 
                               pkt_P, ipkt_P, entry_P, conn_Pu, hostMarker_P, 
                               ip_idx_P, ipidx_P, ip_Pu, host_Pu, IP, 
                               conn_PrivTo, sport_, dstAddr_, dport_, pkt_Pr, 
                               hostMarker_Pr, daddr_, hostidx_, hidx_P, 
                               otherEntry_, i_, indicies_, portDomain_, 
                               sourcePort_, destPort_, new_sport_, conn, sport, 
                               dstAddr, dport, pkt_Pri, hostMarker_Pri, 
                               daddr_P, hostidx_P, hidx_Pr, otherEntry_P, i_P, 
                               indicies_P, portDomain_P, sourcePort_P, 
                               destPort_P, new_sport_P, depth_Pr, pkt_Priv, 
                               conn_Pr, hostMarker_Priv, daddr_Pr, hostidx_Pr, 
                               hidx_Pri, otherEntry_Pr, i_Pr, indicies_Pr, 
                               portDomain_Pr, sourcePort_Pr, destPort_Pr, 
                               new_sport_Pr, pkt_PrivT, conn_Pri, 
                               hostMarker_PrivT, daddr_Pri, hostidx_Pri, 
                               hidx_Priv, otherEntry_Pri, i_Pri, indicies_Pri, 
                               portDomain_Pri, sourcePort_Pri, destPort_Pri, 
                               new_sport_Pri, depth_C, host_C, hidx_Co, 
                               host_idx_Co, pidx_Co, port_idx_Co, connhost, 
                               port, host_Co, hidx_Con, host_idx, pidx, 
                               port_idx, depth_Di, ip_D, host_Di, connDomain, 
                               cidx, conn_Dis, depth_Pu, pkt_Pu, ipkt_Pu, 
                               entry_Pu, conn_Pub, hostMarker_Pu, ip_idx_Pu, 
                               ipidx_Pu, ip_Pub, host_Pub, depth_Pri, 
                               pkt_PrivTo, conn_Priv, hostMarker_PrivTo, 
                               daddr_Priv, hostidx_Priv, hidx_PrivT, 
                               otherEntry_Priv, i_Priv, indicies_Priv, 
                               portDomain_Priv, sourcePort_Priv, destPort_Priv, 
                               new_sport_Priv, good, depth_E, i_E, j_, ip_E, 
                               host_E, indecies_, depth_Ev, i_Ev, j_E, ip_Ev, 
                               host_Ev, indecies_E, i_C, i_Ch, depth_Pub, 
                               pkt_Pub, ipkt_Pub, entry_Pub, conn_PubT, 
                               hostMarker_Pub, ip_idx_Pub, ipidx_Pub, ip_PubT, 
                               host_PubT, depth_Priv, pkt_PrivToP, conn_PrivT, 
                               hostMarker_PrivToP, daddr, hostidx, hidx, 
                               otherEntry, i_PrivT, indicies, portDomain, 
                               sourcePort, destPort, new_sport, depth_PubT, 
                               pkt, ipkt, entry, conn_PubTo, hostMarker, 
                               ip_idx, ipidx, ip_PubTo, host_PubTo, depth, 
                               i_Eve, j, ip_Eve, host_Eve, indecies, i, aa >>

ATIP3(self) == /\ pc[self] = "ATIP3"
               /\ stack' = [stack EXCEPT ![self] = << [ procedure |->  "PubToPrivMan",
                                                        pc        |->  "ATIP4",
                                                        pkt_P     |->  pkt_P[self],
                                                        ipkt_P    |->  ipkt_P[self],
                                                        entry_P   |->  entry_P[self],
                                                        conn_Pu   |->  conn_Pu[self],
                                                        hostMarker_P |->  hostMarker_P[self],
                                                        ip_idx_P  |->  ip_idx_P[self],
                                                        ipidx_P   |->  ipidx_P[self],
                                                        ip_Pu     |->  ip_Pu[self],
                                                        host_Pu   |->  host_Pu[self],
                                                        IP        |->  IP[self] ] >>
                                                    \o stack[self]]
               /\ pkt_P' = [pkt_P EXCEPT ![self] = defaultInitValue]
               /\ ipkt_P' = [ipkt_P EXCEPT ![self] = defaultInitValue]
               /\ entry_P' = [entry_P EXCEPT ![self] = defaultInitValue]
               /\ conn_Pu' = [conn_Pu EXCEPT ![self] = defaultInitValue]
               /\ hostMarker_P' = [hostMarker_P EXCEPT ![self] = defaultInitValue]
               /\ ip_idx_P' = [ip_idx_P EXCEPT ![self] = defaultInitValue]
               /\ ipidx_P' = [ipidx_P EXCEPT ![self] = defaultInitValue]
               /\ ip_Pu' = [ip_Pu EXCEPT ![self] = defaultInitValue]
               /\ host_Pu' = [host_Pu EXCEPT ![self] = defaultInitValue]
               /\ IP' = [IP EXCEPT ![self] = defaultInitValue]
               /\ pc' = [pc EXCEPT ![self] = "pubtoprivManStart"]
               /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, Bb, Cc, 
                               Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, Ll, Mm, Nn, Oo, 
                               Pp, Qq, Rr, Ss, Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, 
                               H2, MaxPorts, EP1, PortMap1, EP2, PortMap2, 
                               TableFull, EvictionReroute, PortScanInv, 
                               ATIPInv, MaxTableSize, hosts, FreeHosts, 
                               UsedHosts, Ports, ExtraPorts, ExtraExtraPorts, 
                               T, FreeIPs, PrivIPs, PubIPs, PortSpace, UsedIPs, 
                               Connections, SendQueue, RcvQueue, MAX, Marker1, 
                               Marker2, CmdConnect, CmdDisconnect, 
                               PortSpaceFull, depth_, host_, hidx_, host_idx_, 
                               pidx_, port_idx_, depth_D, ip_, host_D, 
                               connDomain_, cidx_, conn_, host_Con, ip_C, 
                               hidx_C, host_idx_C, pidx_C, port_idx_C, 
                               host_Dis, ip_Di, connDomain_D, cidx_D, conn_D, 
                               host, ip, connDomain_Di, cidx_Di, conn_Di, 
                               depth_P, pkt_, ipkt_, entry_, conn_P, 
                               hostMarker_, ip_idx_, ipidx_, ip_P, host_P, 
                               conn_PrivTo, sport_, dstAddr_, dport_, pkt_Pr, 
                               hostMarker_Pr, daddr_, hostidx_, hidx_P, 
                               otherEntry_, i_, indicies_, portDomain_, 
                               sourcePort_, destPort_, new_sport_, conn, sport, 
                               dstAddr, dport, pkt_Pri, hostMarker_Pri, 
                               daddr_P, hostidx_P, hidx_Pr, otherEntry_P, i_P, 
                               indicies_P, portDomain_P, sourcePort_P, 
                               destPort_P, new_sport_P, depth_Pr, pkt_Priv, 
                               conn_Pr, hostMarker_Priv, daddr_Pr, hostidx_Pr, 
                               hidx_Pri, otherEntry_Pr, i_Pr, indicies_Pr, 
                               portDomain_Pr, sourcePort_Pr, destPort_Pr, 
                               new_sport_Pr, pkt_PrivT, conn_Pri, 
                               hostMarker_PrivT, daddr_Pri, hostidx_Pri, 
                               hidx_Priv, otherEntry_Pri, i_Pri, indicies_Pri, 
                               portDomain_Pri, sourcePort_Pri, destPort_Pri, 
                               new_sport_Pri, depth_C, host_C, hidx_Co, 
                               host_idx_Co, pidx_Co, port_idx_Co, connhost, 
                               port, host_Co, hidx_Con, host_idx, pidx, 
                               port_idx, depth_Di, ip_D, host_Di, connDomain, 
                               cidx, conn_Dis, depth_Pu, pkt_Pu, ipkt_Pu, 
                               entry_Pu, conn_Pub, hostMarker_Pu, ip_idx_Pu, 
                               ipidx_Pu, ip_Pub, host_Pub, depth_Pri, 
                               pkt_PrivTo, conn_Priv, hostMarker_PrivTo, 
                               daddr_Priv, hostidx_Priv, hidx_PrivT, 
                               otherEntry_Priv, i_Priv, indicies_Priv, 
                               portDomain_Priv, sourcePort_Priv, destPort_Priv, 
                               new_sport_Priv, good, depth_E, i_E, j_, ip_E, 
                               host_E, indecies_, depth_Ev, i_Ev, j_E, ip_Ev, 
                               host_Ev, indecies_E, i_C, i_Ch, depth_Pub, 
                               pkt_Pub, ipkt_Pub, entry_Pub, conn_PubT, 
                               hostMarker_Pub, ip_idx_Pub, ipidx_Pub, ip_PubT, 
                               host_PubT, depth_Priv, pkt_PrivToP, conn_PrivT, 
                               hostMarker_PrivToP, daddr, hostidx, hidx, 
                               otherEntry, i_PrivT, indicies, portDomain, 
                               sourcePort, destPort, new_sport, depth_PubT, 
                               pkt, ipkt, entry, conn_PubTo, hostMarker, 
                               ip_idx, ipidx, ip_PubTo, host_PubTo, depth, 
                               i_Eve, j, ip_Eve, host_Eve, indecies, i, aa >>

ATIP4(self) == /\ pc[self] = "ATIP4"
               /\ PrintT(<<"SendQueue after pubtopriv:", SendQueue>>)
               /\ pc' = [pc EXCEPT ![self] = "ATIP5"]
               /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, Bb, Cc, 
                               Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, Ll, Mm, Nn, Oo, 
                               Pp, Qq, Rr, Ss, Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, 
                               H2, MaxPorts, EP1, PortMap1, EP2, PortMap2, 
                               TableFull, EvictionReroute, PortScanInv, 
                               ATIPInv, MaxTableSize, hosts, FreeHosts, 
                               UsedHosts, Ports, ExtraPorts, ExtraExtraPorts, 
                               T, FreeIPs, PrivIPs, PubIPs, PortSpace, UsedIPs, 
                               Connections, SendQueue, RcvQueue, MAX, Marker1, 
                               Marker2, CmdConnect, CmdDisconnect, 
                               PortSpaceFull, stack, depth_, host_, hidx_, 
                               host_idx_, pidx_, port_idx_, depth_D, ip_, 
                               host_D, connDomain_, cidx_, conn_, host_Con, 
                               ip_C, hidx_C, host_idx_C, pidx_C, port_idx_C, 
                               host_Dis, ip_Di, connDomain_D, cidx_D, conn_D, 
                               host, ip, connDomain_Di, cidx_Di, conn_Di, 
                               depth_P, pkt_, ipkt_, entry_, conn_P, 
                               hostMarker_, ip_idx_, ipidx_, ip_P, host_P, 
                               pkt_P, ipkt_P, entry_P, conn_Pu, hostMarker_P, 
                               ip_idx_P, ipidx_P, ip_Pu, host_Pu, IP, 
                               conn_PrivTo, sport_, dstAddr_, dport_, pkt_Pr, 
                               hostMarker_Pr, daddr_, hostidx_, hidx_P, 
                               otherEntry_, i_, indicies_, portDomain_, 
                               sourcePort_, destPort_, new_sport_, conn, sport, 
                               dstAddr, dport, pkt_Pri, hostMarker_Pri, 
                               daddr_P, hostidx_P, hidx_Pr, otherEntry_P, i_P, 
                               indicies_P, portDomain_P, sourcePort_P, 
                               destPort_P, new_sport_P, depth_Pr, pkt_Priv, 
                               conn_Pr, hostMarker_Priv, daddr_Pr, hostidx_Pr, 
                               hidx_Pri, otherEntry_Pr, i_Pr, indicies_Pr, 
                               portDomain_Pr, sourcePort_Pr, destPort_Pr, 
                               new_sport_Pr, pkt_PrivT, conn_Pri, 
                               hostMarker_PrivT, daddr_Pri, hostidx_Pri, 
                               hidx_Priv, otherEntry_Pri, i_Pri, indicies_Pri, 
                               portDomain_Pri, sourcePort_Pri, destPort_Pri, 
                               new_sport_Pri, depth_C, host_C, hidx_Co, 
                               host_idx_Co, pidx_Co, port_idx_Co, connhost, 
                               port, host_Co, hidx_Con, host_idx, pidx, 
                               port_idx, depth_Di, ip_D, host_Di, connDomain, 
                               cidx, conn_Dis, depth_Pu, pkt_Pu, ipkt_Pu, 
                               entry_Pu, conn_Pub, hostMarker_Pu, ip_idx_Pu, 
                               ipidx_Pu, ip_Pub, host_Pub, depth_Pri, 
                               pkt_PrivTo, conn_Priv, hostMarker_PrivTo, 
                               daddr_Priv, hostidx_Priv, hidx_PrivT, 
                               otherEntry_Priv, i_Priv, indicies_Priv, 
                               portDomain_Priv, sourcePort_Priv, destPort_Priv, 
                               new_sport_Priv, good, depth_E, i_E, j_, ip_E, 
                               host_E, indecies_, depth_Ev, i_Ev, j_E, ip_Ev, 
                               host_Ev, indecies_E, i_C, i_Ch, depth_Pub, 
                               pkt_Pub, ipkt_Pub, entry_Pub, conn_PubT, 
                               hostMarker_Pub, ip_idx_Pub, ipidx_Pub, ip_PubT, 
                               host_PubT, depth_Priv, pkt_PrivToP, conn_PrivT, 
                               hostMarker_PrivToP, daddr, hostidx, hidx, 
                               otherEntry, i_PrivT, indicies, portDomain, 
                               sourcePort, destPort, new_sport, depth_PubT, 
                               pkt, ipkt, entry, conn_PubTo, hostMarker, 
                               ip_idx, ipidx, ip_PubTo, host_PubTo, depth, 
                               i_Eve, j, ip_Eve, host_Eve, indecies, i, aa >>

ATIP5(self) == /\ pc[self] = "ATIP5"
               /\ PrintT(<<"T after pubtopriv: ",T>>)
               /\ pc' = [pc EXCEPT ![self] = "ATIP6"]
               /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, Bb, Cc, 
                               Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, Ll, Mm, Nn, Oo, 
                               Pp, Qq, Rr, Ss, Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, 
                               H2, MaxPorts, EP1, PortMap1, EP2, PortMap2, 
                               TableFull, EvictionReroute, PortScanInv, 
                               ATIPInv, MaxTableSize, hosts, FreeHosts, 
                               UsedHosts, Ports, ExtraPorts, ExtraExtraPorts, 
                               T, FreeIPs, PrivIPs, PubIPs, PortSpace, UsedIPs, 
                               Connections, SendQueue, RcvQueue, MAX, Marker1, 
                               Marker2, CmdConnect, CmdDisconnect, 
                               PortSpaceFull, stack, depth_, host_, hidx_, 
                               host_idx_, pidx_, port_idx_, depth_D, ip_, 
                               host_D, connDomain_, cidx_, conn_, host_Con, 
                               ip_C, hidx_C, host_idx_C, pidx_C, port_idx_C, 
                               host_Dis, ip_Di, connDomain_D, cidx_D, conn_D, 
                               host, ip, connDomain_Di, cidx_Di, conn_Di, 
                               depth_P, pkt_, ipkt_, entry_, conn_P, 
                               hostMarker_, ip_idx_, ipidx_, ip_P, host_P, 
                               pkt_P, ipkt_P, entry_P, conn_Pu, hostMarker_P, 
                               ip_idx_P, ipidx_P, ip_Pu, host_Pu, IP, 
                               conn_PrivTo, sport_, dstAddr_, dport_, pkt_Pr, 
                               hostMarker_Pr, daddr_, hostidx_, hidx_P, 
                               otherEntry_, i_, indicies_, portDomain_, 
                               sourcePort_, destPort_, new_sport_, conn, sport, 
                               dstAddr, dport, pkt_Pri, hostMarker_Pri, 
                               daddr_P, hostidx_P, hidx_Pr, otherEntry_P, i_P, 
                               indicies_P, portDomain_P, sourcePort_P, 
                               destPort_P, new_sport_P, depth_Pr, pkt_Priv, 
                               conn_Pr, hostMarker_Priv, daddr_Pr, hostidx_Pr, 
                               hidx_Pri, otherEntry_Pr, i_Pr, indicies_Pr, 
                               portDomain_Pr, sourcePort_Pr, destPort_Pr, 
                               new_sport_Pr, pkt_PrivT, conn_Pri, 
                               hostMarker_PrivT, daddr_Pri, hostidx_Pri, 
                               hidx_Priv, otherEntry_Pri, i_Pri, indicies_Pri, 
                               portDomain_Pri, sourcePort_Pri, destPort_Pri, 
                               new_sport_Pri, depth_C, host_C, hidx_Co, 
                               host_idx_Co, pidx_Co, port_idx_Co, connhost, 
                               port, host_Co, hidx_Con, host_idx, pidx, 
                               port_idx, depth_Di, ip_D, host_Di, connDomain, 
                               cidx, conn_Dis, depth_Pu, pkt_Pu, ipkt_Pu, 
                               entry_Pu, conn_Pub, hostMarker_Pu, ip_idx_Pu, 
                               ipidx_Pu, ip_Pub, host_Pub, depth_Pri, 
                               pkt_PrivTo, conn_Priv, hostMarker_PrivTo, 
                               daddr_Priv, hostidx_Priv, hidx_PrivT, 
                               otherEntry_Priv, i_Priv, indicies_Priv, 
                               portDomain_Priv, sourcePort_Priv, destPort_Priv, 
                               new_sport_Priv, good, depth_E, i_E, j_, ip_E, 
                               host_E, indecies_, depth_Ev, i_Ev, j_E, ip_Ev, 
                               host_Ev, indecies_E, i_C, i_Ch, depth_Pub, 
                               pkt_Pub, ipkt_Pub, entry_Pub, conn_PubT, 
                               hostMarker_Pub, ip_idx_Pub, ipidx_Pub, ip_PubT, 
                               host_PubT, depth_Priv, pkt_PrivToP, conn_PrivT, 
                               hostMarker_PrivToP, daddr, hostidx, hidx, 
                               otherEntry, i_PrivT, indicies, portDomain, 
                               sourcePort, destPort, new_sport, depth_PubT, 
                               pkt, ipkt, entry, conn_PubTo, hostMarker, 
                               ip_idx, ipidx, ip_PubTo, host_PubTo, depth, 
                               i_Eve, j, ip_Eve, host_Eve, indecies, i, aa >>

ATIP6(self) == /\ pc[self] = "ATIP6"
               /\ /\ conn' = [conn EXCEPT ![self] = <<A, H1>>]
                  /\ dport' = [dport EXCEPT ![self] = F]
                  /\ dstAddr' = [dstAddr EXCEPT ![self] = Y]
                  /\ sport' = [sport EXCEPT ![self] = N]
                  /\ stack' = [stack EXCEPT ![self] = << [ procedure |->  "PrivToPubManExit",
                                                           pc        |->  "ATIP7",
                                                           pkt_Pri   |->  pkt_Pri[self],
                                                           hostMarker_Pri |->  hostMarker_Pri[self],
                                                           daddr_P   |->  daddr_P[self],
                                                           hostidx_P |->  hostidx_P[self],
                                                           hidx_Pr   |->  hidx_Pr[self],
                                                           otherEntry_P |->  otherEntry_P[self],
                                                           i_P       |->  i_P[self],
                                                           indicies_P |->  indicies_P[self],
                                                           portDomain_P |->  portDomain_P[self],
                                                           sourcePort_P |->  sourcePort_P[self],
                                                           destPort_P |->  destPort_P[self],
                                                           new_sport_P |->  new_sport_P[self],
                                                           conn      |->  conn[self],
                                                           sport     |->  sport[self],
                                                           dstAddr   |->  dstAddr[self],
                                                           dport     |->  dport[self] ] >>
                                                       \o stack[self]]
               /\ pkt_Pri' = [pkt_Pri EXCEPT ![self] = defaultInitValue]
               /\ hostMarker_Pri' = [hostMarker_Pri EXCEPT ![self] = defaultInitValue]
               /\ daddr_P' = [daddr_P EXCEPT ![self] = defaultInitValue]
               /\ hostidx_P' = [hostidx_P EXCEPT ![self] = defaultInitValue]
               /\ hidx_Pr' = [hidx_Pr EXCEPT ![self] = defaultInitValue]
               /\ otherEntry_P' = [otherEntry_P EXCEPT ![self] = defaultInitValue]
               /\ i_P' = [i_P EXCEPT ![self] = defaultInitValue]
               /\ indicies_P' = [indicies_P EXCEPT ![self] = defaultInitValue]
               /\ portDomain_P' = [portDomain_P EXCEPT ![self] = defaultInitValue]
               /\ sourcePort_P' = [sourcePort_P EXCEPT ![self] = defaultInitValue]
               /\ destPort_P' = [destPort_P EXCEPT ![self] = defaultInitValue]
               /\ new_sport_P' = [new_sport_P EXCEPT ![self] = defaultInitValue]
               /\ pc' = [pc EXCEPT ![self] = "privtopubManStart_P"]
               /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, Bb, Cc, 
                               Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, Ll, Mm, Nn, Oo, 
                               Pp, Qq, Rr, Ss, Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, 
                               H2, MaxPorts, EP1, PortMap1, EP2, PortMap2, 
                               TableFull, EvictionReroute, PortScanInv, 
                               ATIPInv, MaxTableSize, hosts, FreeHosts, 
                               UsedHosts, Ports, ExtraPorts, ExtraExtraPorts, 
                               T, FreeIPs, PrivIPs, PubIPs, PortSpace, UsedIPs, 
                               Connections, SendQueue, RcvQueue, MAX, Marker1, 
                               Marker2, CmdConnect, CmdDisconnect, 
                               PortSpaceFull, depth_, host_, hidx_, host_idx_, 
                               pidx_, port_idx_, depth_D, ip_, host_D, 
                               connDomain_, cidx_, conn_, host_Con, ip_C, 
                               hidx_C, host_idx_C, pidx_C, port_idx_C, 
                               host_Dis, ip_Di, connDomain_D, cidx_D, conn_D, 
                               host, ip, connDomain_Di, cidx_Di, conn_Di, 
                               depth_P, pkt_, ipkt_, entry_, conn_P, 
                               hostMarker_, ip_idx_, ipidx_, ip_P, host_P, 
                               pkt_P, ipkt_P, entry_P, conn_Pu, hostMarker_P, 
                               ip_idx_P, ipidx_P, ip_Pu, host_Pu, IP, 
                               conn_PrivTo, sport_, dstAddr_, dport_, pkt_Pr, 
                               hostMarker_Pr, daddr_, hostidx_, hidx_P, 
                               otherEntry_, i_, indicies_, portDomain_, 
                               sourcePort_, destPort_, new_sport_, depth_Pr, 
                               pkt_Priv, conn_Pr, hostMarker_Priv, daddr_Pr, 
                               hostidx_Pr, hidx_Pri, otherEntry_Pr, i_Pr, 
                               indicies_Pr, portDomain_Pr, sourcePort_Pr, 
                               destPort_Pr, new_sport_Pr, pkt_PrivT, conn_Pri, 
                               hostMarker_PrivT, daddr_Pri, hostidx_Pri, 
                               hidx_Priv, otherEntry_Pri, i_Pri, indicies_Pri, 
                               portDomain_Pri, sourcePort_Pri, destPort_Pri, 
                               new_sport_Pri, depth_C, host_C, hidx_Co, 
                               host_idx_Co, pidx_Co, port_idx_Co, connhost, 
                               port, host_Co, hidx_Con, host_idx, pidx, 
                               port_idx, depth_Di, ip_D, host_Di, connDomain, 
                               cidx, conn_Dis, depth_Pu, pkt_Pu, ipkt_Pu, 
                               entry_Pu, conn_Pub, hostMarker_Pu, ip_idx_Pu, 
                               ipidx_Pu, ip_Pub, host_Pub, depth_Pri, 
                               pkt_PrivTo, conn_Priv, hostMarker_PrivTo, 
                               daddr_Priv, hostidx_Priv, hidx_PrivT, 
                               otherEntry_Priv, i_Priv, indicies_Priv, 
                               portDomain_Priv, sourcePort_Priv, destPort_Priv, 
                               new_sport_Priv, good, depth_E, i_E, j_, ip_E, 
                               host_E, indecies_, depth_Ev, i_Ev, j_E, ip_Ev, 
                               host_Ev, indecies_E, i_C, i_Ch, depth_Pub, 
                               pkt_Pub, ipkt_Pub, entry_Pub, conn_PubT, 
                               hostMarker_Pub, ip_idx_Pub, ipidx_Pub, ip_PubT, 
                               host_PubT, depth_Priv, pkt_PrivToP, conn_PrivT, 
                               hostMarker_PrivToP, daddr, hostidx, hidx, 
                               otherEntry, i_PrivT, indicies, portDomain, 
                               sourcePort, destPort, new_sport, depth_PubT, 
                               pkt, ipkt, entry, conn_PubTo, hostMarker, 
                               ip_idx, ipidx, ip_PubTo, host_PubTo, depth, 
                               i_Eve, j, ip_Eve, host_Eve, indecies, i, aa >>

ATIP7(self) == /\ pc[self] = "ATIP7"
               /\ PrintT(<<"SendQueue after privtopub:", SendQueue>>)
               /\ pc' = [pc EXCEPT ![self] = "ATIP8"]
               /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, Bb, Cc, 
                               Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, Ll, Mm, Nn, Oo, 
                               Pp, Qq, Rr, Ss, Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, 
                               H2, MaxPorts, EP1, PortMap1, EP2, PortMap2, 
                               TableFull, EvictionReroute, PortScanInv, 
                               ATIPInv, MaxTableSize, hosts, FreeHosts, 
                               UsedHosts, Ports, ExtraPorts, ExtraExtraPorts, 
                               T, FreeIPs, PrivIPs, PubIPs, PortSpace, UsedIPs, 
                               Connections, SendQueue, RcvQueue, MAX, Marker1, 
                               Marker2, CmdConnect, CmdDisconnect, 
                               PortSpaceFull, stack, depth_, host_, hidx_, 
                               host_idx_, pidx_, port_idx_, depth_D, ip_, 
                               host_D, connDomain_, cidx_, conn_, host_Con, 
                               ip_C, hidx_C, host_idx_C, pidx_C, port_idx_C, 
                               host_Dis, ip_Di, connDomain_D, cidx_D, conn_D, 
                               host, ip, connDomain_Di, cidx_Di, conn_Di, 
                               depth_P, pkt_, ipkt_, entry_, conn_P, 
                               hostMarker_, ip_idx_, ipidx_, ip_P, host_P, 
                               pkt_P, ipkt_P, entry_P, conn_Pu, hostMarker_P, 
                               ip_idx_P, ipidx_P, ip_Pu, host_Pu, IP, 
                               conn_PrivTo, sport_, dstAddr_, dport_, pkt_Pr, 
                               hostMarker_Pr, daddr_, hostidx_, hidx_P, 
                               otherEntry_, i_, indicies_, portDomain_, 
                               sourcePort_, destPort_, new_sport_, conn, sport, 
                               dstAddr, dport, pkt_Pri, hostMarker_Pri, 
                               daddr_P, hostidx_P, hidx_Pr, otherEntry_P, i_P, 
                               indicies_P, portDomain_P, sourcePort_P, 
                               destPort_P, new_sport_P, depth_Pr, pkt_Priv, 
                               conn_Pr, hostMarker_Priv, daddr_Pr, hostidx_Pr, 
                               hidx_Pri, otherEntry_Pr, i_Pr, indicies_Pr, 
                               portDomain_Pr, sourcePort_Pr, destPort_Pr, 
                               new_sport_Pr, pkt_PrivT, conn_Pri, 
                               hostMarker_PrivT, daddr_Pri, hostidx_Pri, 
                               hidx_Priv, otherEntry_Pri, i_Pri, indicies_Pri, 
                               portDomain_Pri, sourcePort_Pri, destPort_Pri, 
                               new_sport_Pri, depth_C, host_C, hidx_Co, 
                               host_idx_Co, pidx_Co, port_idx_Co, connhost, 
                               port, host_Co, hidx_Con, host_idx, pidx, 
                               port_idx, depth_Di, ip_D, host_Di, connDomain, 
                               cidx, conn_Dis, depth_Pu, pkt_Pu, ipkt_Pu, 
                               entry_Pu, conn_Pub, hostMarker_Pu, ip_idx_Pu, 
                               ipidx_Pu, ip_Pub, host_Pub, depth_Pri, 
                               pkt_PrivTo, conn_Priv, hostMarker_PrivTo, 
                               daddr_Priv, hostidx_Priv, hidx_PrivT, 
                               otherEntry_Priv, i_Priv, indicies_Priv, 
                               portDomain_Priv, sourcePort_Priv, destPort_Priv, 
                               new_sport_Priv, good, depth_E, i_E, j_, ip_E, 
                               host_E, indecies_, depth_Ev, i_Ev, j_E, ip_Ev, 
                               host_Ev, indecies_E, i_C, i_Ch, depth_Pub, 
                               pkt_Pub, ipkt_Pub, entry_Pub, conn_PubT, 
                               hostMarker_Pub, ip_idx_Pub, ipidx_Pub, ip_PubT, 
                               host_PubT, depth_Priv, pkt_PrivToP, conn_PrivT, 
                               hostMarker_PrivToP, daddr, hostidx, hidx, 
                               otherEntry, i_PrivT, indicies, portDomain, 
                               sourcePort, destPort, new_sport, depth_PubT, 
                               pkt, ipkt, entry, conn_PubTo, hostMarker, 
                               ip_idx, ipidx, ip_PubTo, host_PubTo, depth, 
                               i_Eve, j, ip_Eve, host_Eve, indecies, i, aa >>

ATIP8(self) == /\ pc[self] = "ATIP8"
               /\ PrintT(<<"T after privtopub: ",T>>)
               /\ pc' = [pc EXCEPT ![self] = "ATIP13"]
               /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, Bb, Cc, 
                               Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, Ll, Mm, Nn, Oo, 
                               Pp, Qq, Rr, Ss, Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, 
                               H2, MaxPorts, EP1, PortMap1, EP2, PortMap2, 
                               TableFull, EvictionReroute, PortScanInv, 
                               ATIPInv, MaxTableSize, hosts, FreeHosts, 
                               UsedHosts, Ports, ExtraPorts, ExtraExtraPorts, 
                               T, FreeIPs, PrivIPs, PubIPs, PortSpace, UsedIPs, 
                               Connections, SendQueue, RcvQueue, MAX, Marker1, 
                               Marker2, CmdConnect, CmdDisconnect, 
                               PortSpaceFull, stack, depth_, host_, hidx_, 
                               host_idx_, pidx_, port_idx_, depth_D, ip_, 
                               host_D, connDomain_, cidx_, conn_, host_Con, 
                               ip_C, hidx_C, host_idx_C, pidx_C, port_idx_C, 
                               host_Dis, ip_Di, connDomain_D, cidx_D, conn_D, 
                               host, ip, connDomain_Di, cidx_Di, conn_Di, 
                               depth_P, pkt_, ipkt_, entry_, conn_P, 
                               hostMarker_, ip_idx_, ipidx_, ip_P, host_P, 
                               pkt_P, ipkt_P, entry_P, conn_Pu, hostMarker_P, 
                               ip_idx_P, ipidx_P, ip_Pu, host_Pu, IP, 
                               conn_PrivTo, sport_, dstAddr_, dport_, pkt_Pr, 
                               hostMarker_Pr, daddr_, hostidx_, hidx_P, 
                               otherEntry_, i_, indicies_, portDomain_, 
                               sourcePort_, destPort_, new_sport_, conn, sport, 
                               dstAddr, dport, pkt_Pri, hostMarker_Pri, 
                               daddr_P, hostidx_P, hidx_Pr, otherEntry_P, i_P, 
                               indicies_P, portDomain_P, sourcePort_P, 
                               destPort_P, new_sport_P, depth_Pr, pkt_Priv, 
                               conn_Pr, hostMarker_Priv, daddr_Pr, hostidx_Pr, 
                               hidx_Pri, otherEntry_Pr, i_Pr, indicies_Pr, 
                               portDomain_Pr, sourcePort_Pr, destPort_Pr, 
                               new_sport_Pr, pkt_PrivT, conn_Pri, 
                               hostMarker_PrivT, daddr_Pri, hostidx_Pri, 
                               hidx_Priv, otherEntry_Pri, i_Pri, indicies_Pri, 
                               portDomain_Pri, sourcePort_Pri, destPort_Pri, 
                               new_sport_Pri, depth_C, host_C, hidx_Co, 
                               host_idx_Co, pidx_Co, port_idx_Co, connhost, 
                               port, host_Co, hidx_Con, host_idx, pidx, 
                               port_idx, depth_Di, ip_D, host_Di, connDomain, 
                               cidx, conn_Dis, depth_Pu, pkt_Pu, ipkt_Pu, 
                               entry_Pu, conn_Pub, hostMarker_Pu, ip_idx_Pu, 
                               ipidx_Pu, ip_Pub, host_Pub, depth_Pri, 
                               pkt_PrivTo, conn_Priv, hostMarker_PrivTo, 
                               daddr_Priv, hostidx_Priv, hidx_PrivT, 
                               otherEntry_Priv, i_Priv, indicies_Priv, 
                               portDomain_Priv, sourcePort_Priv, destPort_Priv, 
                               new_sport_Priv, good, depth_E, i_E, j_, ip_E, 
                               host_E, indecies_, depth_Ev, i_Ev, j_E, ip_Ev, 
                               host_Ev, indecies_E, i_C, i_Ch, depth_Pub, 
                               pkt_Pub, ipkt_Pub, entry_Pub, conn_PubT, 
                               hostMarker_Pub, ip_idx_Pub, ipidx_Pub, ip_PubT, 
                               host_PubT, depth_Priv, pkt_PrivToP, conn_PrivT, 
                               hostMarker_PrivToP, daddr, hostidx, hidx, 
                               otherEntry, i_PrivT, indicies, portDomain, 
                               sourcePort, destPort, new_sport, depth_PubT, 
                               pkt, ipkt, entry, conn_PubTo, hostMarker, 
                               ip_idx, ipidx, ip_PubTo, host_PubTo, depth, 
                               i_Eve, j, ip_Eve, host_Eve, indecies, i, aa >>

ATIP13(self) == /\ pc[self] = "ATIP13"
                /\ stack' = [stack EXCEPT ![self] = << [ procedure |->  "PubToPrivMan",
                                                         pc        |->  "ATIP14",
                                                         pkt_P     |->  pkt_P[self],
                                                         ipkt_P    |->  ipkt_P[self],
                                                         entry_P   |->  entry_P[self],
                                                         conn_Pu   |->  conn_Pu[self],
                                                         hostMarker_P |->  hostMarker_P[self],
                                                         ip_idx_P  |->  ip_idx_P[self],
                                                         ipidx_P   |->  ipidx_P[self],
                                                         ip_Pu     |->  ip_Pu[self],
                                                         host_Pu   |->  host_Pu[self],
                                                         IP        |->  IP[self] ] >>
                                                     \o stack[self]]
                /\ pkt_P' = [pkt_P EXCEPT ![self] = defaultInitValue]
                /\ ipkt_P' = [ipkt_P EXCEPT ![self] = defaultInitValue]
                /\ entry_P' = [entry_P EXCEPT ![self] = defaultInitValue]
                /\ conn_Pu' = [conn_Pu EXCEPT ![self] = defaultInitValue]
                /\ hostMarker_P' = [hostMarker_P EXCEPT ![self] = defaultInitValue]
                /\ ip_idx_P' = [ip_idx_P EXCEPT ![self] = defaultInitValue]
                /\ ipidx_P' = [ipidx_P EXCEPT ![self] = defaultInitValue]
                /\ ip_Pu' = [ip_Pu EXCEPT ![self] = defaultInitValue]
                /\ host_Pu' = [host_Pu EXCEPT ![self] = defaultInitValue]
                /\ IP' = [IP EXCEPT ![self] = defaultInitValue]
                /\ pc' = [pc EXCEPT ![self] = "pubtoprivManStart"]
                /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, Bb, Cc, 
                                Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, Ll, Mm, Nn, Oo, 
                                Pp, Qq, Rr, Ss, Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, 
                                H2, MaxPorts, EP1, PortMap1, EP2, PortMap2, 
                                TableFull, EvictionReroute, PortScanInv, 
                                ATIPInv, MaxTableSize, hosts, FreeHosts, 
                                UsedHosts, Ports, ExtraPorts, ExtraExtraPorts, 
                                T, FreeIPs, PrivIPs, PubIPs, PortSpace, 
                                UsedIPs, Connections, SendQueue, RcvQueue, MAX, 
                                Marker1, Marker2, CmdConnect, CmdDisconnect, 
                                PortSpaceFull, depth_, host_, hidx_, host_idx_, 
                                pidx_, port_idx_, depth_D, ip_, host_D, 
                                connDomain_, cidx_, conn_, host_Con, ip_C, 
                                hidx_C, host_idx_C, pidx_C, port_idx_C, 
                                host_Dis, ip_Di, connDomain_D, cidx_D, conn_D, 
                                host, ip, connDomain_Di, cidx_Di, conn_Di, 
                                depth_P, pkt_, ipkt_, entry_, conn_P, 
                                hostMarker_, ip_idx_, ipidx_, ip_P, host_P, 
                                conn_PrivTo, sport_, dstAddr_, dport_, pkt_Pr, 
                                hostMarker_Pr, daddr_, hostidx_, hidx_P, 
                                otherEntry_, i_, indicies_, portDomain_, 
                                sourcePort_, destPort_, new_sport_, conn, 
                                sport, dstAddr, dport, pkt_Pri, hostMarker_Pri, 
                                daddr_P, hostidx_P, hidx_Pr, otherEntry_P, i_P, 
                                indicies_P, portDomain_P, sourcePort_P, 
                                destPort_P, new_sport_P, depth_Pr, pkt_Priv, 
                                conn_Pr, hostMarker_Priv, daddr_Pr, hostidx_Pr, 
                                hidx_Pri, otherEntry_Pr, i_Pr, indicies_Pr, 
                                portDomain_Pr, sourcePort_Pr, destPort_Pr, 
                                new_sport_Pr, pkt_PrivT, conn_Pri, 
                                hostMarker_PrivT, daddr_Pri, hostidx_Pri, 
                                hidx_Priv, otherEntry_Pri, i_Pri, indicies_Pri, 
                                portDomain_Pri, sourcePort_Pri, destPort_Pri, 
                                new_sport_Pri, depth_C, host_C, hidx_Co, 
                                host_idx_Co, pidx_Co, port_idx_Co, connhost, 
                                port, host_Co, hidx_Con, host_idx, pidx, 
                                port_idx, depth_Di, ip_D, host_Di, connDomain, 
                                cidx, conn_Dis, depth_Pu, pkt_Pu, ipkt_Pu, 
                                entry_Pu, conn_Pub, hostMarker_Pu, ip_idx_Pu, 
                                ipidx_Pu, ip_Pub, host_Pub, depth_Pri, 
                                pkt_PrivTo, conn_Priv, hostMarker_PrivTo, 
                                daddr_Priv, hostidx_Priv, hidx_PrivT, 
                                otherEntry_Priv, i_Priv, indicies_Priv, 
                                portDomain_Priv, sourcePort_Priv, 
                                destPort_Priv, new_sport_Priv, good, depth_E, 
                                i_E, j_, ip_E, host_E, indecies_, depth_Ev, 
                                i_Ev, j_E, ip_Ev, host_Ev, indecies_E, i_C, 
                                i_Ch, depth_Pub, pkt_Pub, ipkt_Pub, entry_Pub, 
                                conn_PubT, hostMarker_Pub, ip_idx_Pub, 
                                ipidx_Pub, ip_PubT, host_PubT, depth_Priv, 
                                pkt_PrivToP, conn_PrivT, hostMarker_PrivToP, 
                                daddr, hostidx, hidx, otherEntry, i_PrivT, 
                                indicies, portDomain, sourcePort, destPort, 
                                new_sport, depth_PubT, pkt, ipkt, entry, 
                                conn_PubTo, hostMarker, ip_idx, ipidx, 
                                ip_PubTo, host_PubTo, depth, i_Eve, j, ip_Eve, 
                                host_Eve, indecies, i, aa >>

ATIP14(self) == /\ pc[self] = "ATIP14"
                /\ PrintT(<<"SendQueue2 after pubtopriv:", SendQueue>>)
                /\ pc' = [pc EXCEPT ![self] = "ATIP15"]
                /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, Bb, Cc, 
                                Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, Ll, Mm, Nn, Oo, 
                                Pp, Qq, Rr, Ss, Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, 
                                H2, MaxPorts, EP1, PortMap1, EP2, PortMap2, 
                                TableFull, EvictionReroute, PortScanInv, 
                                ATIPInv, MaxTableSize, hosts, FreeHosts, 
                                UsedHosts, Ports, ExtraPorts, ExtraExtraPorts, 
                                T, FreeIPs, PrivIPs, PubIPs, PortSpace, 
                                UsedIPs, Connections, SendQueue, RcvQueue, MAX, 
                                Marker1, Marker2, CmdConnect, CmdDisconnect, 
                                PortSpaceFull, stack, depth_, host_, hidx_, 
                                host_idx_, pidx_, port_idx_, depth_D, ip_, 
                                host_D, connDomain_, cidx_, conn_, host_Con, 
                                ip_C, hidx_C, host_idx_C, pidx_C, port_idx_C, 
                                host_Dis, ip_Di, connDomain_D, cidx_D, conn_D, 
                                host, ip, connDomain_Di, cidx_Di, conn_Di, 
                                depth_P, pkt_, ipkt_, entry_, conn_P, 
                                hostMarker_, ip_idx_, ipidx_, ip_P, host_P, 
                                pkt_P, ipkt_P, entry_P, conn_Pu, hostMarker_P, 
                                ip_idx_P, ipidx_P, ip_Pu, host_Pu, IP, 
                                conn_PrivTo, sport_, dstAddr_, dport_, pkt_Pr, 
                                hostMarker_Pr, daddr_, hostidx_, hidx_P, 
                                otherEntry_, i_, indicies_, portDomain_, 
                                sourcePort_, destPort_, new_sport_, conn, 
                                sport, dstAddr, dport, pkt_Pri, hostMarker_Pri, 
                                daddr_P, hostidx_P, hidx_Pr, otherEntry_P, i_P, 
                                indicies_P, portDomain_P, sourcePort_P, 
                                destPort_P, new_sport_P, depth_Pr, pkt_Priv, 
                                conn_Pr, hostMarker_Priv, daddr_Pr, hostidx_Pr, 
                                hidx_Pri, otherEntry_Pr, i_Pr, indicies_Pr, 
                                portDomain_Pr, sourcePort_Pr, destPort_Pr, 
                                new_sport_Pr, pkt_PrivT, conn_Pri, 
                                hostMarker_PrivT, daddr_Pri, hostidx_Pri, 
                                hidx_Priv, otherEntry_Pri, i_Pri, indicies_Pri, 
                                portDomain_Pri, sourcePort_Pri, destPort_Pri, 
                                new_sport_Pri, depth_C, host_C, hidx_Co, 
                                host_idx_Co, pidx_Co, port_idx_Co, connhost, 
                                port, host_Co, hidx_Con, host_idx, pidx, 
                                port_idx, depth_Di, ip_D, host_Di, connDomain, 
                                cidx, conn_Dis, depth_Pu, pkt_Pu, ipkt_Pu, 
                                entry_Pu, conn_Pub, hostMarker_Pu, ip_idx_Pu, 
                                ipidx_Pu, ip_Pub, host_Pub, depth_Pri, 
                                pkt_PrivTo, conn_Priv, hostMarker_PrivTo, 
                                daddr_Priv, hostidx_Priv, hidx_PrivT, 
                                otherEntry_Priv, i_Priv, indicies_Priv, 
                                portDomain_Priv, sourcePort_Priv, 
                                destPort_Priv, new_sport_Priv, good, depth_E, 
                                i_E, j_, ip_E, host_E, indecies_, depth_Ev, 
                                i_Ev, j_E, ip_Ev, host_Ev, indecies_E, i_C, 
                                i_Ch, depth_Pub, pkt_Pub, ipkt_Pub, entry_Pub, 
                                conn_PubT, hostMarker_Pub, ip_idx_Pub, 
                                ipidx_Pub, ip_PubT, host_PubT, depth_Priv, 
                                pkt_PrivToP, conn_PrivT, hostMarker_PrivToP, 
                                daddr, hostidx, hidx, otherEntry, i_PrivT, 
                                indicies, portDomain, sourcePort, destPort, 
                                new_sport, depth_PubT, pkt, ipkt, entry, 
                                conn_PubTo, hostMarker, ip_idx, ipidx, 
                                ip_PubTo, host_PubTo, depth, i_Eve, j, ip_Eve, 
                                host_Eve, indecies, i, aa >>

ATIP15(self) == /\ pc[self] = "ATIP15"
                /\ PrintT(<<"T2 after pubtopriv: ",T>>)
                /\ pc' = [pc EXCEPT ![self] = "ATIP9"]
                /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, Bb, Cc, 
                                Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, Ll, Mm, Nn, Oo, 
                                Pp, Qq, Rr, Ss, Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, 
                                H2, MaxPorts, EP1, PortMap1, EP2, PortMap2, 
                                TableFull, EvictionReroute, PortScanInv, 
                                ATIPInv, MaxTableSize, hosts, FreeHosts, 
                                UsedHosts, Ports, ExtraPorts, ExtraExtraPorts, 
                                T, FreeIPs, PrivIPs, PubIPs, PortSpace, 
                                UsedIPs, Connections, SendQueue, RcvQueue, MAX, 
                                Marker1, Marker2, CmdConnect, CmdDisconnect, 
                                PortSpaceFull, stack, depth_, host_, hidx_, 
                                host_idx_, pidx_, port_idx_, depth_D, ip_, 
                                host_D, connDomain_, cidx_, conn_, host_Con, 
                                ip_C, hidx_C, host_idx_C, pidx_C, port_idx_C, 
                                host_Dis, ip_Di, connDomain_D, cidx_D, conn_D, 
                                host, ip, connDomain_Di, cidx_Di, conn_Di, 
                                depth_P, pkt_, ipkt_, entry_, conn_P, 
                                hostMarker_, ip_idx_, ipidx_, ip_P, host_P, 
                                pkt_P, ipkt_P, entry_P, conn_Pu, hostMarker_P, 
                                ip_idx_P, ipidx_P, ip_Pu, host_Pu, IP, 
                                conn_PrivTo, sport_, dstAddr_, dport_, pkt_Pr, 
                                hostMarker_Pr, daddr_, hostidx_, hidx_P, 
                                otherEntry_, i_, indicies_, portDomain_, 
                                sourcePort_, destPort_, new_sport_, conn, 
                                sport, dstAddr, dport, pkt_Pri, hostMarker_Pri, 
                                daddr_P, hostidx_P, hidx_Pr, otherEntry_P, i_P, 
                                indicies_P, portDomain_P, sourcePort_P, 
                                destPort_P, new_sport_P, depth_Pr, pkt_Priv, 
                                conn_Pr, hostMarker_Priv, daddr_Pr, hostidx_Pr, 
                                hidx_Pri, otherEntry_Pr, i_Pr, indicies_Pr, 
                                portDomain_Pr, sourcePort_Pr, destPort_Pr, 
                                new_sport_Pr, pkt_PrivT, conn_Pri, 
                                hostMarker_PrivT, daddr_Pri, hostidx_Pri, 
                                hidx_Priv, otherEntry_Pri, i_Pri, indicies_Pri, 
                                portDomain_Pri, sourcePort_Pri, destPort_Pri, 
                                new_sport_Pri, depth_C, host_C, hidx_Co, 
                                host_idx_Co, pidx_Co, port_idx_Co, connhost, 
                                port, host_Co, hidx_Con, host_idx, pidx, 
                                port_idx, depth_Di, ip_D, host_Di, connDomain, 
                                cidx, conn_Dis, depth_Pu, pkt_Pu, ipkt_Pu, 
                                entry_Pu, conn_Pub, hostMarker_Pu, ip_idx_Pu, 
                                ipidx_Pu, ip_Pub, host_Pub, depth_Pri, 
                                pkt_PrivTo, conn_Priv, hostMarker_PrivTo, 
                                daddr_Priv, hostidx_Priv, hidx_PrivT, 
                                otherEntry_Priv, i_Priv, indicies_Priv, 
                                portDomain_Priv, sourcePort_Priv, 
                                destPort_Priv, new_sport_Priv, good, depth_E, 
                                i_E, j_, ip_E, host_E, indecies_, depth_Ev, 
                                i_Ev, j_E, ip_Ev, host_Ev, indecies_E, i_C, 
                                i_Ch, depth_Pub, pkt_Pub, ipkt_Pub, entry_Pub, 
                                conn_PubT, hostMarker_Pub, ip_idx_Pub, 
                                ipidx_Pub, ip_PubT, host_PubT, depth_Priv, 
                                pkt_PrivToP, conn_PrivT, hostMarker_PrivToP, 
                                daddr, hostidx, hidx, otherEntry, i_PrivT, 
                                indicies, portDomain, sourcePort, destPort, 
                                new_sport, depth_PubT, pkt, ipkt, entry, 
                                conn_PubTo, hostMarker, ip_idx, ipidx, 
                                ip_PubTo, host_PubTo, depth, i_Eve, j, ip_Eve, 
                                host_Eve, indecies, i, aa >>

ATIP9(self) == /\ pc[self] = "ATIP9"
               /\ /\ connhost' = [connhost EXCEPT ![self] = H2]
                  /\ port' = [port EXCEPT ![self] = F]
                  /\ stack' = [stack EXCEPT ![self] = << [ procedure |->  "ConnectMan3",
                                                           pc        |->  "ATIP10",
                                                           host_Co   |->  host_Co[self],
                                                           hidx_Con  |->  hidx_Con[self],
                                                           host_idx  |->  host_idx[self],
                                                           pidx      |->  pidx[self],
                                                           port_idx  |->  port_idx[self],
                                                           connhost  |->  connhost[self],
                                                           port      |->  port[self] ] >>
                                                       \o stack[self]]
               /\ host_Co' = [host_Co EXCEPT ![self] = defaultInitValue]
               /\ hidx_Con' = [hidx_Con EXCEPT ![self] = defaultInitValue]
               /\ host_idx' = [host_idx EXCEPT ![self] = defaultInitValue]
               /\ pidx' = [pidx EXCEPT ![self] = defaultInitValue]
               /\ port_idx' = [port_idx EXCEPT ![self] = defaultInitValue]
               /\ pc' = [pc EXCEPT ![self] = "connectIf"]
               /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, Bb, Cc, 
                               Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, Ll, Mm, Nn, Oo, 
                               Pp, Qq, Rr, Ss, Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, 
                               H2, MaxPorts, EP1, PortMap1, EP2, PortMap2, 
                               TableFull, EvictionReroute, PortScanInv, 
                               ATIPInv, MaxTableSize, hosts, FreeHosts, 
                               UsedHosts, Ports, ExtraPorts, ExtraExtraPorts, 
                               T, FreeIPs, PrivIPs, PubIPs, PortSpace, UsedIPs, 
                               Connections, SendQueue, RcvQueue, MAX, Marker1, 
                               Marker2, CmdConnect, CmdDisconnect, 
                               PortSpaceFull, depth_, host_, hidx_, host_idx_, 
                               pidx_, port_idx_, depth_D, ip_, host_D, 
                               connDomain_, cidx_, conn_, host_Con, ip_C, 
                               hidx_C, host_idx_C, pidx_C, port_idx_C, 
                               host_Dis, ip_Di, connDomain_D, cidx_D, conn_D, 
                               host, ip, connDomain_Di, cidx_Di, conn_Di, 
                               depth_P, pkt_, ipkt_, entry_, conn_P, 
                               hostMarker_, ip_idx_, ipidx_, ip_P, host_P, 
                               pkt_P, ipkt_P, entry_P, conn_Pu, hostMarker_P, 
                               ip_idx_P, ipidx_P, ip_Pu, host_Pu, IP, 
                               conn_PrivTo, sport_, dstAddr_, dport_, pkt_Pr, 
                               hostMarker_Pr, daddr_, hostidx_, hidx_P, 
                               otherEntry_, i_, indicies_, portDomain_, 
                               sourcePort_, destPort_, new_sport_, conn, sport, 
                               dstAddr, dport, pkt_Pri, hostMarker_Pri, 
                               daddr_P, hostidx_P, hidx_Pr, otherEntry_P, i_P, 
                               indicies_P, portDomain_P, sourcePort_P, 
                               destPort_P, new_sport_P, depth_Pr, pkt_Priv, 
                               conn_Pr, hostMarker_Priv, daddr_Pr, hostidx_Pr, 
                               hidx_Pri, otherEntry_Pr, i_Pr, indicies_Pr, 
                               portDomain_Pr, sourcePort_Pr, destPort_Pr, 
                               new_sport_Pr, pkt_PrivT, conn_Pri, 
                               hostMarker_PrivT, daddr_Pri, hostidx_Pri, 
                               hidx_Priv, otherEntry_Pri, i_Pri, indicies_Pri, 
                               portDomain_Pri, sourcePort_Pri, destPort_Pri, 
                               new_sport_Pri, depth_C, host_C, hidx_Co, 
                               host_idx_Co, pidx_Co, port_idx_Co, depth_Di, 
                               ip_D, host_Di, connDomain, cidx, conn_Dis, 
                               depth_Pu, pkt_Pu, ipkt_Pu, entry_Pu, conn_Pub, 
                               hostMarker_Pu, ip_idx_Pu, ipidx_Pu, ip_Pub, 
                               host_Pub, depth_Pri, pkt_PrivTo, conn_Priv, 
                               hostMarker_PrivTo, daddr_Priv, hostidx_Priv, 
                               hidx_PrivT, otherEntry_Priv, i_Priv, 
                               indicies_Priv, portDomain_Priv, sourcePort_Priv, 
                               destPort_Priv, new_sport_Priv, good, depth_E, 
                               i_E, j_, ip_E, host_E, indecies_, depth_Ev, 
                               i_Ev, j_E, ip_Ev, host_Ev, indecies_E, i_C, 
                               i_Ch, depth_Pub, pkt_Pub, ipkt_Pub, entry_Pub, 
                               conn_PubT, hostMarker_Pub, ip_idx_Pub, 
                               ipidx_Pub, ip_PubT, host_PubT, depth_Priv, 
                               pkt_PrivToP, conn_PrivT, hostMarker_PrivToP, 
                               daddr, hostidx, hidx, otherEntry, i_PrivT, 
                               indicies, portDomain, sourcePort, destPort, 
                               new_sport, depth_PubT, pkt, ipkt, entry, 
                               conn_PubTo, hostMarker, ip_idx, ipidx, ip_PubTo, 
                               host_PubTo, depth, i_Eve, j, ip_Eve, host_Eve, 
                               indecies, i, aa >>

ATIP10(self) == /\ pc[self] = "ATIP10"
                /\ PrintT(<<"SendQueue3 after Connect:", SendQueue>>)
                /\ pc' = [pc EXCEPT ![self] = "ATIP11"]
                /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, Bb, Cc, 
                                Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, Ll, Mm, Nn, Oo, 
                                Pp, Qq, Rr, Ss, Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, 
                                H2, MaxPorts, EP1, PortMap1, EP2, PortMap2, 
                                TableFull, EvictionReroute, PortScanInv, 
                                ATIPInv, MaxTableSize, hosts, FreeHosts, 
                                UsedHosts, Ports, ExtraPorts, ExtraExtraPorts, 
                                T, FreeIPs, PrivIPs, PubIPs, PortSpace, 
                                UsedIPs, Connections, SendQueue, RcvQueue, MAX, 
                                Marker1, Marker2, CmdConnect, CmdDisconnect, 
                                PortSpaceFull, stack, depth_, host_, hidx_, 
                                host_idx_, pidx_, port_idx_, depth_D, ip_, 
                                host_D, connDomain_, cidx_, conn_, host_Con, 
                                ip_C, hidx_C, host_idx_C, pidx_C, port_idx_C, 
                                host_Dis, ip_Di, connDomain_D, cidx_D, conn_D, 
                                host, ip, connDomain_Di, cidx_Di, conn_Di, 
                                depth_P, pkt_, ipkt_, entry_, conn_P, 
                                hostMarker_, ip_idx_, ipidx_, ip_P, host_P, 
                                pkt_P, ipkt_P, entry_P, conn_Pu, hostMarker_P, 
                                ip_idx_P, ipidx_P, ip_Pu, host_Pu, IP, 
                                conn_PrivTo, sport_, dstAddr_, dport_, pkt_Pr, 
                                hostMarker_Pr, daddr_, hostidx_, hidx_P, 
                                otherEntry_, i_, indicies_, portDomain_, 
                                sourcePort_, destPort_, new_sport_, conn, 
                                sport, dstAddr, dport, pkt_Pri, hostMarker_Pri, 
                                daddr_P, hostidx_P, hidx_Pr, otherEntry_P, i_P, 
                                indicies_P, portDomain_P, sourcePort_P, 
                                destPort_P, new_sport_P, depth_Pr, pkt_Priv, 
                                conn_Pr, hostMarker_Priv, daddr_Pr, hostidx_Pr, 
                                hidx_Pri, otherEntry_Pr, i_Pr, indicies_Pr, 
                                portDomain_Pr, sourcePort_Pr, destPort_Pr, 
                                new_sport_Pr, pkt_PrivT, conn_Pri, 
                                hostMarker_PrivT, daddr_Pri, hostidx_Pri, 
                                hidx_Priv, otherEntry_Pri, i_Pri, indicies_Pri, 
                                portDomain_Pri, sourcePort_Pri, destPort_Pri, 
                                new_sport_Pri, depth_C, host_C, hidx_Co, 
                                host_idx_Co, pidx_Co, port_idx_Co, connhost, 
                                port, host_Co, hidx_Con, host_idx, pidx, 
                                port_idx, depth_Di, ip_D, host_Di, connDomain, 
                                cidx, conn_Dis, depth_Pu, pkt_Pu, ipkt_Pu, 
                                entry_Pu, conn_Pub, hostMarker_Pu, ip_idx_Pu, 
                                ipidx_Pu, ip_Pub, host_Pub, depth_Pri, 
                                pkt_PrivTo, conn_Priv, hostMarker_PrivTo, 
                                daddr_Priv, hostidx_Priv, hidx_PrivT, 
                                otherEntry_Priv, i_Priv, indicies_Priv, 
                                portDomain_Priv, sourcePort_Priv, 
                                destPort_Priv, new_sport_Priv, good, depth_E, 
                                i_E, j_, ip_E, host_E, indecies_, depth_Ev, 
                                i_Ev, j_E, ip_Ev, host_Ev, indecies_E, i_C, 
                                i_Ch, depth_Pub, pkt_Pub, ipkt_Pub, entry_Pub, 
                                conn_PubT, hostMarker_Pub, ip_idx_Pub, 
                                ipidx_Pub, ip_PubT, host_PubT, depth_Priv, 
                                pkt_PrivToP, conn_PrivT, hostMarker_PrivToP, 
                                daddr, hostidx, hidx, otherEntry, i_PrivT, 
                                indicies, portDomain, sourcePort, destPort, 
                                new_sport, depth_PubT, pkt, ipkt, entry, 
                                conn_PubTo, hostMarker, ip_idx, ipidx, 
                                ip_PubTo, host_PubTo, depth, i_Eve, j, ip_Eve, 
                                host_Eve, indecies, i, aa >>

ATIP11(self) == /\ pc[self] = "ATIP11"
                /\ stack' = [stack EXCEPT ![self] = << [ procedure |->  "PubToPrivMan",
                                                         pc        |->  "ATIP12",
                                                         pkt_P     |->  pkt_P[self],
                                                         ipkt_P    |->  ipkt_P[self],
                                                         entry_P   |->  entry_P[self],
                                                         conn_Pu   |->  conn_Pu[self],
                                                         hostMarker_P |->  hostMarker_P[self],
                                                         ip_idx_P  |->  ip_idx_P[self],
                                                         ipidx_P   |->  ipidx_P[self],
                                                         ip_Pu     |->  ip_Pu[self],
                                                         host_Pu   |->  host_Pu[self],
                                                         IP        |->  IP[self] ] >>
                                                     \o stack[self]]
                /\ pkt_P' = [pkt_P EXCEPT ![self] = defaultInitValue]
                /\ ipkt_P' = [ipkt_P EXCEPT ![self] = defaultInitValue]
                /\ entry_P' = [entry_P EXCEPT ![self] = defaultInitValue]
                /\ conn_Pu' = [conn_Pu EXCEPT ![self] = defaultInitValue]
                /\ hostMarker_P' = [hostMarker_P EXCEPT ![self] = defaultInitValue]
                /\ ip_idx_P' = [ip_idx_P EXCEPT ![self] = defaultInitValue]
                /\ ipidx_P' = [ipidx_P EXCEPT ![self] = defaultInitValue]
                /\ ip_Pu' = [ip_Pu EXCEPT ![self] = defaultInitValue]
                /\ host_Pu' = [host_Pu EXCEPT ![self] = defaultInitValue]
                /\ IP' = [IP EXCEPT ![self] = defaultInitValue]
                /\ pc' = [pc EXCEPT ![self] = "pubtoprivManStart"]
                /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, Bb, Cc, 
                                Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, Ll, Mm, Nn, Oo, 
                                Pp, Qq, Rr, Ss, Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, 
                                H2, MaxPorts, EP1, PortMap1, EP2, PortMap2, 
                                TableFull, EvictionReroute, PortScanInv, 
                                ATIPInv, MaxTableSize, hosts, FreeHosts, 
                                UsedHosts, Ports, ExtraPorts, ExtraExtraPorts, 
                                T, FreeIPs, PrivIPs, PubIPs, PortSpace, 
                                UsedIPs, Connections, SendQueue, RcvQueue, MAX, 
                                Marker1, Marker2, CmdConnect, CmdDisconnect, 
                                PortSpaceFull, depth_, host_, hidx_, host_idx_, 
                                pidx_, port_idx_, depth_D, ip_, host_D, 
                                connDomain_, cidx_, conn_, host_Con, ip_C, 
                                hidx_C, host_idx_C, pidx_C, port_idx_C, 
                                host_Dis, ip_Di, connDomain_D, cidx_D, conn_D, 
                                host, ip, connDomain_Di, cidx_Di, conn_Di, 
                                depth_P, pkt_, ipkt_, entry_, conn_P, 
                                hostMarker_, ip_idx_, ipidx_, ip_P, host_P, 
                                conn_PrivTo, sport_, dstAddr_, dport_, pkt_Pr, 
                                hostMarker_Pr, daddr_, hostidx_, hidx_P, 
                                otherEntry_, i_, indicies_, portDomain_, 
                                sourcePort_, destPort_, new_sport_, conn, 
                                sport, dstAddr, dport, pkt_Pri, hostMarker_Pri, 
                                daddr_P, hostidx_P, hidx_Pr, otherEntry_P, i_P, 
                                indicies_P, portDomain_P, sourcePort_P, 
                                destPort_P, new_sport_P, depth_Pr, pkt_Priv, 
                                conn_Pr, hostMarker_Priv, daddr_Pr, hostidx_Pr, 
                                hidx_Pri, otherEntry_Pr, i_Pr, indicies_Pr, 
                                portDomain_Pr, sourcePort_Pr, destPort_Pr, 
                                new_sport_Pr, pkt_PrivT, conn_Pri, 
                                hostMarker_PrivT, daddr_Pri, hostidx_Pri, 
                                hidx_Priv, otherEntry_Pri, i_Pri, indicies_Pri, 
                                portDomain_Pri, sourcePort_Pri, destPort_Pri, 
                                new_sport_Pri, depth_C, host_C, hidx_Co, 
                                host_idx_Co, pidx_Co, port_idx_Co, connhost, 
                                port, host_Co, hidx_Con, host_idx, pidx, 
                                port_idx, depth_Di, ip_D, host_Di, connDomain, 
                                cidx, conn_Dis, depth_Pu, pkt_Pu, ipkt_Pu, 
                                entry_Pu, conn_Pub, hostMarker_Pu, ip_idx_Pu, 
                                ipidx_Pu, ip_Pub, host_Pub, depth_Pri, 
                                pkt_PrivTo, conn_Priv, hostMarker_PrivTo, 
                                daddr_Priv, hostidx_Priv, hidx_PrivT, 
                                otherEntry_Priv, i_Priv, indicies_Priv, 
                                portDomain_Priv, sourcePort_Priv, 
                                destPort_Priv, new_sport_Priv, good, depth_E, 
                                i_E, j_, ip_E, host_E, indecies_, depth_Ev, 
                                i_Ev, j_E, ip_Ev, host_Ev, indecies_E, i_C, 
                                i_Ch, depth_Pub, pkt_Pub, ipkt_Pub, entry_Pub, 
                                conn_PubT, hostMarker_Pub, ip_idx_Pub, 
                                ipidx_Pub, ip_PubT, host_PubT, depth_Priv, 
                                pkt_PrivToP, conn_PrivT, hostMarker_PrivToP, 
                                daddr, hostidx, hidx, otherEntry, i_PrivT, 
                                indicies, portDomain, sourcePort, destPort, 
                                new_sport, depth_PubT, pkt, ipkt, entry, 
                                conn_PubTo, hostMarker, ip_idx, ipidx, 
                                ip_PubTo, host_PubTo, depth, i_Eve, j, ip_Eve, 
                                host_Eve, indecies, i, aa >>

ATIP12(self) == /\ pc[self] = "ATIP12"
                /\ PrintT(<<"Connections after pubtopriv: ",Connections>>)
                /\ pc' = [pc EXCEPT ![self] = "Error"]
                /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, Bb, Cc, 
                                Dd, Ee, Ff, Gg, Hh, Ii, Jj, Kk, Ll, Mm, Nn, Oo, 
                                Pp, Qq, Rr, Ss, Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, 
                                H2, MaxPorts, EP1, PortMap1, EP2, PortMap2, 
                                TableFull, EvictionReroute, PortScanInv, 
                                ATIPInv, MaxTableSize, hosts, FreeHosts, 
                                UsedHosts, Ports, ExtraPorts, ExtraExtraPorts, 
                                T, FreeIPs, PrivIPs, PubIPs, PortSpace, 
                                UsedIPs, Connections, SendQueue, RcvQueue, MAX, 
                                Marker1, Marker2, CmdConnect, CmdDisconnect, 
                                PortSpaceFull, stack, depth_, host_, hidx_, 
                                host_idx_, pidx_, port_idx_, depth_D, ip_, 
                                host_D, connDomain_, cidx_, conn_, host_Con, 
                                ip_C, hidx_C, host_idx_C, pidx_C, port_idx_C, 
                                host_Dis, ip_Di, connDomain_D, cidx_D, conn_D, 
                                host, ip, connDomain_Di, cidx_Di, conn_Di, 
                                depth_P, pkt_, ipkt_, entry_, conn_P, 
                                hostMarker_, ip_idx_, ipidx_, ip_P, host_P, 
                                pkt_P, ipkt_P, entry_P, conn_Pu, hostMarker_P, 
                                ip_idx_P, ipidx_P, ip_Pu, host_Pu, IP, 
                                conn_PrivTo, sport_, dstAddr_, dport_, pkt_Pr, 
                                hostMarker_Pr, daddr_, hostidx_, hidx_P, 
                                otherEntry_, i_, indicies_, portDomain_, 
                                sourcePort_, destPort_, new_sport_, conn, 
                                sport, dstAddr, dport, pkt_Pri, hostMarker_Pri, 
                                daddr_P, hostidx_P, hidx_Pr, otherEntry_P, i_P, 
                                indicies_P, portDomain_P, sourcePort_P, 
                                destPort_P, new_sport_P, depth_Pr, pkt_Priv, 
                                conn_Pr, hostMarker_Priv, daddr_Pr, hostidx_Pr, 
                                hidx_Pri, otherEntry_Pr, i_Pr, indicies_Pr, 
                                portDomain_Pr, sourcePort_Pr, destPort_Pr, 
                                new_sport_Pr, pkt_PrivT, conn_Pri, 
                                hostMarker_PrivT, daddr_Pri, hostidx_Pri, 
                                hidx_Priv, otherEntry_Pri, i_Pri, indicies_Pri, 
                                portDomain_Pri, sourcePort_Pri, destPort_Pri, 
                                new_sport_Pri, depth_C, host_C, hidx_Co, 
                                host_idx_Co, pidx_Co, port_idx_Co, connhost, 
                                port, host_Co, hidx_Con, host_idx, pidx, 
                                port_idx, depth_Di, ip_D, host_Di, connDomain, 
                                cidx, conn_Dis, depth_Pu, pkt_Pu, ipkt_Pu, 
                                entry_Pu, conn_Pub, hostMarker_Pu, ip_idx_Pu, 
                                ipidx_Pu, ip_Pub, host_Pub, depth_Pri, 
                                pkt_PrivTo, conn_Priv, hostMarker_PrivTo, 
                                daddr_Priv, hostidx_Priv, hidx_PrivT, 
                                otherEntry_Priv, i_Priv, indicies_Priv, 
                                portDomain_Priv, sourcePort_Priv, 
                                destPort_Priv, new_sport_Priv, good, depth_E, 
                                i_E, j_, ip_E, host_E, indecies_, depth_Ev, 
                                i_Ev, j_E, ip_Ev, host_Ev, indecies_E, i_C, 
                                i_Ch, depth_Pub, pkt_Pub, ipkt_Pub, entry_Pub, 
                                conn_PubT, hostMarker_Pub, ip_idx_Pub, 
                                ipidx_Pub, ip_PubT, host_PubT, depth_Priv, 
                                pkt_PrivToP, conn_PrivT, hostMarker_PrivToP, 
                                daddr, hostidx, hidx, otherEntry, i_PrivT, 
                                indicies, portDomain, sourcePort, destPort, 
                                new_sport, depth_PubT, pkt, ipkt, entry, 
                                conn_PubTo, hostMarker, ip_idx, ipidx, 
                                ip_PubTo, host_PubTo, depth, i_Eve, j, ip_Eve, 
                                host_Eve, indecies, i, aa >>

ForceATIPExit(self) == ATIP1(self) \/ ATIP2(self) \/ ATIP3(self)
                          \/ ATIP4(self) \/ ATIP5(self) \/ ATIP6(self)
                          \/ ATIP7(self) \/ ATIP8(self) \/ ATIP13(self)
                          \/ ATIP14(self) \/ ATIP15(self) \/ ATIP9(self)
                          \/ ATIP10(self) \/ ATIP11(self) \/ ATIP12(self)

foo1 == /\ pc["A"] = "foo1"
        /\ PrintT("Test")
        /\ stack' = [stack EXCEPT !["A"] = << [ procedure |->  "CheckModelATIP",
                                                pc        |->  "Done",
                                                i         |->  i["A"] ] >>
                                            \o stack["A"]]
        /\ i' = [i EXCEPT !["A"] = defaultInitValue]
        /\ pc' = [pc EXCEPT !["A"] = "checkModelStart"]
        /\ UNCHANGED << A, B, C, D, N, E, F, X, Y, Z, NN, Aa, Bb, Cc, Dd, Ee, 
                        Ff, Gg, Hh, Ii, Jj, Kk, Ll, Mm, Nn, Oo, Pp, Qq, Rr, Ss, 
                        Tt, Uu, Vv, Ww, Xx, Yy, Zz, H1, H2, MaxPorts, EP1, 
                        PortMap1, EP2, PortMap2, TableFull, EvictionReroute, 
                        PortScanInv, ATIPInv, MaxTableSize, hosts, FreeHosts, 
                        UsedHosts, Ports, ExtraPorts, ExtraExtraPorts, T, 
                        FreeIPs, PrivIPs, PubIPs, PortSpace, UsedIPs, 
                        Connections, SendQueue, RcvQueue, MAX, Marker1, 
                        Marker2, CmdConnect, CmdDisconnect, PortSpaceFull, 
                        depth_, host_, hidx_, host_idx_, pidx_, port_idx_, 
                        depth_D, ip_, host_D, connDomain_, cidx_, conn_, 
                        host_Con, ip_C, hidx_C, host_idx_C, pidx_C, port_idx_C, 
                        host_Dis, ip_Di, connDomain_D, cidx_D, conn_D, host, 
                        ip, connDomain_Di, cidx_Di, conn_Di, depth_P, pkt_, 
                        ipkt_, entry_, conn_P, hostMarker_, ip_idx_, ipidx_, 
                        ip_P, host_P, pkt_P, ipkt_P, entry_P, conn_Pu, 
                        hostMarker_P, ip_idx_P, ipidx_P, ip_Pu, host_Pu, IP, 
                        conn_PrivTo, sport_, dstAddr_, dport_, pkt_Pr, 
                        hostMarker_Pr, daddr_, hostidx_, hidx_P, otherEntry_, 
                        i_, indicies_, portDomain_, sourcePort_, destPort_, 
                        new_sport_, conn, sport, dstAddr, dport, pkt_Pri, 
                        hostMarker_Pri, daddr_P, hostidx_P, hidx_Pr, 
                        otherEntry_P, i_P, indicies_P, portDomain_P, 
                        sourcePort_P, destPort_P, new_sport_P, depth_Pr, 
                        pkt_Priv, conn_Pr, hostMarker_Priv, daddr_Pr, 
                        hostidx_Pr, hidx_Pri, otherEntry_Pr, i_Pr, indicies_Pr, 
                        portDomain_Pr, sourcePort_Pr, destPort_Pr, 
                        new_sport_Pr, pkt_PrivT, conn_Pri, hostMarker_PrivT, 
                        daddr_Pri, hostidx_Pri, hidx_Priv, otherEntry_Pri, 
                        i_Pri, indicies_Pri, portDomain_Pri, sourcePort_Pri, 
                        destPort_Pri, new_sport_Pri, depth_C, host_C, hidx_Co, 
                        host_idx_Co, pidx_Co, port_idx_Co, connhost, port, 
                        host_Co, hidx_Con, host_idx, pidx, port_idx, depth_Di, 
                        ip_D, host_Di, connDomain, cidx, conn_Dis, depth_Pu, 
                        pkt_Pu, ipkt_Pu, entry_Pu, conn_Pub, hostMarker_Pu, 
                        ip_idx_Pu, ipidx_Pu, ip_Pub, host_Pub, depth_Pri, 
                        pkt_PrivTo, conn_Priv, hostMarker_PrivTo, daddr_Priv, 
                        hostidx_Priv, hidx_PrivT, otherEntry_Priv, i_Priv, 
                        indicies_Priv, portDomain_Priv, sourcePort_Priv, 
                        destPort_Priv, new_sport_Priv, good, depth_E, i_E, j_, 
                        ip_E, host_E, indecies_, depth_Ev, i_Ev, j_E, ip_Ev, 
                        host_Ev, indecies_E, i_C, i_Ch, depth_Pub, pkt_Pub, 
                        ipkt_Pub, entry_Pub, conn_PubT, hostMarker_Pub, 
                        ip_idx_Pub, ipidx_Pub, ip_PubT, host_PubT, depth_Priv, 
                        pkt_PrivToP, conn_PrivT, hostMarker_PrivToP, daddr, 
                        hostidx, hidx, otherEntry, i_PrivT, indicies, 
                        portDomain, sourcePort, destPort, new_sport, 
                        depth_PubT, pkt, ipkt, entry, conn_PubTo, hostMarker, 
                        ip_idx, ipidx, ip_PubTo, host_PubTo, depth, i_Eve, j, 
                        ip_Eve, host_Eve, indecies, aa >>

Foo == foo1

(* Allow infinite stuttering to prevent deadlock on termination. *)
Terminating == /\ \A self \in ProcSet: pc[self] = "Done"
               /\ UNCHANGED vars

Next == Foo
           \/ (\E self \in ProcSet:  \/ ConnectVuln(self) \/ DisconnectVuln(self)
                                     \/ ConnectMan(self) \/ DisconnectMan(self)
                                     \/ DisconnectVulnMan(self)
                                     \/ PubToPrivVuln(self) \/ PubToPrivMan(self)
                                     \/ PrivToPubMan2(self)
                                     \/ PrivToPubManExit(self)
                                     \/ PrivToPubVuln(self) \/ PrivToPubMan(self)
                                     \/ Connect(self) \/ ConnectMan3(self)
                                     \/ Disconnect(self) \/ PubToPriv(self)
                                     \/ PrivToPub(self) \/ EventSequenceVuln(self)
                                     \/ EventSequence(self) \/ CheckModel(self)
                                     \/ CheckModelVuln(self)
                                     \/ PubToPrivExitVuln(self)
                                     \/ PrivToPubExit(self) \/ PubToPrivExit(self)
                                     \/ EventSequenceATIP(self)
                                     \/ CheckModelATIP(self) \/ ForceATIP(self)
                                     \/ ForceATIPExit(self))
           \/ Terminating

Spec == Init /\ [][Next]_vars

Termination == <>(\A self \in ProcSet: pc[self] = "Done")

\* END TRANSLATION 

=============================================================================
\* Modification History
\* Created Mon Feb 06 22:08:35 UTC 2023 by ben
